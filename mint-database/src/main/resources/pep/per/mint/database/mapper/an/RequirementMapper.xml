<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pep.per.mint.database.mapper.an.RequirementMapper">
    <!--
    <cache/>
    -->

    <select id="getRequirementListByPage" resultMap="requirementResultMapForList">
		SELECT
	        IDX
	        ,A.REQUIREMENT_ID
	        ,A.REQUIREMENT_NM
	        ,A.STATUS
	        ,CDAN01.NM AS STATUS_NM
	        ,A.BUSINESS_ID
        <choose>
            <when test="bizPathView != null and bizPathView eq 'Y'.toString()">
			,H.BUSINESS_NM || ' (' || G.BUSINESS_NM || ')' AS BUSINESS_NM
            </when>
            <otherwise>
			,G.BUSINESS_NM
            </otherwise>
        </choose>
	        ,G.BUSINESS_CD
	        ,A.INTERFACE_ID
	        ,A.INTEGRATION_ID
	        ,A.INTERFACE_NM
	        ,A.CHANNEL_ID
	        ,H.CHANNEL_NM
	        ,A.IMPORTANCE
	        ,CDAN02.NM AS IMPORTANCE_NM
	        ,A.DATA_PR_DIR
	        ,CDIM01.NM AS DATA_PR_DIR_NM
	        ,A.APP_PR_METHOD
	        ,CDIM02.NM AS APP_PR_METHOD_NM
	        ,A.DATA_PR_METHOD
	        ,CDIM12.NM AS DATA_PR_METHOD_NM
	        ,A.HAS_DATA_MAP
	        ,CDAN14.NM AS HAS_DATA_MAP_NM
	        ,C.SYSTEM_ID
	        ,C.SYSTEM_NM
	        ,C.SYSTEM_CD
	        ,B.SEQ AS SYS_SEQ
	        ,B.NODE_TYPE AS SYS_NODE_TYPE
	        ,CDIM08.NM AS SYS_NODE_TYPE_NM
	        ,B.SERVICE
	        ,B.SERVICE_DESC
	        ,B.RESOURCE_TYPE
	        ,E.ORG_ID
	        ,E.ORG_NM
	        ,E.ORG_CD
	        ,A.DATA_FREQ_INPUT
	        ,CDIM04.NM AS RESOURCE_NM
	        ,A.REG_DATE
	        ,COALESCE(A.MOD_DATE, A.REG_DATE) AS MOD_DATE
	        ,A.DEV_EXP_YMD
	        ,A.DEV_FIN_YMD
	        ,A.TEST_EXP_YMD
	        ,A.TEST_FIN_YMD
	        ,A.REAL_EXP_YMD
	        ,A.REAL_FIN_YMD
	        ,I.ATTRIBUTE_ID
	        ,I.ATTRIBUTE_CD
	        ,I.ATTRIBUTE_NM
	        ,I.ATTRIBUTE_VALUE
	        ,I.TYPE
		FROM (
        	SELECT
        		T1.IDX
        		,T1.INTERFACE_ID
        		,T1.INTERFACE_NM
        		,T1.INTEGRATION_ID
        		,T1.CHANNEL_ID
        		,T1.CHANNEL_CH_COMMENTS
        		,T1.CHANNEL_CH_CD
        		,T1.MAP_CD
        		,T1.IMPORTANCE
        		,T1.MAX_DELAY_TIME
        		,T1.MAX_DELAY_UNIT
        		,T1.MAX_ERROR_TIME
        		,T1.MAX_ERROR_UNIT
        		,T1.REF_PATTERN_ID
        		,T1.DATA_PR_DIR
        		,T1.APP_PR_METHOD
        		,T1.DATA_PR_METHOD
        		,T1.DATA_FREQ
        		,T1.DATA_FREQ_INPUT
        		,T1.SZ_PER_TRAN
        		,T1.CNT_PER_FREQ
        		,T1.CNT_PER_DAY
        		,T1.QTT_PER_DAY
        		,T1.START_RES_TYPE
        		,T1.END_RES_TYPE
        		,T1.START_NODE_CNT
        		,T1.END_NODE_CNT
        		,T1.DATA_ORDER_YN
        		,T1.HAS_DATA_MAP
        		,T1.REQUIREMENT_ID
		        ,T1.REQUIREMENT_NM
		        ,T1.STATUS
		        ,T1.BUSINESS_ID
		        ,T1.DEV_EXP_YMD
		        ,T1.DEV_FIN_YMD
		        ,T1.TEST_EXP_YMD
		        ,T1.TEST_FIN_YMD
		        ,T1.REAL_EXP_YMD
		        ,T1.REAL_FIN_YMD
		        ,T1.COMMENTS
		        ,T1.DEL_YN
		        ,T1.REG_DATE
		        ,T1.REG_USER
		        ,T1.MOD_DATE
		        ,T1.MOD_USER
			FROM (
        		SELECT
		        -- 어느것이 맞는지 고민해 볼것
		        -- 인터페이스 ID를 기준으로 하면 rowid로 잘라 페이징해도 페이징 내용이 추가를 제외하고 조회할때 마다 변경이 일어나지 않으나
		        -- 수정일 or 등록일로 페이징 하면 페이징 내용이  조회할때 마다 변동이 일어날 가능성을 늘 포함함
		        -- 수정일 기준 소틍으로 전체 결과를 페이징하는 대신 조회 회면에 수정일 기준 페이징 검색옵션을 주고 아래 IDX 옵션을 변경 가능하도로고 작성.
		        --ROW_NUMBER() OVER (ORDER BY TAN0201.INTERFACE_ID DESC) as IDX
        		ROW_NUMBER() OVER (ORDER BY COALESCE(TAN0101.MOD_DATE,TAN0101.REG_DATE) DESC) as IDX
		        ,TAN0201.INTERFACE_ID
		        ,TAN0201.INTERFACE_NM
		        ,TAN0201.INTEGRATION_ID
		        ,TAN0201.CHANNEL_ID
		        ,TAN0201.CHANNEL_CH_COMMENTS
		        ,TAN0201.CHANNEL_CH_CD
		        ,TAN0201.MAP_CD
		        ,TAN0201.IMPORTANCE
		        ,TAN0201.MAX_DELAY_TIME
		        ,TAN0201.MAX_DELAY_UNIT
		        ,TAN0201.MAX_ERROR_TIME
		        ,TAN0201.MAX_ERROR_UNIT
		        ,TAN0201.REF_PATTERN_ID
		        ,TAN0201.DATA_PR_DIR
		        ,TAN0201.APP_PR_METHOD
		        ,TAN0201.DATA_PR_METHOD
		        ,TAN0201.DATA_FREQ
		        ,TAN0201.DATA_FREQ_INPUT
		        ,TAN0201.SZ_PER_TRAN
		        ,TAN0201.CNT_PER_FREQ
		        ,TAN0201.CNT_PER_DAY
		        ,TAN0201.QTT_PER_DAY
		        ,TAN0201.START_RES_TYPE
		        ,TAN0201.END_RES_TYPE
		        ,TAN0201.START_NODE_CNT
		        ,TAN0201.END_NODE_CNT
		        ,TAN0201.DATA_ORDER_YN
		        ,TAN0201.HAS_DATA_MAP
		        ,TAN0101.REQUIREMENT_ID
		        ,TAN0101.REQUIREMENT_NM
		        ,TAN0101.STATUS
		        ,TAN0101.BUSINESS_ID
		        ,TAN0101.DEV_EXP_YMD
		        ,TAN0101.DEV_FIN_YMD
		        ,TAN0101.TEST_EXP_YMD
		        ,TAN0101.TEST_FIN_YMD
		        ,TAN0101.REAL_EXP_YMD
		        ,TAN0101.REAL_FIN_YMD
		        ,TAN0101.COMMENTS
		        ,TAN0101.DEL_YN
		        ,TAN0101.REG_DATE
		        ,TAN0101.REG_USER
		        ,TAN0101.MOD_DATE
		        ,TAN0101.MOD_USER
        	FROM TAN0201
        	INNER JOIN TAN0101
        	ON TAN0201.INTERFACE_ID = TAN0101.INTERFACE_ID
        	AND TAN0101.DEL_YN = #{delYn}
        <if test="dataPrMethod != null and dataPrMethod != ''">
            AND TAN0201.DATA_PR_METHOD = #{dataPrMethod}
        </if>
        <if test="dataFrequency != null and dataFrequency != ''">
            AND TAN0201.DATA_FREQ = #{dataFrequency}
        </if>
        <if test="dataPrDir != null and dataPrDir != ''">
            AND TAN0201.DATA_PR_DIR = #{dataPrDir}
        </if>
        <if test="appPrMethod != null and appPrMethod != ''">
            AND TAN0201.APP_PR_METHOD = #{appPrMethod}
        </if>
        <if test="importance != null and importance != ''">
            AND TAN0201.IMPORTANCE = #{importance}
        </if>
        <if test="hasDataMap != null and hasDataMap != ''">
            AND TAN0201.HAS_DATA_MAP = #{hasDataMap}
        </if>
        <if test="integrationId != null and integrationId != ''">
            AND TAN0201.INTEGRATION_ID LIKE '%'||#{integrationId}||'%'
        </if>
        <if test="interfaceNm != null and interfaceNm != ''">
            AND TAN0201.INTERFACE_NM LIKE '%'||#{interfaceNm}||'%'
        </if>
        <if test="channelId != null and channelId != ''">
            AND TAN0201.CHANNEL_ID = #{channelId}
        </if>
        <if test="status != null and status != null">
            AND TAN0101.STATUS = #{status}
        </if>
        <if test="requirementId != null and requirementId != ''">
            AND TAN0101.REQUIREMENT_ID = #{requirementId}
        </if>
        <if test="requirementNm != null and requirementNm != ''">
            AND TAN0101.REQUIREMENT_NM LIKE '%'||#{requirementNm}||'%'
        </if>

        <choose>
            <when test="isInterfaceAdmin != null and isInterfaceAdmin eq 'Y'.toString()">
            </when>
            <otherwise>
			INNER JOIN (
            	SELECT DISTINCT TSU0220.INTERFACE_ID
            	FROM TSU0219
            	INNER JOIN TSU0220
            	ON TSU0220.ROLE_ID = TSU0219.ROLE_ID
            	INNER JOIN TSU0101
            	ON TSU0101.USER_ID = TSU0219.USER_ID
            	AND TSU0101.DEL_YN = 'N'
            	AND TSU0101.USER_ID = #{userId}
            	UNION
            	SELECT INTERFACE_ID
            	FROM TAN0201 WHERE REG_USER = #{userId}
            ) T02
            ON TAN0201.INTERFACE_ID = T02.INTERFACE_ID
            </otherwise>
        </choose>

        <if test="systemId != null and systemId != ''">
            INNER JOIN (
	            SELECT DISTINCT TAN0213.INTERFACE_ID
	            FROM TAN0213
	            INNER JOIN TIM0102
	            ON TAN0213.SYSTEM_ID = TIM0102.C_SYS_ID
	            AND TIM0102.P_SYS_ID = #{systemId}
            ) T03
            ON TAN0201.INTERFACE_ID = T03.INTERFACE_ID
        </if>
        <if test="(service != null and service != '') or (serviceDesc != null and serviceDesc != '') or (resourceNm != null and resourceNm != '')">
            INNER JOIN (
	            SELECT DISTINCT TAN0213.INTERFACE_ID
	            FROM TAN0213
	            INNER JOIN TSU0301
	            ON TAN0213.RESOURCE_TYPE = TSU0301.CD
            <if test="service != null and service != ''">
                AND TAN0213.SERVICE LIKE '%'||#{service}||'%'
            </if>
            <if test="serviceDesc != null and serviceDesc != ''">
                AND TAN0213.SERVICE_DESC LIKE '%'||#{serviceDesc}||'%'
            </if>
            	AND TSU0301.LEVEL1 = 'IM'
            	AND TSU0301.LEVEL2 = '04'
            <if test="resourceNm != null and resourceNm != ''">
                AND TSU0301.NM LIKE '%'||#{resourceNm}||'%'
            </if>
            ) T04
            	ON TAN0201.INTERFACE_ID = T04.INTERFACE_ID
        </if>

        <if test="organizationId != null and organizationId != ''">
            INNER JOIN (
            	SELECT DISTINCT TAN0213.INTERFACE_ID
            	FROM TIM0403
            	INNER JOIN TIM0402
            	ON TIM0402.C_ORG_ID = TIM0403.ORG_ID
            	AND TIM0402.P_ORG_ID = #{organizationId}
            	INNER JOIN TIM0102
            	ON TIM0102.P_SYS_ID = TIM0403.SYSTEM_ID
            	INNER JOIN TAN0213
            	ON TAN0213.SYSTEM_ID = TIM0102.C_SYS_ID
            ) T05
            ON TAN0201.INTERFACE_ID = T05.INTERFACE_ID
        </if>
        <if test="businessId != null and businessId != ''">
            INNER JOIN (
	            SELECT DISTINCT TAN0218.INTERFACE_ID
	            FROM TAN0218
	            INNER JOIN TIM0302
	            ON TIM0302.C_BIZ_ID = TAN0218.BUSINESS_ID
	            AND TIM0302.P_BIZ_ID = #{businessId}
            ) T06
            ON TAN0201.INTERFACE_ID = T06.INTERFACE_ID
        </if>
        <if test="isRelUsers != null and isRelUsers eq 'Y'.toString()">
            INNER JOIN (
            	SELECT DISTINCT TAN0219.INTERFACE_ID
            	FROM TAN0219
            	WHERE TAN0219.USER_ID = #{userId}
            ) T07
            ON TAN0201.INTERFACE_ID = T07.INTERFACE_ID
        </if>

        ) T1
        WHERE T1.IDX <![CDATA[>=]]> #{startIndex} AND T1.IDX <![CDATA[<=]]> #{endIndex}
        ) A
        INNER JOIN TAN0213 B ON A.INTERFACE_ID = B.INTERFACE_ID
        INNER JOIN TIM0101 C ON C.SYSTEM_ID = B.SYSTEM_ID
        INNER JOIN TIM0403 D ON D.SYSTEM_ID = C.SYSTEM_ID
        INNER JOIN TIM0401 E ON E.ORG_ID = D.ORG_ID
        INNER JOIN TIM0301 G ON G.BUSINESS_ID = A.BUSINESS_ID
        INNER JOIN TIM0002 H ON H.CHANNEL_ID = A.CHANNEL_ID
        LEFT OUTER JOIN
        (
        	SELECT
        		A.CHANNEL_ID
        		, A.INTERFACE_ID
        		, B.ATTRIBUTE_ID
        		, B.ATTRIBUTE_CD
        		, B.ATTRIBUTE_NM
        		, A.ATTRIBUTE_VALUE
        		, '0' AS TYPE
        	FROM TAN0205 A
        	INNER JOIN TAN0204 B
        	ON A.CHANNEL_ID = B.CHANNEL_ID
        	AND A.ATTRIBUTE_ID = B.ATTRIBUTE_ID
        	UNION
        	SELECT
        		'' AS CHANNEL_ID
        		, A.INTERFACE_ID
        		, B.ATTRIBUTE_ID
        		, B.ATTRIBUTE_CD
        		, B.ATTRIBUTE_NM
        		, A.ATTRIBUTE_VALUE
        		, '1' AS TYPE
        	FROM TAN0203 A
        	INNER JOIN TAN0202 B
        	ON A.ATTRIBUTE_ID = B.ATTRIBUTE_ID
        ) I
        ON I.CHANNEL_ID = H.CHANNEL_ID
        AND I.INTERFACE_ID = A.INTERFACE_ID
        <if test="bizPathView != null and bizPathView eq 'Y'.toString()">
		LEFT OUTER JOIN
		(
			SELECT
	            A.BUSINESS_ID
	            ,A.BUSINESS_CD
	            ,A.BUSINESS_NM
	            ,B.C_BIZ_ID
            FROM TIM0301 A
            INNER JOIN TIM0302 B
            ON A.BUSINESS_ID = B.P_BIZ_ID
            AND B.DEPTH = 1
            ) H ON H.C_BIZ_ID = A.BUSINESS_ID
        </if>
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '01') CDAN01 ON CDAN01.CD = A.STATUS
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '08') CDIM08 ON CDIM08.CD = B.NODE_TYPE
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '04') CDIM04 ON CDIM04.CD = B.RESOURCE_TYPE
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '02') CDAN02 ON CDAN02.CD = A.IMPORTANCE
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '01') CDIM01 ON CDIM01.CD = A.DATA_PR_DIR
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '02') CDIM02 ON CDIM02.CD = A.APP_PR_METHOD
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '14') CDAN14 ON CDAN14.CD = A.HAS_DATA_MAP
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '12') CDIM12 ON CDIM12.CD = A.DATA_PR_METHOD
        ORDER BY A.IDX, H.CHANNEL_NM, G.BUSINESS_NM, A.REQUIREMENT_NM, A.INTERFACE_NM, A.STATUS
    </select>

    <select id="selectInterfacesByAttributes" resultType="string">
        <if test="channelAttributes != null">
            <foreach collection="channelAttributes" item="properties" separator=" union ">
                SELECT INTERFACE_ID
                FROM TAN0205
                WHERE CHANNEL_ID = #{properties.channelId}
                AND ATTRIBUTE_ID = #{properties.attrId}
                AND IDX 		 = #{properties.idx}
                AND ATTRIBUTE_VALUE LIKE '%'||#{properties.attrValue}||'%'
            </foreach>
        </if>
    </select>

    <sql id="selectInterfaceIdsByChannelAttribute">
        <foreach collection="channelAttributes" item="properties" separator=" union ">
            SELECT INTERFACE_ID
            FROM TAN0205
            WHERE CHANNEL_ID = #{properties.channelId}
            AND ATTRIBUTE_ID = #{properties.attrId}
            AND IDX = #{properties.idx}
            AND ATTRIBUTE_VALUE LIKE '%'||#{properties.attrValue}||'%'
        </foreach>
    </sql>

    <sql id="selectInterfaceIdsBySiteAttribute">
        <foreach collection="siteAttributes" item="properties" separator=" union ">
            SELECT INTERFACE_ID
            FROM TAN0203
            WHERE ATTRIBUTE_ID = #{properties.attrId}
            AND IDX = #{properties.idx}
            AND ATTRIBUTE_VALUE like '%'||#{properties.attrValue}||'%'
        </foreach>
    </sql>

    <select id="getRequirementTotalCount" resultType="int">
        SELECT COUNT(*) AS TOTAL_CNT
        FROM TAN0201
        INNER JOIN TAN0101
        ON TAN0201.INTERFACE_ID = TAN0101.INTERFACE_ID
        AND TAN0101.DEL_YN = #{delYn}
        <if test="dataPrMethod != null and dataPrMethod != ''">
        AND TAN0201.DATA_PR_METHOD = #{dataPrMethod}
        </if>
        <if test="dataFrequency != null and dataFrequency != ''">
        AND TAN0201.DATA_FREQ = #{dataFrequency}
        </if>
        <if test="dataPrDir != null and dataPrDir != ''">
        AND TAN0201.DATA_PR_DIR = #{dataPrDir}
        </if>
        <if test="appPrMethod != null and appPrMethod != ''">
        AND TAN0201.APP_PR_METHOD = #{appPrMethod}
        </if>
        <if test="importance != null and importance != ''">
        AND TAN0201.IMPORTANCE = #{importance}
        </if>
        <if test="hasDataMap != null and hasDataMap != ''">
        AND TAN0201.HAS_DATA_MAP = #{hasDataMap}
        </if>
        <if test="integrationId != null and integrationId != ''">
            <choose>
                <when test="integrationIdEscape != null">
        AND TAN0201.INTEGRATION_ID LIKE '%'||#{integrationId}||'%' ESCAPE #{integrationIdEscape}
                </when>
                <otherwise>
        AND TAN0201.INTEGRATION_ID LIKE '%'||#{integrationId}||'%'
                </otherwise>
            </choose>
        </if>
        <if test="interfaceNm != null and interfaceNm != ''">
        AND TAN0201.INTERFACE_NM LIKE '%'||#{interfaceNm}||'%'
        </if>
        <if test="channelId != null and channelId != ''">
        AND TAN0201.CHANNEL_ID = #{channelId}
        </if>
        <if test="status != null and status != ''">
        AND TAN0101.STATUS = #{status}
        </if>
        <if test="requirementId != null and requirementId != ''">
        AND TAN0101.REQUIREMENT_ID = #{requirementId}
        </if>
        <if test="requirementNm != null and requirementNm != ''">
        AND TAN0101.REQUIREMENT_NM LIKE '%'||#{requirementNm}||'%'
        </if>

        <choose>
            <when test="isInterfaceAdmin != null and isInterfaceAdmin eq 'Y'.toString()">
            </when>
            <otherwise>
        INNER JOIN (
        	SELECT DISTINCT TSU0220.INTERFACE_ID
        	FROM TSU0219
        	INNER JOIN TSU0220
        	ON TSU0220.ROLE_ID = TSU0219.ROLE_ID
        	INNER JOIN TSU0101
        	ON TSU0101.USER_ID = TSU0219.USER_ID
        	AND TSU0101.DEL_YN = 'N'
        	AND TSU0101.USER_ID = #{userId}
        	UNION
        	SELECT INTERFACE_ID
        	FROM TAN0201 WHERE REG_USER = #{userId}
        ) T02 ON TAN0201.INTERFACE_ID = T02.INTERFACE_ID
            </otherwise>
        </choose>

        <if test="systemId != null and systemId != ''">
        INNER JOIN (
        	SELECT DISTINCT TAN0213.INTERFACE_ID
        	FROM TAN0213
        	INNER JOIN TIM0102
        	ON TAN0213.SYSTEM_ID = TIM0102.C_SYS_ID
        	AND TIM0102.P_SYS_ID = #{systemId}
        ) T03 ON TAN0201.INTERFACE_ID = T03.INTERFACE_ID
        </if>

        <!--
        <if test="(service != null and service != '') or (serviceDesc != null and serviceDesc != '') or (resourceNm != null and resourceNm != '')">
        INNER JOIN (
            SELECT DISTINCT TAN0213.INTERFACE_ID
            FROM TAN0213
            INNER JOIN TSU0301
            ON TAN0213.RESOURCE_TYPE = TSU0301.CD
            <if test="service != null and service != ''">
            AND TAN0213.SERVICE LIKE '%'||#{service}||'%'
            </if>
            <if test="serviceDesc != null and serviceDesc != ''">
            AND TAN0213.SERVICE_DESC LIKE '%'||#{serviceDesc}||'%'
            </if>
            AND TSU0301.LEVEL1 = 'IM'
            AND TSU0301.LEVEL2 = '04'
            <if test="resourceNm != null and resourceNm != ''">
            AND TSU0301.NM LIKE '%'||#{resourceNm}||'%'
            </if>
        ) T04 ON TAN0201.INTERFACE_ID = T04.INTERFACE_ID
        </if>
        -->
		<!-- 2020.11.04 change -->
        <choose>
		    <when test='"true".equalsIgnoreCase(endpointOpt)'>
		    	<if test="(resourceNm != null and resourceNm != '')">
		        INNER JOIN (
		            SELECT DISTINCT TAN0213.INTERFACE_ID
		            FROM TAN0213
		            INNER JOIN TSU0301
		            ON TAN0213.RESOURCE_TYPE = TSU0301.CD
		            AND TSU0301.LEVEL1 = 'IM'
		            AND TSU0301.LEVEL2 = '04'
		            <if test="resourceNm != null and resourceNm != ''">
		            AND TSU0301.NM LIKE '%'||#{resourceNm}||'%'
		            </if>
		        ) T04 ON TAN0201.INTERFACE_ID = T04.INTERFACE_ID
		        </if>
		        <if test="(service != null and service != '') or (serviceDesc != null and serviceDesc != '')">
		        INNER JOIN (
			        SELECT DISTINCT TRT0101.INTERFACE_ID
				      FROM TRT0101
				INNER JOIN TRT0202
				        ON TRT0101.INTERFACE_MID = TRT0202.INTERFACE_MID
				       AND TRT0202.TAG IS NOT NULL

				       <choose>
				       	<when test="(service != null and service != '') and (serviceDesc != null and serviceDesc != '')">
				       	AND (TRT0202.TAG LIKE '%'||#{service}||'%' OR TRT0202.TAG LIKE '%'||#{serviceDesc}||'%')
				       	</when>
				       	<when test="service != null and service != ''">
				       	AND TRT0202.TAG LIKE '%'||#{service}||'%'
				       	</when>
				       	<otherwise>
				       	AND TRT0202.TAG LIKE '%'||#{serviceDesc}||'%'
				       	</otherwise>
				       </choose>
				       <!--
				       <if test="(service != null and service != '') and (serviceDesc != null and serviceDesc != '')">
				       AND (TRT0202.TAG LIKE '%'||#{service}||'%' OR TRT0202.TAG LIKE '%'||#{serviceDesc}||'%')
				       </if>
				       <if test="service != null and service != ''">
				       AND TRT0202.TAG LIKE '%'||#{service}||'%'
				       </if>
				       <if test="serviceDesc != null and serviceDesc != ''">
				       AND TRT0202.TAG LIKE '%'||#{serviceDesc}||'%'
				       </if>
				        -->

		        ) T041 ON TAN0201.INTERFACE_ID = T041.INTERFACE_ID
		        </if>
		    </when>
		    <otherwise>
		        <if test="(service != null and service != '') or (serviceDesc != null and serviceDesc != '') or (resourceNm != null and resourceNm != '')">
		        INNER JOIN (
		            SELECT DISTINCT TAN0213.INTERFACE_ID
		            FROM TAN0213
		            INNER JOIN TSU0301
		            ON TAN0213.RESOURCE_TYPE = TSU0301.CD
		            <if test="service != null and service != ''">
		            AND TAN0213.SERVICE LIKE '%'||#{service}||'%'
		            </if>
		            <if test="serviceDesc != null and serviceDesc != ''">
		            AND TAN0213.SERVICE_DESC LIKE '%'||#{serviceDesc}||'%'
		            </if>
		            AND TSU0301.LEVEL1 = 'IM'
		            AND TSU0301.LEVEL2 = '04'
		            <if test="resourceNm != null and resourceNm != ''">
		            AND TSU0301.NM LIKE '%'||#{resourceNm}||'%'
		            </if>
		        ) T04 ON TAN0201.INTERFACE_ID = T04.INTERFACE_ID
		        </if>
		    </otherwise>
		</choose>


        <if test="organizationId != null and organizationId != ''">
		INNER JOIN (
            SELECT DISTINCT TAN0213.INTERFACE_ID
            FROM TIM0403
            INNER JOIN TIM0402
            ON TIM0402.C_ORG_ID = TIM0403.ORG_ID
            AND TIM0402.P_ORG_ID = #{organizationId}
            INNER JOIN TIM0102
            ON TIM0102.P_SYS_ID = TIM0403.SYSTEM_ID
            INNER JOIN TAN0213
            ON TAN0213.SYSTEM_ID = TIM0102.C_SYS_ID
		) T05 ON TAN0201.INTERFACE_ID = T05.INTERFACE_ID
        </if>
        <if test="businessId != null and businessId != ''">
		INNER JOIN (
            SELECT DISTINCT TAN0218.INTERFACE_ID
            FROM TAN0218
            INNER JOIN TIM0302
            ON TIM0302.C_BIZ_ID = TAN0218.BUSINESS_ID
            AND TIM0302.P_BIZ_ID = #{businessId}
		) T06 ON TAN0201.INTERFACE_ID = T06.INTERFACE_ID
        </if>
        <if test="isRelUsers != null and isRelUsers eq 'Y'.toString()">
		INNER JOIN (
            SELECT DISTINCT TAN0219.INTERFACE_ID
            FROM TAN0219
            WHERE TAN0219.USER_ID = #{userId}
		) T07 ON TAN0201.INTERFACE_ID = T07.INTERFACE_ID
        </if>

        <if test="channelAttributes != null">
		INNER JOIN (
            <include refid="selectInterfaceIdsByChannelAttribute"/>
		) T08 ON TAN0201.INTERFACE_ID = T08.INTERFACE_ID
        </if>

        <if test="siteAttributes != null">
		INNER JOIN (
            <include refid="selectInterfaceIdsBySiteAttribute"/>
		) T09 ON TAN0201.INTERFACE_ID = T09.INTERFACE_ID
        </if>
    </select>

	<select id="getRequirementListByPageV2" resultMap="requirementResultMapForList">
        SELECT
	        IDX
	        ,A.REQUIREMENT_ID
	        ,A.REQUIREMENT_NM
	        ,A.STATUS
	        ,CDAN01.NM AS STATUS_NM
	        ,A.BUSINESS_ID
	        <choose>
	            <when test="bizPathView != null and bizPathView eq 'Y'.toString()">
	        ,H.BUSINESS_NM || ' (' || G.BUSINESS_NM || ')' AS BUSINESS_NM
	            </when>
	            <otherwise>
	        ,G.BUSINESS_NM
	            </otherwise>
	        </choose>
	        ,G.BUSINESS_CD
	        ,A.INTERFACE_ID
	        ,A.INTEGRATION_ID
	        ,A.INTERFACE_NM
	        ,A.CHANNEL_ID
	        ,H.CHANNEL_NM
	        ,A.IMPORTANCE
	        ,CDAN02.NM AS IMPORTANCE_NM
	        ,A.DATA_PR_DIR
	        ,CDIM01.NM AS DATA_PR_DIR_NM
	        ,A.APP_PR_METHOD
	        ,CDIM02.NM AS APP_PR_METHOD_NM
	        ,A.DATA_PR_METHOD
	        ,CDIM12.NM AS DATA_PR_METHOD_NM
	        ,A.HAS_DATA_MAP
	        ,CDAN14.NM AS HAS_DATA_MAP_NM
	        ,C.SYSTEM_ID
	        ,C.SYSTEM_NM
	        ,C.SYSTEM_CD
	        ,B.SEQ AS SYS_SEQ
	        ,B.NODE_TYPE AS SYS_NODE_TYPE
	        ,CDIM08.NM AS SYS_NODE_TYPE_NM
	        ,B.SERVICE
	        ,B.SERVICE_DESC
	        ,B.RESOURCE_TYPE
	        ,E.ORG_ID
	        ,E.ORG_NM
	        ,E.ORG_CD
	        ,A.DATA_FREQ_INPUT
	        ,CDIM04.NM AS RESOURCE_NM
	        ,A.REG_DATE
	        ,COALESCE(A.MOD_DATE, A.REG_DATE) AS MOD_DATE
	        ,A.DEV_EXP_YMD
	        ,A.DEV_FIN_YMD
	        ,A.TEST_EXP_YMD
	        ,A.TEST_FIN_YMD
	        ,A.REAL_EXP_YMD
	        ,A.REAL_FIN_YMD
	        <!--
	        ,I.ATTRIBUTE_ID
	        ,I.ATTRIBUTE_CD
	        ,I.ATTRIBUTE_NM
	        ,I.ATTRIBUTE_VALUE
	        ,I.TYPE
	         -->
        FROM (
        	SELECT
        		T1.IDX
		        ,T1.INTERFACE_ID
		        ,T1.INTERFACE_NM
		        ,T1.INTEGRATION_ID
		        ,T1.CHANNEL_ID
		        ,T1.CHANNEL_CH_COMMENTS
		        ,T1.CHANNEL_CH_CD
		        ,T1.MAP_CD
		        ,T1.IMPORTANCE
		        ,T1.MAX_DELAY_TIME
		        ,T1.MAX_DELAY_UNIT
		        ,T1.MAX_ERROR_TIME
		        ,T1.MAX_ERROR_UNIT
		        ,T1.REF_PATTERN_ID
		        ,T1.DATA_PR_DIR
		        ,T1.APP_PR_METHOD
		        ,T1.DATA_PR_METHOD
		        ,T1.DATA_FREQ
		        ,T1.DATA_FREQ_INPUT
		        ,T1.SZ_PER_TRAN
		        ,T1.CNT_PER_FREQ
		        ,T1.CNT_PER_DAY
		        ,T1.QTT_PER_DAY
		        ,T1.START_RES_TYPE
		        ,T1.END_RES_TYPE
		        ,T1.START_NODE_CNT
		        ,T1.END_NODE_CNT
		        ,T1.DATA_ORDER_YN
		        ,T1.HAS_DATA_MAP
		        ,T1.REQUIREMENT_ID
		        ,T1.REQUIREMENT_NM
		        ,T1.STATUS
		        ,T1.BUSINESS_ID
		        ,T1.DEV_EXP_YMD
		        ,T1.DEV_FIN_YMD
		        ,T1.TEST_EXP_YMD
		        ,T1.TEST_FIN_YMD
		        ,T1.REAL_EXP_YMD
		        ,T1.REAL_FIN_YMD
		        ,T1.COMMENTS
		        ,T1.DEL_YN
		        ,T1.REG_DATE
		        ,T1.REG_USER
		        ,T1.MOD_DATE
		        ,T1.MOD_USER
        	FROM (
        		SELECT
        <choose>
			<when test="_databaseId == 'postgres'">
            		(ROW_NUMBER () OVER ()) as IDX
	        </when>
	        <otherwise>
            		ROWNUM as IDX
	        </otherwise>
        </choose>
        			,TT1.*
        		FROM (
        			SELECT
				        TAN0201.INTERFACE_ID
				        ,TAN0201.INTERFACE_NM
				        ,TAN0201.INTEGRATION_ID
				        ,TAN0201.CHANNEL_ID
				        ,TAN0201.CHANNEL_CH_COMMENTS
				        ,TAN0201.CHANNEL_CH_CD
				        ,TAN0201.MAP_CD
				        ,TAN0201.IMPORTANCE
				        ,TAN0201.MAX_DELAY_TIME
				        ,TAN0201.MAX_DELAY_UNIT
				        ,TAN0201.MAX_ERROR_TIME
				        ,TAN0201.MAX_ERROR_UNIT
				        ,TAN0201.REF_PATTERN_ID
				        ,TAN0201.DATA_PR_DIR
				        ,TAN0201.APP_PR_METHOD
				        ,TAN0201.DATA_PR_METHOD
				        ,TAN0201.DATA_FREQ
				        ,TAN0201.DATA_FREQ_INPUT
				        ,TAN0201.SZ_PER_TRAN
				        ,TAN0201.CNT_PER_FREQ
				        ,TAN0201.CNT_PER_DAY
				        ,TAN0201.QTT_PER_DAY
				        ,TAN0201.START_RES_TYPE
				        ,TAN0201.END_RES_TYPE
				        ,TAN0201.START_NODE_CNT
				        ,TAN0201.END_NODE_CNT
				        ,TAN0201.DATA_ORDER_YN
				        ,TAN0201.HAS_DATA_MAP
				        ,TAN0101.REQUIREMENT_ID
				        ,TAN0101.REQUIREMENT_NM
				        ,TAN0101.STATUS
				        ,TAN0101.BUSINESS_ID
				        ,TAN0101.DEV_EXP_YMD
				        ,TAN0101.DEV_FIN_YMD
				        ,TAN0101.TEST_EXP_YMD
				        ,TAN0101.TEST_FIN_YMD
				        ,TAN0101.REAL_EXP_YMD
				        ,TAN0101.REAL_FIN_YMD
				        ,TAN0101.COMMENTS
				        ,TAN0101.DEL_YN
				        ,TAN0101.REG_DATE
				        ,TAN0101.REG_USER
				        ,TAN0101.MOD_DATE
				        ,TAN0101.MOD_USER
        			FROM TAN0201
        			INNER JOIN TAN0101
        			ON TAN0201.INTERFACE_ID = TAN0101.INTERFACE_ID
        			AND TAN0101.DEL_YN = #{delYn}
        <if test="dataPrMethod != null and dataPrMethod != ''">
            		AND TAN0201.DATA_PR_METHOD = #{dataPrMethod}
        </if>
        <if test="dataFrequency != null and dataFrequency != ''">
            		AND TAN0201.DATA_FREQ = #{dataFrequency}
        </if>
        <if test="dataPrDir != null and dataPrDir != ''">
            		AND TAN0201.DATA_PR_DIR = #{dataPrDir}
        </if>
        <if test="appPrMethod != null and appPrMethod != ''">
            		AND TAN0201.APP_PR_METHOD = #{appPrMethod}
        </if>
        <if test="importance != null and importance != ''">
            		AND TAN0201.IMPORTANCE = #{importance}
        </if>
        <if test="hasDataMap != null and hasDataMap != ''">
            		AND TAN0201.HAS_DATA_MAP = #{hasDataMap}
        </if>
        <if test="integrationId != null and integrationId != ''">
            <choose>
                <when test="integrationIdEscape != null">
                    AND TAN0201.INTEGRATION_ID LIKE '%'||#{integrationId}||'%' escape #{integrationIdEscape}
                </when>
                <otherwise>
                    AND TAN0201.INTEGRATION_ID LIKE '%'||#{integrationId}||'%'
                </otherwise>
            </choose>
        </if>
        <if test="interfaceNm != null and interfaceNm != ''">
            		AND TAN0201.INTERFACE_NM LIKE '%'||#{interfaceNm}||'%'
        </if>
        <if test="channelId != null and channelId != ''">
            		AND TAN0201.CHANNEL_ID = #{channelId}
        </if>
        <if test="status != null and status != ''">
            		AND TAN0101.STATUS = #{status}
        </if>
        <if test="requirementId != null and requirementId != ''">
            		AND TAN0101.REQUIREMENT_ID = #{requirementId}
        </if>
        <if test="requirementNm != null and requirementNm != ''">
            		AND TAN0101.REQUIREMENT_NM LIKE '%'||#{requirementNm}||'%'
        </if>

        <choose>
            <when test="isInterfaceAdmin != null and isInterfaceAdmin eq 'Y'.toString()">
            </when>
            <otherwise>
	                INNER JOIN (
	                	SELECT DISTINCT TSU0220.INTERFACE_ID
	                FROM TSU0219
	                INNER JOIN TSU0220
	                ON TSU0220.ROLE_ID = TSU0219.ROLE_ID
	                INNER JOIN TSU0101
	                ON TSU0101.USER_ID = TSU0219.USER_ID
	                AND TSU0101.DEL_YN = 'N'
	                AND TSU0101.USER_ID = #{userId}
	                UNION
	                SELECT INTERFACE_ID
	                FROM TAN0201 WHERE REG_USER = #{userId}
	                ) T02
	                ON TAN0201.INTERFACE_ID = T02.INTERFACE_ID
            </otherwise>
        </choose>

        <if test="systemId != null and systemId != ''">
		            INNER JOIN (
		            SELECT DISTINCT TAN0213.INTERFACE_ID
		            FROM TAN0213
		            INNER JOIN TIM0102
		            ON TAN0213.SYSTEM_ID = TIM0102.C_SYS_ID
		            AND TIM0102.P_SYS_ID = #{systemId}
		            ) T03
		            ON TAN0201.INTERFACE_ID = T03.INTERFACE_ID
        </if>

        <!--
        <if test="(service != null and service != '') or (serviceDesc != null and serviceDesc != '') or (resourceNm != null and resourceNm != '')">
		            INNER JOIN (
		            SELECT DISTINCT TAN0213.INTERFACE_ID
		            FROM TAN0213
		            INNER JOIN TSU0301
		            ON TAN0213.RESOURCE_TYPE = TSU0301.CD
		            <if test="service != null and service != ''">
		            AND TAN0213.SERVICE LIKE '%'||#{service}||'%'
		            </if>
		            <if test="serviceDesc != null and serviceDesc != ''">
	                AND TAN0213.SERVICE_DESC LIKE '%'||#{serviceDesc}||'%'
		            </if>
		            AND TSU0301.LEVEL1 = 'IM'
		            AND TSU0301.LEVEL2 = '04'
		            <if test="resourceNm != null and resourceNm != ''">
		            AND TSU0301.NM LIKE '%'||#{resourceNm}||'%'
		            </if>
		            ) T04
		            ON TAN0201.INTERFACE_ID = T04.INTERFACE_ID
        </if>
		-->
		<!-- 2020.11.04 change -->
        <choose>
		    <when test='"true".equalsIgnoreCase(endpointOpt)'>
		    	<if test="(resourceNm != null and resourceNm != '')">
			        INNER JOIN (
			            SELECT DISTINCT TAN0213.INTERFACE_ID
			            FROM TAN0213
			            INNER JOIN TSU0301
			            ON TAN0213.RESOURCE_TYPE = TSU0301.CD
			            AND TSU0301.LEVEL1 = 'IM'
			            AND TSU0301.LEVEL2 = '04'
			            <if test="resourceNm != null and resourceNm != ''">
			            AND TSU0301.NM LIKE '%'||#{resourceNm}||'%'
			            </if>
			        ) T04 ON TAN0201.INTERFACE_ID = T04.INTERFACE_ID
		        </if>
		        <if test="(service != null and service != '') or (serviceDesc != null and serviceDesc != '')">
			        INNER JOIN (
				        SELECT DISTINCT TRT0101.INTERFACE_ID
					      FROM TRT0101
					INNER JOIN TRT0202
					        ON TRT0101.INTERFACE_MID = TRT0202.INTERFACE_MID
					       AND TRT0202.TAG IS NOT NULL
					       <choose>
					       	<when test="(service != null and service != '') and (serviceDesc != null and serviceDesc != '')">
					       	AND (TRT0202.TAG LIKE '%'||#{service}||'%' OR TRT0202.TAG LIKE '%'||#{serviceDesc}||'%')
					       	</when>
					       	<when test="service != null and service != ''">
					       	AND TRT0202.TAG LIKE '%'||#{service}||'%'
					       	</when>
					       	<otherwise>
					       	AND TRT0202.TAG LIKE '%'||#{serviceDesc}||'%'
					       	</otherwise>
					       </choose>
					       <!--
					       <if test="(service != null and service != '') and (serviceDesc != null and serviceDesc != '')">
					       AND (TRT0202.TAG LIKE '%'||#{service}||'%' OR TRT0202.TAG LIKE '%'||#{serviceDesc}||'%')
					       </if>
					       <if test="service != null and service != ''">
					       AND TRT0202.TAG LIKE '%'||#{service}||'%'
					       </if>
					       <if test="serviceDesc != null and serviceDesc != ''">
					       AND TRT0202.TAG LIKE '%'||#{serviceDesc}||'%'
					       </if>
					       -->
			        ) T041 ON TAN0201.INTERFACE_ID = T041.INTERFACE_ID
		        </if>
		    </when>
		    <otherwise>
		        <if test="(service != null and service != '') or (serviceDesc != null and serviceDesc != '') or (resourceNm != null and resourceNm != '')">
			        INNER JOIN (
			            SELECT DISTINCT TAN0213.INTERFACE_ID
			            FROM TAN0213
			            INNER JOIN TSU0301
			            ON TAN0213.RESOURCE_TYPE = TSU0301.CD
			            <if test="service != null and service != ''">
			            AND TAN0213.SERVICE LIKE '%'||#{service}||'%'
			            </if>
			            <if test="serviceDesc != null and serviceDesc != ''">
			            AND TAN0213.SERVICE_DESC LIKE '%'||#{serviceDesc}||'%'
			            </if>
			            AND TSU0301.LEVEL1 = 'IM'
			            AND TSU0301.LEVEL2 = '04'
			            <if test="resourceNm != null and resourceNm != ''">
			            AND TSU0301.NM LIKE '%'||#{resourceNm}||'%'
			            </if>
			        ) T04 ON TAN0201.INTERFACE_ID = T04.INTERFACE_ID
		        </if>
		    </otherwise>
		</choose>


        <if test="organizationId != null and organizationId != ''">
		            INNER JOIN (
		            SELECT DISTINCT TAN0213.INTERFACE_ID
		            FROM TIM0403
		            INNER JOIN TIM0402
		            ON TIM0402.C_ORG_ID = TIM0403.ORG_ID
		            AND TIM0402.P_ORG_ID = #{organizationId}
		            INNER JOIN TIM0102
		            ON TIM0102.P_SYS_ID = TIM0403.SYSTEM_ID
		            INNER JOIN TAN0213
		            ON TAN0213.SYSTEM_ID = TIM0102.C_SYS_ID
		            ) T05
		            ON TAN0201.INTERFACE_ID = T05.INTERFACE_ID
        </if>
        <if test="businessId != null and businessId != ''">
		            INNER JOIN (
		            SELECT DISTINCT TAN0218.INTERFACE_ID
		            FROM TAN0218
		            INNER JOIN TIM0302
		            ON TIM0302.C_BIZ_ID = TAN0218.BUSINESS_ID
		            AND TIM0302.P_BIZ_ID = #{businessId}
		            ) T06
		            ON TAN0201.INTERFACE_ID = T06.INTERFACE_ID
        </if>
        <if test="isRelUsers != null and isRelUsers eq 'Y'.toString()">
		            INNER JOIN (
		            SELECT DISTINCT TAN0219.INTERFACE_ID
		            FROM TAN0219
		            WHERE TAN0219.USER_ID = #{userId}
		            ) T07
		            ON TAN0201.INTERFACE_ID = T07.INTERFACE_ID
        </if>
        <if test="channelAttributes != null">
		            INNER JOIN (
		            <include refid="selectInterfaceIdsByChannelAttribute"/>
		            ) T08 on TAN0201.INTERFACE_ID = T08.INTERFACE_ID
        </if>

        <if test="siteAttributes != null">
		            INNER JOIN (
		            <include refid="selectInterfaceIdsBySiteAttribute"/>
		            ) T09 ON TAN0201.INTERFACE_ID = T09.INTERFACE_ID
        </if>

        <choose>
            <when test="orderByField != null">
            	<choose>
	        		<when test="_databaseId == 'postgres'">
                	ORDER BY TAN0201.${orderByField} nulls last, TAN0101.ctid DESC
	        		</when>
	        		<when test="_databaseId == 'altibase'">
                	ORDER BY TAN0201.${orderByField} DESC
	        		</when>
	        		<otherwise>
                	ORDER BY TAN0201.${orderByField} nulls last, TAN0101.ROWID DESC
	        		</otherwise>
        		</choose>
            </when>
            <otherwise>
            	<choose>
	        		<when test="_databaseId == 'postgres'">
                	ORDER BY TAN0101.MOD_DATE DESC nulls last, TAN0101.ctid DESC
	        		</when>
	        		<when test="_databaseId == 'altibase'">
                	ORDER BY TAN0101.MOD_DATE DESC
	        		</when>
	        		<otherwise>
                	ORDER BY TAN0101.MOD_DATE DESC nulls last, TAN0101.ROWID DESC
	        		</otherwise>
        		</choose>
            </otherwise>
        </choose>
        			) TT1
        <choose>
			<when test="_databaseId == 'postgres'">
					LIMIT #{perCount} OFFSET #{startIndex}-1
        		) T1
	        </when>
	        <otherwise>
        			WHERE ROWNUM <![CDATA[<=]]> #{endIndex}
        		) T1
        		WHERE T1.IDX <![CDATA[>=]]> #{startIndex}
	        </otherwise>
        </choose>
        	) A
	        INNER JOIN TAN0213 B ON A.INTERFACE_ID = B.INTERFACE_ID
	        INNER JOIN TIM0101 C ON C.SYSTEM_ID = B.SYSTEM_ID
	        --INNER JOIN TIM0403 D ON D.SYSTEM_ID = C.SYSTEM_ID
	        --INNER JOIN TIM0401 E ON E.ORG_ID = D.ORG_ID
	        LEFT OUTER JOIN TIM0403 D ON D.SYSTEM_ID = C.SYSTEM_ID
	        LEFT OUTER JOIN TIM0401 E ON E.ORG_ID = D.ORG_ID
	        INNER JOIN TIM0301 G ON G.BUSINESS_ID = A.BUSINESS_ID
	        INNER JOIN TIM0002 H ON H.CHANNEL_ID = A.CHANNEL_ID
<!--
	        LEFT OUTER JOIN
	        (
	        	SELECT
	        		A.CHANNEL_ID
	        		, A.INTERFACE_ID
	        		, B.ATTRIBUTE_ID
	        		, B.ATTRIBUTE_CD
	        		, B.ATTRIBUTE_NM
	        		, A.ATTRIBUTE_VALUE
	        		, '0' AS TYPE
	        	FROM TAN0205 A
	        	INNER JOIN TAN0204 B
	        	ON A.CHANNEL_ID = B.CHANNEL_ID
	        	AND A.ATTRIBUTE_ID = B.ATTRIBUTE_ID
	        	UNION
	        	SELECT
	        		'NONE' AS CHANNEL_ID
	        		, A.INTERFACE_ID
	        		, B.ATTRIBUTE_ID
	        		, B.ATTRIBUTE_CD
	        		, B.ATTRIBUTE_NM
	        		, A.ATTRIBUTE_VALUE
	        		, '1' AS TYPE
	        	FROM TAN0203 A
	        	INNER JOIN TAN0202 B
	        	ON A.ATTRIBUTE_ID = B.ATTRIBUTE_ID
	        ) I
	        ON I.INTERFACE_ID = A.INTERFACE_ID
	        AND (I.CHANNEL_ID = H.CHANNEL_ID or I.CHANNEL_ID = 'NONE')
-->
        <if test="bizPathView != null and bizPathView eq 'Y'.toString()">
            LEFT OUTER JOIN
            (
            	SELECT
		            A.BUSINESS_ID
		            ,A.BUSINESS_CD
		            ,A.BUSINESS_NM
		            ,B.C_BIZ_ID
            	FROM TIM0301 A
            	INNER JOIN TIM0302 B
            	ON A.BUSINESS_ID = B.P_BIZ_ID
            	AND B.DEPTH  = 1
            ) H ON H.C_BIZ_ID = A.BUSINESS_ID
        </if>
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '01') CDAN01 ON CDAN01.CD = A.STATUS
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '08') CDIM08 ON CDIM08.CD = B.NODE_TYPE
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '04') CDIM04 ON CDIM04.CD = B.RESOURCE_TYPE
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '02') CDAN02 ON CDAN02.CD = A.IMPORTANCE
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '01') CDIM01 ON CDIM01.CD = A.DATA_PR_DIR
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '02') CDIM02 ON CDIM02.CD = A.APP_PR_METHOD
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '14') CDAN14 ON CDAN14.CD = A.HAS_DATA_MAP
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '12') CDIM12 ON CDIM12.CD = A.DATA_PR_METHOD
        ORDER BY A.IDX, H.CHANNEL_NM, G.BUSINESS_NM, A.REQUIREMENT_NM, A.INTERFACE_NM, A.STATUS
    </select>

    <select id="getRequirementList" resultMap="requirementResultMapForList">
        SELECT
	        ----------------------
	        --REQUIREMENT(MAIN)
	        ----------------------
	        A.REQUIREMENT_ID
	        ,A.REQUIREMENT_NM
	        ,A.STATUS
	        ,B.NM AS STATUS_NM
	        -- --------------------
	        -- BUSINESS(ASSOCIATION ON REQUIREMENT)
	        -- --------------------
	        ,A.BUSINESS_ID
        <if test="bizPathView == null or bizPathView eq 'N'.toString()">
            ,A.BUSINESS_NM
        </if>
        <if test="bizPathView != null and bizPathView eq 'Y'.toString()">
            ,E.BUSINESS_NM || ' (' || A.BUSINESS_NM || ')' AS BUSINESS_NM
        </if>
	        ,A.BUSINESS_CD
	        ----------------------
	        --INTERFACE(ASSOCIATION ON REQUIREMENT)
	        ----------------------
	        ,A.INTERFACE_ID
	        ,A.INTEGRATION_ID
	        ,A.INTERFACE_NM
	        ,A.CHANNEL_ID
	        ,A.CHANNEL_NM
	        ,A.IMPORTANCE
	        ,CDAN02.NM AS IMPORTANCE_NM
	        ,A.DATA_PR_DIR
	        ,CDIM0101.NM AS DATA_PR_DIR_NM
	        ,A.APP_PR_METHOD
	        ,CDIM0201.NM AS APP_PR_METHOD_NM
	        ,A.DATA_PR_METHOD
	        ,CDIM12.NM AS DATA_PR_METHOD_NM
	        ,A.HAS_DATA_MAP
	        ,CDAN1401.NM AS HAS_DATA_MAP_NM
	        ----------------------
	        --SYSTEMLIST(COLLECTION ON REQUIREMENT)
	        ----------------------
	        ,A.SYSTEM_ID
	        ,A.SYSTEM_NM
	        ,A.SYSTEM_CD
	        ,A.SEQ AS SYS_SEQ
	        ,A.NODE_TYPE AS SYS_NODE_TYPE
	        ,C.NM AS SYS_NODE_TYPE_NM
	        ,A.SERVICE
	        ,A.SERVICE_DESC
	        ,A.RESOURCE_TYPE
	        ,A.ORG_ID
	        ,A.ORG_NM
	        ,A.ORG_CD
	        ,A.DATA_FREQ_INPUT
	        ,D.NM AS RESOURCE_NM
	        ,A.REG_DATE
	        ,COALESCE(A.MOD_DATE, A.REG_DATE) AS MOD_DATE
	        ,A.DEV_EXP_YMD
	        ,A.DEV_FIN_YMD
	        ,A.TEST_EXP_YMD
	        ,A.TEST_FIN_YMD
	        ,A.REAL_EXP_YMD
	        ,A.REAL_FIN_YMD
	        ,A.ATTRIBUTE_ID
	        ,A.ATTRIBUTE_CD
	        ,A.ATTRIBUTE_NM
	        ,A.ATTRIBUTE_VALUE
	        ,A.TYPE
        FROM
        (
        	SELECT
		        A.REQUIREMENT_ID
		        ,A.REQUIREMENT_NM
		        ,A.STATUS
		        ,B.BUSINESS_ID
		        ,B.BUSINESS_NM
		        ,B.BUSINESS_CD
		        ,C.INTERFACE_ID
		        ,C.INTEGRATION_ID
		        ,C.INTERFACE_NM
		        ,C.SYSTEM_ID
		        ,C.SYSTEM_NM
		        ,C.SYSTEM_CD
		        ,C.SEQ
		        ,C.NODE_TYPE
		        ,C.SERVICE
		        ,C.SERVICE_DESC
		        ,C.RESOURCE_TYPE
		        ,C.ORG_ID
		        ,C.ORG_NM
		        ,C.ORG_CD
		        ,C.DATA_FREQ_INPUT
		        ,C.IMPORTANCE
		        ,C.DATA_PR_DIR
		        ,C.APP_PR_METHOD
		        ,C.HAS_DATA_MAP
		        ,E.CHANNEL_ID
		        ,E.CHANNEL_NM
		        ,A.REG_DATE
		        ,A.MOD_DATE
		        ,A.DEV_EXP_YMD
		        ,A.DEV_FIN_YMD
		        ,A.TEST_EXP_YMD
		        ,A.TEST_FIN_YMD
		        ,A.REAL_EXP_YMD
		        ,A.REAL_FIN_YMD
		        ,ADD_PROPERTIES.ATTRIBUTE_ID
		        ,ADD_PROPERTIES.ATTRIBUTE_CD
		        ,ADD_PROPERTIES.ATTRIBUTE_NM
		        ,ADD_PROPERTIES.ATTRIBUTE_VALUE
		        ,ADD_PROPERTIES.TYPE
        	FROM TAN0101 A
        	INNER JOIN TIM0301 B ON A.BUSINESS_ID = B.BUSINESS_ID
        <choose>
            <when test="isInterfaceAdmin != null and isInterfaceAdmin eq 'Y'.toString()">
            </when>
            <otherwise>
			INNER JOIN
            -----------------------------------------------
            -- 데이터 엑세스 권한 별 인터페이스 조회
            -----------------------------------------------
			(
				SELECT
	                DISTINCT
	                TSU0220.INTERFACE_ID
                FROM
                -----------------------------------------------
                -- 로그인 사용자 데이터 엑세스 권한 조회(공통)
                -----------------------------------------------
                (
                	SELECT
		                DISTINCT
		                TSU0219.USER_ID   AS USER_ID,
		                TSU0221.C_ROLE_ID AS ROLE_ID,
		                TSU0221.DEPTH     AS DEPTH
                	FROM
                	(
                		SELECT
			                TSU0101.USER_ID,
			                TSU0219.ROLE_ID
                		FROM TSU0101 TSU0101
                		INNER JOIN TSU0219 TSU0219
                		ON TSU0101.USER_ID = TSU0219.USER_ID
                		WHERE 1 = 1
                		AND TSU0101.DEL_YN = 'N'
                		AND TSU0101.USER_ID = #{userId}
                	) TSU0219
                	INNER JOIN TSU0221 TSU0221
                	ON TSU0219.ROLE_ID = TSU0221.P_ROLE_ID
                	--ORDER BY USER_ID, C_ROLE_ID
                ) ACCESS_ROLE
                -----------------------------------------------
                -- 데이터 엑세스 권한 :: 인터페이스 맵핑 조인
                -----------------------------------------------
                INNER JOIN TSU0220 TSU0220
                ON ACCESS_ROLE.ROLE_ID = TSU0220.ROLE_ID
                UNION
                -----------------------------------------------
                -- 로그인 사용자 본인이 등록한 인터페이스 목록 조회
                -----------------------------------------------
                SELECT
                	INTERFACE_ID
                FROM TAN0201
                WHERE REG_USER = #{userId}
			) ACCESS_ROLE_INTF
            ON A.INTERFACE_ID = ACCESS_ROLE_INTF.INTERFACE_ID
            </otherwise>
        </choose>

        <if test="systemId != null and systemId != ''">
            INNER JOIN
            (
	            SELECT INTERFACE_ID
	            FROM TAN0213 A
	            INNER JOIN (SELECT C_SYS_ID FROM TIM0102 WHERE P_SYS_ID = #{systemId}) B ON A.SYSTEM_ID = B.C_SYS_ID
            ) F ON A.INTERFACE_ID = F.INTERFACE_ID
        </if>
        <if test="organizationId != null and organizationId != ''">
            INNER JOIN
            (
            	SELECT B.INTERFACE_ID
            	FROM TAN0213 B
            	INNER JOIN TIM0101 A ON A.SYSTEM_ID = B.SYSTEM_ID
            	INNER JOIN
            	(
            		SELECT B.SYSTEM_ID
            		FROM TIM0403 B
            		INNER JOIN
            		(
            			SELECT C_ORG_ID
            			FROM TIM0402
            			WHERE DEL_YN = 'N'
            			AND P_ORG_ID = #{organizationId}
            		) G ON B.ORG_ID = G.C_ORG_ID
            	) K ON A.SYSTEM_ID = K.SYSTEM_ID
            	WHERE A.DEL_YN = 'N'
            ) TIM0403 ON A.INTERFACE_ID = TIM0403.INTERFACE_ID
        </if>
        <if test="businessId != null and businessId != ''">
            INNER JOIN
            (
            	SELECT INTERFACE_ID
            	FROM TAN0218 A
            	INNER JOIN
            	(
            		SELECT C_BIZ_ID
            		FROM TIM0302
            		WHERE 1 = 1
            		AND P_BIZ_ID = #{businessId}
            	) B ON A.BUSINESS_ID = B.C_BIZ_ID
            ) J ON A.INTERFACE_ID = J.INTERFACE_ID
        </if>

        <if test="tag != null and tag != ''">
            INNER JOIN
            (
            	SELECT INTERFACE_ID
            	FROM TAN0221
            	WHERE TAG LIKE '%'||#{tag}||'%'
            ) G ON A.INTERFACE_ID = G.INTERFACE_ID
        </if>

        <if test="(service != null and service != '') or (serviceDesc != null and serviceDesc != '')">
            INNER JOIN
            (
            	SELECT INTERFACE_ID
            	FROM TAN0213
            	WHERE 1 = 1
            <if test="service != null and service != ''">
                AND SERVICE LIKE '%'||#{service}||'%'
            </if>
            <if test="serviceDesc != null and serviceDesc != ''">
                AND SERVICE_DESC LIKE '%'||#{serviceDesc}||'%'
            </if>
            ) H ON A.INTERFACE_ID = H.INTERFACE_ID
        </if>

        <if test="resourceNm != null and resourceNm != ''">
            INNER JOIN
            (
            	SELECT A.INTERFACE_ID
            	FROM TAN0213 A
            	LEFT OUTER JOIN
            	(
            		SELECT CD, NM
            		FROM TSU0301
            		WHERE LEVEL1 = 'IM' AND LEVEL2 = '04' AND  DEL_YN = 'N'
            	) CDIM04 ON A.RESOURCE_TYPE = CDIM04.CD
            	WHERE 1 = 1
            	AND CDIM04.NM LIKE '%'||#{resourceNm}||'%'
            ) I ON A.INTERFACE_ID = I.INTERFACE_ID
        </if>

        <if test="dataPrMethod != null and dataPrMethod != ''">
            INNER JOIN
            (
            	SELECT A.INTERFACE_ID
            	FROM TAN0201 A
            	WHERE A.DATA_PR_METHOD = #{dataPrMethod}
            ) S ON A.INTERFACE_ID = S.INTERFACE_ID
        </if>

        <if test="dataFrequency != null and dataFrequency != ''">
            INNER JOIN
            (
            	SELECT A.INTERFACE_ID
            	FROM TAN0201 A
            	WHERE A.DATA_FREQ = #{dataFrequency}
            ) SS ON A.INTERFACE_ID = SS.INTERFACE_ID
        </if>

        <if test="dataPrDir != null and dataPrDir != ''">
            INNER JOIN
            (
            	SELECT A.INTERFACE_ID
            	FROM TAN0201 A
            	WHERE A.DATA_PR_DIR = #{dataPrDir}
            ) DATA_PR_DIR ON A.INTERFACE_ID = DATA_PR_DIR.INTERFACE_ID
        </if>

        <if test="appPrMethod != null and appPrMethod != ''">
            INNER JOIN
            (
            	SELECT A.INTERFACE_ID
            	FROM TAN0201 A
            	WHERE A.APP_PR_METHOD = #{appPrMethod}
            ) APP_PR_METHOD ON A.INTERFACE_ID = APP_PR_METHOD.INTERFACE_ID
        </if>

        <if test="importance != null and importance != ''">
            INNER JOIN
            (
            	SELECT A.INTERFACE_ID
            	FROM TAN0201 A
            	WHERE A.IMPORTANCE = #{importance}
            ) IMPORTANCE ON A.INTERFACE_ID = IMPORTANCE.INTERFACE_ID
        </if>

        <if test="hasDataMap != null and hasDataMap != ''">
            INNER JOIN
            (
            	SELECT A.INTERFACE_ID
            	FROM TAN0201 A
            	WHERE A.HAS_DATA_MAP = #{hasDataMap}
            ) HAS_DATA_MAP ON A.INTERFACE_ID = HAS_DATA_MAP.INTERFACE_ID
        </if>

        <if test="isRelUsers != null and isRelUsers eq 'Y'.toString()">
            INNER JOIN
            (
            	SELECT A.REQUIREMENT_ID
            	FROM TAN0101 A
            	INNER JOIN TAN0201 B ON A.INTERFACE_ID = B.INTERFACE_ID
            	INNER JOIN TAN0219 C ON B.INTERFACE_ID = C.INTERFACE_ID
            	WHERE C.USER_ID = #{userId}
            	UNION
            	SELECT A.REQUIREMENT_ID
            	FROM TAN0101 A
            	WHERE A.REG_USER = #{userId}
            ) B ON A.REQUIREMENT_ID = B.REQUIREMENT_ID
        </if>

        	LEFT OUTER JOIN
        	(
        		SELECT
        			A.SYSTEM_ID
        			,A.SYSTEM_NM
        			,A.SYSTEM_CD
        			,B.INTERFACE_ID
        			,C.INTEGRATION_ID
        			,C.INTERFACE_NM
        			,C.DATA_FREQ_INPUT
        			,C.IMPORTANCE
        			,C.DATA_PR_DIR
        			,C.APP_PR_METHOD
        			,C.HAS_DATA_MAP
        			,B.SEQ
        			,B.NODE_TYPE
        			,B.SERVICE
        			,B.SERVICE_DESC
        			,B.RESOURCE_TYPE
        			,H.ORG_ID
        			,H.ORG_NM
        			,H.ORG_CD
        		FROM TAN0213 B
        		INNER JOIN TIM0101 A ON A.SYSTEM_ID = B.SYSTEM_ID
        		INNER JOIN TAN0201 C ON C.INTERFACE_ID = B.INTERFACE_ID
        		INNER JOIN
        		(
        			SELECT
        				A.ORG_ID
        				, A.ORG_NM
        				, A.ORG_CD
        				, B.SYSTEM_ID
        			FROM TIM0401 A
        			INNER JOIN TIM0403 B ON A.ORG_ID = B.ORG_ID
        		) H ON H.SYSTEM_ID = B.SYSTEM_ID
        		WHERE B.DEL_YN = 'N'
        	) C ON A.INTERFACE_ID = C.INTERFACE_ID
        	LEFT OUTER JOIN TAN0201 D ON D.INTERFACE_ID = A.INTERFACE_ID
        	INNER JOIN
        	(
        		SELECT
        			CHANNEL_ID
        			,CHANNEL_NM
        		FROM TIM0002
        		WHERE DEL_YN = 'N'
        <if test="channelId != null and channelId != ''">
            	AND CHANNEL_ID = #{channelId}
        </if>
        	) E ON D.CHANNEL_ID = E.CHANNEL_ID
        	LEFT OUTER JOIN
        	(
        		SELECT
        			A.CHANNEL_ID
        			, A.INTERFACE_ID
        			, B.ATTRIBUTE_ID
        			, B.ATTRIBUTE_CD
        			, B.ATTRIBUTE_NM
        			, A.ATTRIBUTE_VALUE
        			, '0' AS TYPE
        		FROM TAN0205 A
        		INNER JOIN TAN0204 B ON
        		A.CHANNEL_ID = B.CHANNEL_ID
        		AND A.ATTRIBUTE_ID = B.ATTRIBUTE_ID
		        UNION
        		SELECT
        			'NONE' AS CHANNEL_ID
        			, A.INTERFACE_ID
        			, B.ATTRIBUTE_ID
        			, B.ATTRIBUTE_CD
        			, B.ATTRIBUTE_NM
        			, A.ATTRIBUTE_VALUE
        			, '1' AS TYPE
        		FROM TAN0203 A
        		INNER JOIN TAN0202 B ON
        		A.ATTRIBUTE_ID = B.ATTRIBUTE_ID
        	) ADD_PROPERTIES
        	ON ADD_PROPERTIES.INTERFACE_ID = D.INTERFACE_ID
        	AND (ADD_PROPERTIES.CHANNEL_ID = D.CHANNEL_ID OR ADD_PROPERTIES.CHANNEL_ID = 'NONE')
        	WHERE A.DEL_YN = #{delYn}
        <if test="status != null and status != null">
        	AND A.STATUS = #{status}
        </if>
        <if test="requirementId != null and requirementId != ''">
        	AND A.REQUIREMENT_ID = #{requirementId}
        </if>
        <if test="requirementNm != null and requirementNm != ''">
        	AND A.REQUIREMENT_NM LIKE '%'||#{requirementNm}||'%'
        </if>
		) A
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '01') B ON A.STATUS = B.CD
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '08') C ON A.NODE_TYPE = C.CD
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '04') D ON A.RESOURCE_TYPE = D.CD
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '02' AND DEL_YN = 'N') CDAN02 ON A.IMPORTANCE = CDAN02.CD -- 인터페이스 중요도
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '01' AND DEL_YN = 'N') CDIM0101 ON A.DATA_PR_DIR = CDIM0101.CD -- 데이터 흐름제어
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '02' AND DEL_YN = 'N') CDIM0201 ON A.APP_PR_METHOD = CDIM0201.CD -- 어를처리방식(동기/비동기)
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '14' AND DEL_YN = 'N') CDAN1401 ON A.HAS_DATA_MAP = CDAN1401.CD -- hasDataMap
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '12') CDIM12 ON CDIM12.CD = A.DATA_PR_METHOD
        <if test="bizPathView != null and bizPathView eq 'Y'.toString()">
		LEFT OUTER JOIN (
			SELECT
            	EA.BUSINESS_ID
            	,EA.BUSINESS_CD
            	,EA.BUSINESS_NM
            	,EB.C_BIZ_ID
            FROM TIM0301 EA
            INNER JOIN TIM0302 EB
            ON EA.BUSINESS_ID = EB.P_BIZ_ID
            AND EB.DEPTH  = 1
            ) E ON E.C_BIZ_ID = A.BUSINESS_ID
        </if>
        WHERE 1 = 1
        <if test="integrationId != null and integrationId != ''">
		AND A.INTEGRATION_ID LIKE '%'||#{integrationId}||'%'
        </if>
        <if test="interfaceNm != null and interfaceNm != ''">
        AND A.INTERFACE_NM LIKE '%'||#{interfaceNm}||'%'
        </if>
        ORDER BY A.MOD_DATE DESC NULLS LAST, A.REG_DATE DESC, A.CHANNEL_NM, A.BUSINESS_NM, A.REQUIREMENT_NM, A.INTERFACE_NM, A.STATUS
    </select>

    <resultMap id="requirementResultMapForList" type="Requirement">
        <id property="requirementId" 		column="REQUIREMENT_ID"/>
        <result property="requirementNm" 	column="REQUIREMENT_NM"/>
        <result property="status" 			column="STATUS"/>
        <result property="statusNm" 		column="STATUS_NM"/>
        <result property="modDate"			column="MOD_DATE"/>
        <result property="regDate"			column="REG_DATE"/>
        <result property="devExpYmd"		column="DEV_EXP_YMD"/>
        <result property="devFinYmd"		column="DEV_FIN_YMD"/>
        <result property="testExpYmd"		column="TEST_EXP_YMD"/>
        <result property="testFinYmd"		column="TEST_FIN_YMD"/>
        <result property="realExpYmd"		column="REAL_EXP_YMD"/>
        <result property="realFinYmd"		column="REAL_FIN_YMD"/>

        <association property="pageInfo" javaType="PageInfo">
            <id property="index"				column="IDX"/>
            <result property="totalCount"		column="TOTAL_CNT"/>
            <result property="perCount"			column="PER_CNT"/>
            <result property="pageCount"		column="PAGE_CNT"/>
            <result property="tailCount"		column="TAIL_CNT"/>
            <result property="page"				column="PAGE"/>
        </association>

        <association property="business" javaType="Business">
            <id property="businessId" 		column="BUSINESS_ID"/>
            <result property="businessNm" 	column="BUSINESS_NM"/>
            <result property="businessCd" 	column="BUSINESS_CD"/>
        </association>

        <association property="interfaceInfo" javaType="Interface">

            <id property="interfaceId" 			column="INTERFACE_ID"/>
            <result property="integrationId" 	column="INTEGRATION_ID"/>
            <result property="interfaceNm" 		column="INTERFACE_NM"/>
            <result property="monitorYn" 		column="MOINTOR_YN"/>
            <result property="dataFrequencyInput" 		column="DATA_FREQ_INPUT"/>
            <result property="importance" 		column="IMPORTANCE"/>
            <result property="importanceNm" 		column="IMPORTANCE_NM"/>
            <result property="dataPrDir" 		column="DATA_PR_DIR"/>
            <result property="dataPrDirNm" 		column="DATA_PR_DIR_NM"/>
            <result property="appPrMethod" 		column="APP_PR_METHOD"/>
            <result property="appPrMethodNm" 		column="APP_PR_METHOD_NM"/>
            <result property="dataPrMethod" 		column="DATA_PR_METHOD"/>
            <result property="dataPrMethodNm" 		column="DATA_PR_METHOD_NM"/>
            <result property="hasDataMap" 		column="HAS_DATA_MAP"/>
            <result property="hasDataMapNm" 		column="HAS_DATA_MAP_NM"/>

            <association property="channel" javaType="Channel">
                <id property="channelId"		column="CHANNEL_ID"/>
                <result property="channelNm" 	column="CHANNEL_NM"/>
            </association>

            <collection property="systemList" ofType="System">
                <id property="systemId" 		column="SYSTEM_ID"/>
                <id property="seq" 				column="SYS_SEQ"/>
                <result property="systemCd" 	column="SYSTEM_CD"/>
                <result property="systemNm" 	column="SYSTEM_NM"/>
                <result property="nodeType" 	column="SYS_NODE_TYPE"/>
                <result property="nodeTypeNm" 	column="SYS_NODE_TYPE_NM"/>
                <result property="service" 		column="SERVICE"/>
                <result property="serviceDesc"	column="SERVICE_DESC"/>
                <result property="resourceCd" 	column="RESOURCE_TYPE"/>
                <result property="resourceNm" 	column="RESOURCE_NM"/>
            </collection>

            <collection property="senderSystemInfoList" ofType="DisplaySystemInfo">
                <discriminator javaType="string" column="SYS_NODE_TYPE">
                    <case value="0" resultMap="displaySystemInfoResultMap"/>
                </discriminator>
            </collection>

            <collection property="receiverSystemInfoList" ofType="DisplaySystemInfo">
                <discriminator javaType="string" column="SYS_NODE_TYPE">
                    <case value="2" resultMap="displaySystemInfoResultMap"/>
                </discriminator>
            </collection>
<!--
            <collection property="properties" ofType="InterfaceProperties">
                <id property="interfaceId" 			column="INTERFACE_ID"/>
                <id property="channelId" 			column="CHANNEL_ID"/>
                <id property="attrId" 				column="ATTRIBUTE_ID"/>
                <result property="attrCd" 			column="ATTRIBUTE_CD"/>
                <result property="attrNm" 			column="ATTRIBUTE_NM"/>
                <result property="attrValue" 		column="ATTRIBUTE_VALUE"/>
                <result property="type" 			column="TYPE"/>
            </collection>
 -->
           <collection property="properties"  javaType="java.util.ArrayList" ofType="InterfaceProperties" column="INTERFACE_ID" select="selectInterfaceProperties"/>
        </association>
    </resultMap>


	<!--
       요건 상세 조회
       public Requirement getRequirementDetail throws Exception;
    -->
    <select id="getRequirementDetail" parameterType="map" resultMap="getRequirementDetailResult">
        SELECT
	        ----------------------
	        -- 요건
	        ----------------------
	        A.REQUIREMENT_NM
	        ,A.REQUIREMENT_ID
	        ,A.STATUS
	        ,CDAN01.NM AS STATUS_NM
	        ,A.COMMENTS AS RQ_COMMENTS
	        ,A.DEV_EXP_YMD
	        ,A.DEV_FIN_YMD
	        ,A.TEST_EXP_YMD
	        ,A.TEST_FIN_YMD
	        ,A.REAL_EXP_YMD
	        ,A.REAL_FIN_YMD
	        ,A.DEL_YN AS RQ_DEL_YN
	        ,A.REG_USER AS RQ_REG_ID
	        ,A.REG_DATE AS RQ_REG_DATE
	        ,A.MOD_USER AS RQ_MOD_ID
	        ,A.MOD_DATE AS RQ_MOD_DATE
	        ----------------------
	        -- 업무(프로세스)
	        ----------------------
	        ,B.BUSINESS_ID
        <if test="bizPathView == null or bizPathView eq 'N'.toString()">
            ,B.BUSINESS_NM
        </if>
        <if test="bizPathView != null and bizPathView eq 'Y'.toString()">
            ,BP.BUSINESS_NM || ' (' || B.BUSINESS_NM || ')' AS BUSINESS_NM
        </if>
	        ,B.BUSINESS_CD
	        ----------------------
	        -- 등록자
	        ----------------------
	        ,C.USER_ID    AS REG_USER_ID
	        ,C.USER_NM    AS REG_USER_NM
	        ,C.CELL_PHONE AS REG_CELL_PHONE
	        ,C.PHONE      AS REG_PHONE
	        ,C.EMAIL      AS REG_EMAIL
	        ----------------------
	        -- 수정자
	        ----------------------
	        ,R.USER_ID    AS MOD_USER_ID
	        ,R.USER_NM    AS MOD_USER_NM
	        ,R.CELL_PHONE AS MOD_CELL_PHONE
	        ,R.PHONE      AS MOD_PHONE
	        ,R.EMAIL      AS MOD_EMAIL
	        ----------------------
	        -- 연계채널
	        ----------------------
	        ,E.CHANNEL_ID
	        ,E.CHANNEL_NM
	        ,E.MAP_RULE
	        ----------------------
	        -- 인터페이스
	        ----------------------
	        ,D.INTERFACE_ID
	        ,D.INTEGRATION_ID
	        ,D.INTERFACE_NM
	        ,D.IMPORTANCE
	        ,CDAN02.NM AS IMPORTANCE_NM
	        ,D.CHANNEL_CH_COMMENTS
	        ,D.CHANNEL_CH_CD
	        ,CDAN06.NM AS CHANNEL_CH_NM
	        ,D.MAX_DELAY_TIME
	        ,D.MAX_DELAY_UNIT
	        ,CDAN03.NM AS MAX_DELAY_UNIT_NM
	        ,D.MAX_ERROR_TIME
	        ,D.MAX_ERROR_UNIT
	        ,CDAN04.NM AS MAX_ERROR_UNIT_NM
	        ,D.DATA_PR_DIR
	        ,CDIM0101.NM AS DATA_PR_DIR_NM
	        ,D.APP_PR_METHOD
	        ,CDIM0201.NM AS APP_PR_METHOD_NM
	        ,D.DATA_PR_METHOD
	        ,CDIM1201.NM AS DATA_PR_METHOD_NM
	        ,D.HAS_DATA_MAP
	        ,CDAN1401.NM AS HAS_DATA_MAP_NM
	        ,D.DATA_FREQ
	        ,D.DATA_FREQ_INPUT
	        ,CDIM03.NM AS DATA_FREQ_NM
	        ,D.SZ_PER_TRAN
	        ,D.CNT_PER_FREQ
	        ,D.CNT_PER_DAY
	        ,D.QTT_PER_DAY
	        ,D.START_RES_TYPE
	        ,CDIM0401.NM AS START_RES_NM
	        ,D.END_RES_TYPE
	        ,CDIM0402.NM AS END_RES_NM
	        ,D.START_NODE_CNT
	        ,D.END_NODE_CNT
	        ,D.DATA_ORDER_YN
	        ,D.DEL_YN   AS IF_DEL_YN
	        ,D.COMMENTS AS IF_COMMENTS
	        ,D.REG_USER AS IF_REG_ID
	        ,D.REG_DATE AS IF_REG_DATE
	        ,D.MOD_USER AS IF_MOD_ID
	        ,D.MOD_DATE AS IF_MOD_DATE
	        -----------------------
	        -- 인터페이스 시스템
	        -----------------------
	        ,F.SYSTEM_ID
	        ,N.SYSTEM_CD
	        ,N.SYSTEM_NM
	        ,F.SEQ AS SYS_SEQ
	        ,F.NODE_TYPE AS SYS_NODE_TYPE
	        ,CDIM0801.NM AS SYS_NODE_TYPE_NM
	        ,F.RESOURCE_TYPE
	        ,CDIM0403.NM AS RESOURCE_NM
	        ,F.SERVICE
	        ,F.SERVICE_DESC
	        ,TIM0403.ORG_ID
	        ,TIM0403.ORG_CD
	        ,TIM0403.ORG_NM
	        ------------------------
	        -- 업무(프로세스)
	        ------------------------
	        ,G.BUSINESS_ID AS BZ_BUSINESS_ID
	        ,O.BUSINESS_CD AS BZ_BUSINESS_CD
	        ,O.BUSINESS_NM AS BZ_BUSINESS_NM
	        ,G.SEQ AS BZ_SEQ
	        ,G.NODE_TYPE AS BZ_NODE_TYPE
	        ,CDIM0802.NM AS BZ_NODE_NM
	        -------------------------
	        -- 인터페이스(패턴)
	        -------------------------
	        ,H.PATTERN_ID
	        ,H.PATTERN_NM
	        ,H.PATTERN_IMG
	        ,H.DATA_PR_DIR AS PTN_DATA_PR_DIR
	        ,CDIM0102.NM AS PTN_DATA_PR_DIR_NM
	        ,H.APP_PR_METHOD AS PTN_APP_PR_METHOD
	        ,CDIM0202.NM AS PTN_APP_PR_METHOD_NM
	        ,H.DATA_PR_METHOD AS PTN_DATA_PR_METHOD
	        ,CDIM1202.NM AS PTN_DATA_PR_METHOD_NM
	        ,H.SND_RCV_REL
	        ,H.COMMENTS AS PTN_COMMENTS

	        --------------------------
	        -- 인터페이스 맵핑
	        --------------------------
	        ,J.AS_INTERFACE_ID
	        --------------------------
	        -- 인터페이스 TAG
	        --------------------------
	        ,K.TAG
	        ,K.SEQ
	        --------------------------
	        -- 인터페이스요건첨부파일
	        --------------------------
	        ,L.FILE_ID AS ATTATCH_ID
	        ,L.FILE_NM AS ATTATCH_FILE_NM
	        ,L.FILE_PATH AS ATTATCH_FILE_PATH
	        ,L.REG_USER AS ATTATCH_USER_ID
	        ,L.REG_DATE AS ATTATCH_USER_DATE
	        --------------------------
	        -- 인터페이스요건설명
	        --------------------------
	        ,M.COMMENT_ID AS COMMENT_ID
	        ,M.CONTENTS AS COMMENT_CONTENTS
	        ,M.REG_USER AS COMMENT_REG_ID
	        ,M.REG_DATE AS COMMENT_REG_DATE
	        ,M.MOD_USER AS COMMENT_MOD_ID
	        ,M.MOD_DATE AS COMMENT_MOD_DATE
	        ,Q.USER_NM  AS COMMENT_REG_NM
	        ,Q.CELL_PHONE  AS COMMENT_REG_CELL_PHONE
	        ,Q.PHONE AS COMMENT_REG_PHONE
	        ,Q.EMAIL AS COMMENT_REG_EMAIL

	        ,S1.USER_ID AS DEVELOPER_ID
	        ,S1.USER_NM AS DEVELOPER_NM
	        ,S1.EMAIL   AS DEVELOPER_EMAIL
	        ,S1.CELL_PHONE AS DEVELOPER_CELL_PHONE
	        ,S1.PHONE AS DEVELOPER_PHONE
	        ,S1.COMPANY_NM AS DEVELOPER_COMPANY_NM
	        ,S1.DEPARTMENT_NM AS DEVELOPER_DEPARTMENT_NM

	        ,S2.USER_ID AS TESTER_ID
	        ,S2.USER_NM AS TESTER_NM
	        ,S2.EMAIL   AS TESTER_EMAIL
	        ,S2.CELL_PHONE AS TESTER_CELL_PHONE
	        ,S2.PHONE AS TESTER_PHONE
	        ,S2.COMPANY_NM AS TESTER_COMPANY_NM
	        ,S2.DEPARTMENT_NM AS TESTER_DEPARTMENT_NM

	        ,S3.USER_ID AS MOVER_ID
	        ,S3.USER_NM AS MOVER_NM
	        ,S3.EMAIL   AS MOVER_EMAIL
	        ,S3.CELL_PHONE AS MOVER_CELL_PHONE
	        ,S3.PHONE AS MOVER_PHONE
	        ,S3.COMPANY_NM AS MOVER_COMPANY_NM
	        ,S3.DEPARTMENT_NM AS MOVER_DEPARTMENT_NM
        FROM TAN0101 A
        INNER JOIN TIM0301 B ON A.BUSINESS_ID = B.BUSINESS_ID        -- 업무
        INNER JOIN TSU0101 C ON A.REG_USER = C.USER_ID               -- 등록자
        LEFT OUTER JOIN TSU0101 R ON A.MOD_USER = R.USER_ID          -- 수정자
        LEFT OUTER JOIN TAN0201 D ON A.INTERFACE_ID = D.INTERFACE_ID -- 인터페이스
        LEFT OUTER JOIN TIM0002 E ON E.CHANNEL_ID = D.CHANNEL_ID     -- 인터페이스채널
        LEFT OUTER JOIN (SELECT * FROM TAN0213 WHERE DEL_YN = 'N') F ON A.INTERFACE_ID = F.INTERFACE_ID -- 인터페이스시스템맵핑
        LEFT OUTER JOIN (SELECT * FROM TAN0218 WHERE DEL_YN = 'N') G ON A.INTERFACE_ID = G.INTERFACE_ID -- 인터페이스업무맵핑
        LEFT OUTER JOIN TAN0207 H ON D.REF_PATTERN_ID = H.PATTERN_ID -- 인터페이스패턴
        LEFT OUTER JOIN TAN0210 J ON D.INTERFACE_ID = J.INTERFACE_ID AND J.DEL_YN = 'N' -- 인터페이스맵핑
        LEFT OUTER JOIN (SELECT * FROM TAN0221 WHERE DEL_YN = 'N') K ON D.INTERFACE_ID = K.INTERFACE_ID -- 인터페이스TAG
        LEFT OUTER JOIN (SELECT * FROM TAN0103 WHERE DEL_YN = 'N') L ON A.REQUIREMENT_ID = L.REQUIREMENT_ID -- 인터페이스요건첨부파일
        LEFT OUTER JOIN (SELECT * FROM TAN0102 WHERE DEL_YN = 'N') M ON A.REQUIREMENT_ID = M.REQUIREMENT_ID -- 인터페이스요건설명
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '01' AND DEL_YN = 'N') CDAN01 ON A.STATUS = CDAN01.CD -- 요건상태명
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '02' AND DEL_YN = 'N') CDAN02 ON D.IMPORTANCE = CDAN02.CD -- 인터페이스 중요도
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '06' AND DEL_YN = 'N') CDAN06 ON D.CHANNEL_CH_CD = CDAN06.CD -- 채널변경사유
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '03' AND DEL_YN = 'N') CDAN03 ON D.MAX_DELAY_UNIT = CDAN03.CD -- 처리지연임계치 단위
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '04' AND DEL_YN = 'N') CDAN04 ON D.MAX_ERROR_UNIT = CDAN04.CD -- 장애임계치 단위
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '01' AND DEL_YN = 'N') CDIM0101 ON D.DATA_PR_DIR = CDIM0101.CD -- 데이터 흐름제어
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '02' AND DEL_YN = 'N') CDIM0201 ON D.APP_PR_METHOD = CDIM0201.CD -- 어를처리방식(동기/비동기)
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '12' AND DEL_YN = 'N') CDIM1201 ON D.DATA_PR_METHOD = CDIM1201.CD -- 데이터처리방식
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '03' AND DEL_YN = 'N') CDIM03 ON D.DATA_FREQ = CDIM03.CD -- 발생주기명
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '04' AND DEL_YN = 'N') CDIM0401 ON D.START_RES_TYPE = CDIM0401.CD -- 인터페이스 시작노드 리소스
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '04' AND DEL_YN = 'N') CDIM0402 ON D.END_RES_TYPE = CDIM0402.CD -- 인터페이스 종료노드 리소스
        LEFT OUTER JOIN TIM0101 N ON F.SYSTEM_ID = N.SYSTEM_ID -- 시스템
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '04' AND DEL_YN = 'N') CDIM0403 ON F.RESOURCE_TYPE = CDIM0403.CD -- 시스템리소스
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '08' AND DEL_YN = 'N') CDIM0801 ON F.NODE_TYPE = CDIM0801.CD -- 시스템노드유형
        LEFT OUTER JOIN TIM0301 O ON G.BUSINESS_ID = O.BUSINESS_ID -- 업무
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '08' AND DEL_YN = 'N') CDIM0802 ON G.NODE_TYPE = CDIM0802.CD -- 업무노드유형
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '01' AND DEL_YN = 'N') CDIM0102 ON H.DATA_PR_DIR = CDIM0102.CD -- 패턴-데이터 흐름제어
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '02' AND DEL_YN = 'N') CDIM0202 ON H.APP_PR_METHOD = CDIM0202.CD -- 패턴-어를처리방식(동기/비동기)
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '12' AND DEL_YN = 'N') CDIM1202 ON H.DATA_PR_METHOD = CDIM1202.CD -- 패턴-데이터처리방식
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '14' AND DEL_YN = 'N') CDAN1401 ON D.HAS_DATA_MAP = CDAN1401.CD -- hasDataMap
        LEFT OUTER JOIN TSU0101 Q ON M.REG_USER = Q.USER_ID
        LEFT OUTER JOIN
        (
        	SELECT
		        A.ORG_ID
		        , A.ORG_CD
		        , A.ORG_NM
		        , B.SYSTEM_ID
        	FROM TIM0401 A
        	INNER JOIN TIM0403 B
        	ON A.ORG_ID = B.ORG_ID
        	WHERE A.DEL_YN = 'N' AND B.DEL_YN = 'N'
        ) TIM0403 ON TIM0403.SYSTEM_ID = F.SYSTEM_ID
        LEFT OUTER JOIN (
	        SELECT
		        B.USER_ID
		        , B.USER_NM
		        , B.EMAIL
		        , B.CELL_PHONE
		        , B.PHONE
		        , B.COMPANY_NM
		        , B.DEPARTMENT_NM
	        FROM TCO0101 A
	        INNER JOIN TSU0101 B
	        ON A.REQ_USER_ID = B.USER_ID
	        AND A.APPROVAL_ITEM_ID = #{requirementId}
	        AND A.APPROVAL_ITEM_TYPE = '0'
	        AND A.REQ_TYPE = 'G0'
	        AND A.SEQ = ( SELECT MAX (SEQ) FROM TCO0101 WHERE APPROVAL_ITEM_ID = #{requirementId} AND REQ_TYPE = 'G0' AND APPROVAL_ITEM_TYPE = '0' )
        ) S1 ON A.DEV_FIN_YMD IS NOT NULL
        LEFT OUTER JOIN (
	        SELECT
		        B.USER_ID
		        , B.USER_NM
		        , B.EMAIL
		        , B.CELL_PHONE
		        , B.PHONE
		        , B.COMPANY_NM
		        , B.DEPARTMENT_NM
	        FROM TCO0101 A
	        INNER JOIN TSU0101 B
	        ON A.REQ_USER_ID = B.USER_ID
	        AND A.APPROVAL_ITEM_ID = #{requirementId}
	        AND A.APPROVAL_ITEM_TYPE = '0'
	        AND A.REQ_TYPE = 'H0'
	        AND A.SEQ = ( SELECT MAX (SEQ) FROM TCO0101 WHERE APPROVAL_ITEM_ID = #{requirementId} AND REQ_TYPE = 'H0' AND APPROVAL_ITEM_TYPE = '0' )
        ) S2 ON A.TEST_FIN_YMD IS NOT NULL
        LEFT OUTER JOIN (
        	SELECT
		        B.USER_ID
		        , B.USER_NM
		        , B.EMAIL
		        , B.CELL_PHONE
		        , B.PHONE
		        , B.COMPANY_NM
		        , B.DEPARTMENT_NM
	        FROM TCO0101 A
	        INNER JOIN TSU0101 B
	        ON A.REQ_USER_ID = B.USER_ID
	        AND A.APPROVAL_ITEM_ID = #{requirementId}
	        AND A.APPROVAL_ITEM_TYPE = '0'
	        AND A.REQ_TYPE = 'I0'
	        AND A.SEQ = ( SELECT MAX (SEQ) FROM TCO0101 WHERE APPROVAL_ITEM_ID = #{requirementId} AND REQ_TYPE = 'I0' AND APPROVAL_ITEM_TYPE = '0' )
        ) S3 ON A.REAL_FIN_YMD IS NOT NULL

        <if test="bizPathView != null and bizPathView eq 'Y'.toString()">
		LEFT OUTER JOIN (
        	SELECT
	            EA.BUSINESS_ID
	            ,EA.BUSINESS_CD
	            ,EA.BUSINESS_NM
	            ,EB.C_BIZ_ID
            FROM TIM0301 EA
            INNER JOIN TIM0302 EB
            ON EA.BUSINESS_ID = EB.P_BIZ_ID
            AND EB.DEPTH  = 1
		) BP ON BP.C_BIZ_ID = B.BUSINESS_ID
        </if>

        /*
        LEFT OUTER JOIN (
        SELECT
        A.CHANNEL_ID
        , A.INTERFACE_ID
        , B.ATTRIBUTE_ID
        , B.ATTRIBUTE_CD
        , B.ATTRIBUTE_NM
        , A.ATTRIBUTE_VALUE
        FROM
        TAN0205 A
        INNER JOIN TAN0204 B ON
        A.CHANNEL_ID = B.CHANNEL_ID
        AND A.ATTRIBUTE_ID = B.ATTRIBUTE_ID
        ORDER BY B.ATTRIBUTE_ID
        ) TAN0205 ON A.INTERFACE_ID = TAN0205.INTERFACE_ID
        */
        WHERE A.REQUIREMENT_ID = #{requirementId}
        --AND F.NODE_TYPE = G.NODE_TYPE
        --AND F.SEQ   	 = G.SEQ
        <choose>
       		<when test="_databaseId == 'postgres'">
        ORDER BY F.SEQ, F.NODE_TYPE, L.FILE_ID::numeric
       		</when>
       		<otherwise>
        ORDER BY F.SEQ, F.NODE_TYPE, to_number(L.FILE_ID)
       		</otherwise>
       	</choose>
    </select>

    <select id="getRequirementDetailList" parameterType="map" resultMap="getRequirementDetailResultV2">
		SELECT
	        ----------------------
	        -- 요건
	        ----------------------
	        A.REQUIREMENT_NM
	        ,A.REQUIREMENT_ID
	        ,A.STATUS
	        ,CDAN01.NM AS STATUS_NM
	        ,A.COMMENTS AS RQ_COMMENTS
	        ,A.DEV_EXP_YMD
	        ,A.DEV_FIN_YMD
	        ,A.TEST_EXP_YMD
	        ,A.TEST_FIN_YMD
	        ,A.REAL_EXP_YMD
	        ,A.REAL_FIN_YMD
	        ,A.DEL_YN AS RQ_DEL_YN
	        ,A.REG_USER AS RQ_REG_ID
	        ,A.REG_DATE AS RQ_REG_DATE
	        ,A.MOD_USER AS RQ_MOD_ID
	        ,A.MOD_DATE AS RQ_MOD_DATE
	        ----------------------
	        -- 업무(프로세스)
	        ----------------------
	        ,B.BUSINESS_ID
        <choose>
            <when test="bizPathView != null and bizPathView eq 'Y'.toString()">
			,BP.BUSINESS_NM || ' (' || B.BUSINESS_NM || ')' AS BUSINESS_NM
            </when>
            <otherwise>
			,B.BUSINESS_NM
            </otherwise>
        </choose>
        	,B.BUSINESS_CD
	        ----------------------
	        -- 등로자
	        ----------------------
	        ,C.USER_ID    AS REG_USER_ID
	        ,C.USER_NM    AS REG_USER_NM
	        ,C.CELL_PHONE AS REG_CELL_PHONE
	        ,C.PHONE      AS REG_PHONE
	        ,C.EMAIL      AS REG_EMAIL
	        ----------------------
	        -- 연계채널
	        ----------------------
	        ,E.CHANNEL_ID
	        ,E.CHANNEL_NM
	        ,E.CHANNEL_CD
	        ,E.MAP_RULE
	        ----------------------
	        -- 인터페이스
	        ----------------------
	        ,D.INTERFACE_ID
	        ,D.INTEGRATION_ID
	        ,D.INTERFACE_NM
	        ,D.IMPORTANCE
	        ,CDAN02.NM AS IMPORTANCE_NM
	        ,D.CHANNEL_CH_COMMENTS
	        ,D.CHANNEL_CH_CD
	        ,CDAN06.NM AS CHANNEL_CH_NM
	        ,D.MAX_DELAY_TIME
	        ,D.MAX_DELAY_UNIT
	        ,CDAN03.NM AS MAX_DELAY_UNIT_NM
	        ,D.MAX_ERROR_TIME
	        ,D.MAX_ERROR_UNIT
	        ,CDAN04.NM AS MAX_ERROR_UNIT_NM
	        ,D.DATA_PR_DIR
	        ,CDIM0101.NM AS DATA_PR_DIR_NM
	        ,D.APP_PR_METHOD
	        ,CDIM0201.NM AS APP_PR_METHOD_NM
	        ,D.DATA_PR_METHOD
	        ,CDIM1201.NM AS DATA_PR_METHOD_NM
	        ,D.HAS_DATA_MAP
	        ,CDAN1401.NM AS HAS_DATA_MAP_NM
	        ,D.DATA_FREQ
	        ,D.DATA_FREQ_INPUT
	        ,CDIM03.NM AS DATA_FREQ_NM
	        ,D.SZ_PER_TRAN
	        ,D.CNT_PER_FREQ
	        ,D.CNT_PER_DAY
	        ,D.QTT_PER_DAY
	        ,D.START_RES_TYPE
	        ,CDIM0401.NM AS START_RES_NM
	        ,D.END_RES_TYPE
	        ,CDIM0402.NM AS END_RES_NM
	        ,D.START_NODE_CNT
	        ,D.END_NODE_CNT
	        ,D.DATA_ORDER_YN
	        ,D.DEL_YN   AS IF_DEL_YN
	        ,D.COMMENTS AS IF_COMMENTS
	        ,D.REG_USER AS IF_REG_ID
	        ,D.REG_DATE AS IF_REG_DATE
	        ,D.MOD_USER AS IF_MOD_ID
	        ,D.MOD_DATE AS IF_MOD_DATE
	        -----------------------
	        -- 인터페이스 시스템
	        -----------------------
	        ,F.SYSTEM_ID
	        ,N.SYSTEM_CD
	        ,N.SYSTEM_NM
	        ,F.SEQ AS SYS_SEQ
	        ,F.NODE_TYPE AS SYS_NODE_TYPE
	        ,CDIM0801.NM AS SYS_NODE_TYPE_NM
	        ,F.RESOURCE_TYPE
	        ,CDIM0403.NM AS RESOURCE_NM
	        ,F.SERVICE
	        ,F.SERVICE_DESC
	        ,TIM0403.ORG_ID
	        ,TIM0403.ORG_CD
	        ,TIM0403.ORG_NM
	        ------------------------
	        -- 업무(프로세스)
	        ------------------------
	        ,G.BUSINESS_ID AS BZ_BUSINESS_ID
	        ,O.BUSINESS_CD AS BZ_BUSINESS_CD
	        ,O.BUSINESS_NM AS BZ_BUSINESS_NM
	        ,G.SEQ AS BZ_SEQ
	        ,G.NODE_TYPE AS BZ_NODE_TYPE
	        ,CDIM0802.NM AS BZ_NODE_NM
	        -------------------------
	        -- 인터페이스(패턴)
	        -------------------------
	        ,H.PATTERN_ID
	        ,H.PATTERN_NM
	        ,H.PATTERN_IMG
	        ,H.DATA_PR_DIR AS PTN_DATA_PR_DIR
	        ,CDIM0102.NM AS PTN_DATA_PR_DIR_NM
	        ,H.APP_PR_METHOD AS PTN_APP_PR_METHOD
	        ,CDIM0202.NM AS PTN_APP_PR_METHOD_NM
	        ,H.DATA_PR_METHOD AS PTN_DATA_PR_METHOD
	        ,CDIM1202.NM AS PTN_DATA_PR_METHOD_NM
	        ,H.SND_RCV_REL
	        ,H.COMMENTS AS PTN_COMMENTS

	        --------------------------
	        -- 인터페이스 맵핑
	        --------------------------
	        ,J.AS_INTERFACE_ID
	        --------------------------
	        -- 인터페이스 TAG
	        --------------------------
	        ,K.TAG
	        ,K.SEQ
	        --------------------------
	        -- 인터페이스요건첨부파일
	        --------------------------
	        ,L.FILE_ID AS ATTATCH_ID
	        ,L.FILE_NM AS ATTATCH_FILE_NM
	        ,L.FILE_PATH AS ATTATCH_FILE_PATH
	        ,L.REG_USER AS ATTATCH_USER_ID
	        ,L.REG_DATE AS ATTATCH_USER_DATE
	        --------------------------
	        -- 인터페이스요건설명
	        --------------------------
	        ,M.COMMENT_ID AS COMMENT_ID
	        ,M.CONTENTS AS COMMENT_CONTENTS
	        ,M.REG_USER AS COMMENT_REG_ID
	        ,M.REG_DATE AS COMMENT_REG_DATE
	        ,M.MOD_USER AS COMMENT_MOD_ID
	        ,M.MOD_DATE AS COMMENT_MOD_DATE
	        ,Q.USER_NM  AS COMMENT_REG_NM
	        ,Q.CELL_PHONE  AS COMMENT_REG_CELL_PHONE
	        ,Q.PHONE AS COMMENT_REG_PHONE
	        ,Q.EMAIL AS COMMENT_REG_EMAIL

	        ,S1.USER_ID AS DEVELOPER_ID
	        ,S1.USER_NM AS DEVELOPER_NM
	        ,S1.EMAIL   AS DEVELOPER_EMAIL
	        ,S1.CELL_PHONE AS DEVELOPER_CELL_PHONE
	        ,S1.PHONE AS DEVELOPER_PHONE
	        ,S1.COMPANY_NM AS DEVELOPER_COMPANY_NM
	        ,S1.DEPARTMENT_NM AS DEVELOPER_DEPARTMENT_NM

	        ,S2.USER_ID AS TESTER_ID
	        ,S2.USER_NM AS TESTER_NM
	        ,S2.EMAIL   AS TESTER_EMAIL
	        ,S2.CELL_PHONE AS TESTER_CELL_PHONE
	        ,S2.PHONE AS TESTER_PHONE
	        ,S2.COMPANY_NM AS TESTER_COMPANY_NM
	        ,S2.DEPARTMENT_NM AS TESTER_DEPARTMENT_NM

	        ,S3.USER_ID AS MOVER_ID
	        ,S3.USER_NM AS MOVER_NM
	        ,S3.EMAIL   AS MOVER_EMAIL
	        ,S3.CELL_PHONE AS MOVER_CELL_PHONE
	        ,S3.PHONE AS MOVER_PHONE
	        ,S3.COMPANY_NM AS MOVER_COMPANY_NM
	        ,S3.DEPARTMENT_NM AS MOVER_DEPARTMENT_NM

	        ,ADD_PROPERTIES.ATTRIBUTE_ID
	        ,ADD_PROPERTIES.ATTRIBUTE_CD
	        ,ADD_PROPERTIES.ATTRIBUTE_NM
	        ,ADD_PROPERTIES.ATTRIBUTE_VALUE
	        ,ADD_PROPERTIES.TYPE

	        ,REL_USER.IF_USER_ID
	        ,REL_USER.IF_USER_SEQ
	        ,REL_USER.IF_USER_ROLE
	        ,REL_USER.IF_USER_ROLE_NM
	        ,REL_USER.IF_USER_SYSTEM_ID
	        ,REL_USER.IF_USER_SYSTEM_NM
	        ,REL_USER.IF_USER_SYSTEM_CD
	        ,REL_USER.IF_USER_NM
	        ,REL_USER.IF_USER_CELL_PHONE
	        ,REL_USER.IF_USER_PHONE
	        ,REL_USER.IF_USER_EMAIL
        FROM TAN0101 A
        INNER JOIN TIM0301 B ON A.BUSINESS_ID = B.BUSINESS_ID        -- 업무
        AND A.REQUIREMENT_ID  IN
        <choose>
            <when test="all != null and all eq 'Y'.toString()">
        (SELECT REQUIREMENT_ID FROM TAN0101 WHERE DEL_YN = 'N')
            </when>
            <otherwise>
                <foreach item="item" index="index" collection="requirementIds" open="(" separator="," close=")">
        #{item}
                </foreach>
            </otherwise>
        </choose>
        INNER JOIN TSU0101 C ON A.REG_USER = C.USER_ID               -- 등록자
        LEFT OUTER JOIN TAN0201 D ON A.INTERFACE_ID = D.INTERFACE_ID -- 인터페이스
        LEFT OUTER JOIN TIM0002 E ON E.CHANNEL_ID = D.CHANNEL_ID     -- 인터페이스채널
        LEFT OUTER JOIN (SELECT * FROM TAN0213 WHERE DEL_YN = 'N') F ON A.INTERFACE_ID = F.INTERFACE_ID -- 인터페이스시스템맵핑
        LEFT OUTER JOIN (SELECT * FROM TAN0218 WHERE DEL_YN = 'N') G ON A.INTERFACE_ID = G.INTERFACE_ID -- 인터페이스업무맵핑
        LEFT OUTER JOIN TAN0207 H ON D.REF_PATTERN_ID = H.PATTERN_ID -- 인터페이스패턴
        LEFT OUTER JOIN TAN0210 J ON D.INTERFACE_ID = J.INTERFACE_ID AND J.DEL_YN = 'N' -- 인터페이스맵핑
        LEFT OUTER JOIN (SELECT * FROM TAN0221 WHERE DEL_YN = 'N') K ON D.INTERFACE_ID = K.INTERFACE_ID -- 인터페이스TAG
        LEFT OUTER JOIN (SELECT * FROM TAN0103 WHERE DEL_YN = 'N') L ON A.REQUIREMENT_ID = L.REQUIREMENT_ID -- 인터페이스요건첨부파일
        LEFT OUTER JOIN (SELECT * FROM TAN0102 WHERE DEL_YN = 'N') M ON A.REQUIREMENT_ID = M.REQUIREMENT_ID -- 인터페이스요건설명
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '01' AND DEL_YN = 'N') CDAN01 ON A.STATUS = CDAN01.CD -- 요건상태명
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '02' AND DEL_YN = 'N') CDAN02 ON D.IMPORTANCE = CDAN02.CD -- 인터페이스 중요도
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '06' AND DEL_YN = 'N') CDAN06 ON D.CHANNEL_CH_CD = CDAN06.CD -- 채널변경사유
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '03' AND DEL_YN = 'N') CDAN03 ON D.MAX_DELAY_UNIT = CDAN03.CD -- 처리지연임계치 단위
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '04' AND DEL_YN = 'N') CDAN04 ON D.MAX_ERROR_UNIT = CDAN04.CD -- 장애임계치 단위
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '01' AND DEL_YN = 'N') CDIM0101 ON D.DATA_PR_DIR = CDIM0101.CD -- 데이터 흐름제어
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '02' AND DEL_YN = 'N') CDIM0201 ON D.APP_PR_METHOD = CDIM0201.CD -- 어를처리방식(동기/비동기)
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '12' AND DEL_YN = 'N') CDIM1201 ON D.DATA_PR_METHOD = CDIM1201.CD -- 데이터처리방식
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '03' AND DEL_YN = 'N') CDIM03 ON D.DATA_FREQ = CDIM03.CD -- 발생주기명
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '04' AND DEL_YN = 'N') CDIM0401 ON D.START_RES_TYPE = CDIM0401.CD -- 인터페이스 시작노드 리소스
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '04' AND DEL_YN = 'N') CDIM0402 ON D.END_RES_TYPE = CDIM0402.CD -- 인터페이스 종료노드 리소스
        LEFT OUTER JOIN TIM0101 N ON F.SYSTEM_ID = N.SYSTEM_ID -- 시스템
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '04' AND DEL_YN = 'N') CDIM0403 ON F.RESOURCE_TYPE = CDIM0403.CD -- 시스템리소스
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '08' AND DEL_YN = 'N') CDIM0801 ON F.NODE_TYPE = CDIM0801.CD -- 시스템노드유형
        LEFT OUTER JOIN TIM0301 O ON G.BUSINESS_ID = O.BUSINESS_ID -- 업무
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '08' AND DEL_YN = 'N') CDIM0802 ON G.NODE_TYPE = CDIM0802.CD -- 업무노드유형
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '01' AND DEL_YN = 'N') CDIM0102 ON H.DATA_PR_DIR = CDIM0102.CD -- 패턴-데이터 흐름제어
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '02' AND DEL_YN = 'N') CDIM0202 ON H.APP_PR_METHOD = CDIM0202.CD -- 패턴-어를처리방식(동기/비동기)
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '12' AND DEL_YN = 'N') CDIM1202 ON H.DATA_PR_METHOD = CDIM1202.CD -- 패턴-데이터처리방식
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '14' AND DEL_YN = 'N') CDAN1401 ON D.HAS_DATA_MAP = CDAN1401.CD -- hasDataMap
        LEFT OUTER JOIN TSU0101 Q ON M.REG_USER = Q.USER_ID

        LEFT OUTER JOIN (
        	SELECT
		        A.ORG_ID
		        , A.ORG_CD
		        , A.ORG_NM
		        , B.SYSTEM_ID
	        FROM TIM0401 A
	        INNER JOIN TIM0403 B
	        ON A.ORG_ID = B.ORG_ID
	        AND A.DEL_YN = 'N' AND B.DEL_YN = 'N'
        ) TIM0403 ON TIM0403.SYSTEM_ID = F.SYSTEM_ID

        LEFT OUTER JOIN (
        	SELECT
		        max(B.USER_ID) as USER_ID
		        , max(B.USER_NM) as USER_NM
		        , max(B.EMAIL)	 as EMAIL
		        , max(B.CELL_PHONE) as CELL_PHONE
		        , max(B.PHONE) as PHONE
		        , max(B.COMPANY_NM) as COMPANY_NM
		        , max(B.DEPARTMENT_NM) as DEPARTMENT_NM
		        , A.APPROVAL_ITEM_ID
	        FROM TCO0101 A
	        INNER JOIN TSU0101 B
	        ON A.REQ_USER_ID = B.USER_ID
	        AND A.APPROVAL_ITEM_ID IN
        <choose>
            <when test="all != null and all eq 'Y'.toString()">
            (SELECT REQUIREMENT_ID FROM TAN0101 WHERE DEL_YN = 'N')
            </when>
            <otherwise>
                <foreach item="item" index="index" collection="requirementIds" open="(" separator="," close=")">
            #{item}
                </foreach>
            </otherwise>
        </choose>
        	AND A.APPROVAL_ITEM_TYPE = '0'
        	AND A.REQ_TYPE = 'G0'
        	GROUP BY A.APPROVAL_ITEM_ID
        ) S1 ON A.REQUIREMENT_ID = S1.APPROVAL_ITEM_ID AND A.REAL_FIN_YMD IS NOT NULL

        LEFT OUTER JOIN (
        	SELECT
        		  MAX(B.USER_ID) AS USER_ID
        		, MAX(B.USER_NM) AS USER_NM
        		, MAX(B.EMAIL)	 AS EMAIL
        		, MAX(B.CELL_PHONE) AS CELL_PHONE
        		, MAX(B.PHONE) AS PHONE
        		, MAX(B.COMPANY_NM) AS COMPANY_NM
        		, MAX(B.DEPARTMENT_NM) AS DEPARTMENT_NM
        		, A.APPROVAL_ITEM_ID
        	FROM TCO0101 A
        	INNER JOIN TSU0101 B
        	ON A.REQ_USER_ID = B.USER_ID
        	AND A.APPROVAL_ITEM_ID in
        <choose>
            <when test="all != null and all eq 'Y'.toString()">
            (SELECT REQUIREMENT_ID FROM TAN0101 WHERE DEL_YN = 'N')
            </when>
            <otherwise>
                <foreach item="item" index="index" collection="requirementIds" open="(" separator="," close=")">
            #{item}
                </foreach>
            </otherwise>
        </choose>
        	AND A.APPROVAL_ITEM_TYPE = '0'
        	AND A.REQ_TYPE = 'H0'
        	GROUP BY A.APPROVAL_ITEM_ID
        ) S2 ON A.REQUIREMENT_ID = S2.APPROVAL_ITEM_ID AND A.REAL_FIN_YMD IS NOT NULL

        LEFT OUTER JOIN (
        	SELECT
        		  MAX(B.USER_ID) AS USER_ID
        		, MAX(B.USER_NM) AS USER_NM
        		, MAX(B.EMAIL)	 AS EMAIL
        		, MAX(B.CELL_PHONE) AS CELL_PHONE
        		, MAX(B.PHONE) AS PHONE
        		, MAX(B.COMPANY_NM) AS COMPANY_NM
        		, MAX(B.DEPARTMENT_NM) AS DEPARTMENT_NM
        		, A.APPROVAL_ITEM_ID
        	FROM TCO0101 A
        	INNER JOIN TSU0101 B
        	ON A.REQ_USER_ID = B.USER_ID
        	AND A.APPROVAL_ITEM_ID in
        <choose>
            <when test="all != null and all eq 'Y'.toString()">
            (SELECT REQUIREMENT_ID FROM TAN0101 WHERE DEL_YN = 'N')
            </when>
            <otherwise>
                <foreach item="item" index="index" collection="requirementIds" open="(" separator="," close=")">
            #{item}
                </foreach>
            </otherwise>
        </choose>
        	AND A.APPROVAL_ITEM_TYPE = '0'
        	AND A.REQ_TYPE = 'I0'
        	GROUP BY A.APPROVAL_ITEM_ID
        ) S3 ON A.REQUIREMENT_ID = S1.APPROVAL_ITEM_ID AND A.REAL_FIN_YMD IS NOT NULL

        LEFT OUTER JOIN (
        	SELECT
        		A.CHANNEL_ID
        		, A.INTERFACE_ID
        		, B.ATTRIBUTE_ID
        		, B.ATTRIBUTE_CD
        		, B.ATTRIBUTE_NM
        		, A.ATTRIBUTE_VALUE
        		, '0' AS TYPE
        	FROM TAN0205 A
        	INNER JOIN TAN0204 B
        	ON A.CHANNEL_ID = B.CHANNEL_ID
        	AND A.ATTRIBUTE_ID = B.ATTRIBUTE_ID
        	UNION
        	SELECT
        		'' AS CHANNEL_ID
        		, A.INTERFACE_ID
        		, B.ATTRIBUTE_ID
        		, B.ATTRIBUTE_CD
        		, B.ATTRIBUTE_NM
        		, A.ATTRIBUTE_VALUE
        		, '1' AS TYPE
        	FROM TAN0203 A
        	INNER JOIN TAN0202 B
        	ON A.ATTRIBUTE_ID = B.ATTRIBUTE_ID
        ) ADD_PROPERTIES ON D.INTERFACE_ID = ADD_PROPERTIES.INTERFACE_ID

        LEFT OUTER JOIN (
        	SELECT
        		 si.USER_ID     AS IF_USER_ID
        		,si.SEQ         AS IF_USER_SEQ
        		,si.ROLE_TYPE   AS IF_USER_ROLE
        		,cdim09.NM      AS IF_USER_ROLE_NM
        		,sq.SYSTEM_ID   AS IF_USER_SYSTEM_ID
        		,sq.SYSTEM_NM   AS IF_USER_SYSTEM_NM
        		,sq.SYSTEM_CD   AS IF_USER_SYSTEM_CD
        		,sp.USER_NM     AS IF_USER_NM
        		,sp.CELL_PHONE  AS IF_USER_CELL_PHONE
        		,sp.PHONE       AS IF_USER_PHONE
        		,sp.EMAIL       AS IF_USER_EMAIL
        		,si.INTERFACE_ID
        	FROM TAN0219 si
        	INNER JOIN TSU0101 sp ON si.USER_ID = sp.USER_ID
        	AND si.DEL_YN = 'N'
        	AND sp.DEL_YN = 'N'
        	LEFT OUTER JOIN  TIM0101 sq ON si.SYSTEM_ID = sq.SYSTEM_ID
        	AND sq.DEL_YN = 'N'
        	LEFT OUTER JOIN TSU0301 cdim09 ON si.ROLE_TYPE = cdim09.CD
        	AND cdim09.LEVEL1 = 'IM'
        	AND cdim09.LEVEL2 = '09'
        	AND cdim09.DEL_YN = 'N'
        	ORDER BY si.SEQ
        ) REL_USER ON REL_USER.INTERFACE_ID = D.INTERFACE_ID

        <if test="bizPathView != null and bizPathView eq 'Y'.toString()">
		LEFT OUTER JOIN (
            SELECT
            	EA.BUSINESS_ID
            	,EA.BUSINESS_CD
            	,EA.BUSINESS_NM
            	,EB.C_BIZ_ID
            FROM TIM0301 EA
            INNER JOIN TIM0302 EB
            ON EA.BUSINESS_ID = EB.P_BIZ_ID
            AND EB.DEPTH = 1
		) BP ON BP.C_BIZ_ID = B.BUSINESS_ID
        </if>
        ORDER BY A.REQUIREMENT_ID, F.SEQ, F.NODE_TYPE, TO_NUMBER(L.FILE_ID)
    </select>

    <resultMap id="getRequirementDetailResult" type="Requirement">
        <id property="requirementId" 		column="REQUIREMENT_ID"/>
        <result property="requirementNm" 	column="REQUIREMENT_NM"/>
        <result property="status" 			column="STATUS"/>
        <result property="statusNm" 		column="STATUS_NM"/>
        <result property="comments" 		column="RQ_COMMENTS"/>
        <result property="devExpYmd" 		column="DEV_EXP_YMD"/>
        <result property="devFinYmd" 		column="DEV_FIN_YMD"/>
        <result property="testExpYmd" 		column="TEST_EXP_YMD"/>
        <result property="testFinYmd" 		column="TEST_FIN_YMD"/>
        <result property="realExpYmd" 		column="REAL_EXP_YMD"/>
        <result property="realFinYmd" 		column="REAL_FIN_YMD"/>
        <result property="delYn" 			column="RQ_DEL_YN"/>
        <result property="regId" 			column="RQ_REG_ID"/>
        <result property="regDate" 			column="RQ_REG_DATE"/>
        <result property="modId" 			column="RQ_MOD_ID"/>
        <result property="modDate"			column="RQ_MOD_DATE"/>

        <association property="business" javaType="Business">
            <id property="businessId" 		column="BUSINESS_ID"/>
            <result property="businessNm" 	column="BUSINESS_NM"/>
            <result property="businessCd" 	column="BUSINESS_CD"/>
        </association>

        <association property="regUser" javaType="User">
            <id property="userId" 				column="REG_USER_ID"/>
            <result property="userNm" 			column="REG_USER_NM"/>
            <result property="cellPhone" 		column="REG_CELL_PHONE"/>
            <result property="phone"			column="REG_PHONE"/>
            <result property="email"			column="REG_EMAIL"/>
        </association>

        <association property="modUser" javaType="User">
            <id property="userId" 				column="MOD_USER_ID"/>
            <result property="userNm" 			column="MOD_USER_NM"/>
            <result property="cellPhone" 		column="MOD_CELL_PHONE"/>
            <result property="phone"			column="MOD_PHONE"/>
            <result property="email"			column="MOD_EMAIL"/>
        </association>

        <association property="developer" javaType="User">
            <id property="userId" 				column="DEVELOPER_ID"/>
            <result property="userNm" 			column="DEVELOPER_NM"/>
            <result property="cellPhone" 		column="DEVELOPER_CELL_PHONE"/>
            <result property="phone"			column="DEVELOPER_PHONE"/>
            <result property="email"			column="DEVELOPER_EMAIL"/>
            <result property="companyNm"		column="DEVELOPER_COMPANY_NM"/>
            <result property="departmentNm"		column="DEVELOPER_DEPARTMENT_NM"/>
        </association>

        <association property="tester" javaType="User">
            <id property="userId" 				column="TESTER_ID"/>
            <result property="userNm" 			column="TESTER_NM"/>
            <result property="cellPhone" 		column="TESTER_CELL_PHONE"/>
            <result property="phone"			column="TESTER_PHONE"/>
            <result property="email"			column="TESTER_EMAIL"/>
            <result property="companyNm"		column="TESTER_COMPANY_NM"/>
            <result property="departmentNm"		column="TESTER_DEPARTMENT_NM"/>
        </association>

        <association property="mover" javaType="User">
            <id property="userId" 				column="MOVER_ID"/>
            <result property="userNm" 			column="MOVER_NM"/>
            <result property="cellPhone" 		column="MOVER_CELL_PHONE"/>
            <result property="phone"			column="MOVER_PHONE"/>
            <result property="email"			column="MOVER_EMAIL"/>
            <result property="companyNm"		column="MOVER_COMPANY_NM"/>
            <result property="departmentNm"		column="MOVER_DEPARTMENT_NM"/>
        </association>

        <association property="interfaceInfo" javaType="Interface">
            <id property="interfaceId" 			column="INTERFACE_ID"/>
            <result property="integrationId" 	column="INTEGRATION_ID"/>
            <result property="interfaceNm" 		column="INTERFACE_NM"/>
            <result property="importance"		column="IMPORTANCE"/>
            <result property="importanceNm"		column="IMPORTANCE_NM"/>
            <result property="channelChangeComments"	column="CHANNEL_CH_COMMENTS"/>
            <result property="channelChangeCd"			column="CHANNEL_CH_CD"/>
            <result property="channelChangeNm"			column="CHANNEL_CH_NM"/>
            <result property="maxDelayTime"		column="MAX_DELAY_TIME"/>
            <result property="maxDelayUnit"		column="MAX_DELAY_UNIT"/>
            <result property="maxDelayUnitNm"	column="MAX_DELAY_UNIT_NM"/>
            <result property="maxErrorTime"		column="MAX_ERROR_TIME"/>
            <result property="maxErrorUnit"		column="MAX_ERROR_UNIT"/>
            <result property="maxErrorUnitNm"	column="MAX_ERROR_UNIT_NM"/>
            <result property="dataPrDir"		column="DATA_PR_DIR"/>
            <result property="dataPrDirNm"		column="DATA_PR_DIR_NM"/>
            <result property="appPrMethod"		column="APP_PR_METHOD"/>
            <result property="appPrMethodNm" 	column="APP_PR_METHOD_NM"/>
            <result property="dataPrMethod"		column="DATA_PR_METHOD"/>
            <result property="dataPrMethodNm"	column="DATA_PR_METHOD_NM"/>
            <result property="dataFrequency"	column="DATA_FREQ"/>
            <result property="hasDataMap" 		column="HAS_DATA_MAP"/>
            <result property="hasDataMapNm" 		column="HAS_DATA_MAP_NM"/>
            <result property="dataFrequencyInput"	column="DATA_FREQ_INPUT"/>
            <result property="dataFrequencyNm"	column="DATA_FREQ_NM"/>
            <result property="sizePerTran"		column="SZ_PER_TRAN"/>
            <result property="cntPerFrequency"	column="CNT_PER_FREQ"/>
            <result property="cntPerDay"		column="CNT_PER_DAY"/>
            <result property="qttPerDay"		column="QTT_PER_DAY"/>
            <result property="startResType"		column="START_RES_TYPE"/>
            <result property="startResTypeNm"	column="START_RES_NM"/>
            <result property="endResType"		column="END_RES_TYPE"/>
            <result property="endResTypeNm"		column="END_RES_NM"/>
            <result property="startNodeCnt"		column="START_NODE_CNT"/>
            <result property="endNodeCnt"		column="END_NODE_CNT"/>
            <result property="dataSeqYn"		column="DATA_ORDER_YN"/>
            <result property="delYn"			column="IF_DEL_YN"/>
            <result property="comments"			column="IF_COMMENTS"/>
            <result property="regDate"			column="IF_REG_DATE"/>
            <result property="regId"			column="IF_REG_ID"/>
            <result property="modDate"			column="IF_MOD_DATE"/>
            <result property="modId"			column="IF_MOD_ID"/>

            <association property="channel" javaType="Channel">
                <id property="channelId" 			column="CHANNEL_ID"/>
                <result property="channelNm" 		column="CHANNEL_NM"/>
            </association>

            <association property="refPattern" javaType="InterfacePattern">
                <id property="patternId" 			column="PATTERN_ID"/>
                <result property="patternNm"		column="PATTERN_NM"/>
                <result property="patternImg"		column="PATTERN_IMG"/>
                <result property="dataPrDir"		column="PTN_DATA_PR_DIR"/>
                <result property="dataPrDirNm"		column="PTN_DATA_PR_DIR_NM"/>
                <result property="appPrMethod"		column="PTN_APP_PR_METHOD"/>
                <result property="appPrMethodNm"	column="PTN_APP_PR_METHOD_NM"/>
                <result property="dataPrMethod"		column="PTN_DATA_PR_METHOD"/>
                <result property="dataPrMethodNm"	column="PTN_DATA_PR_METHOD_NM"/>
                <result property="sndRcvRel"		column="SND_RCV_REL"/>
                <result property="comments"			column="PTN_COMMENTS"/>
            </association>

            <association property="interfaceMapping" javaType="InterfaceMapping">
                <result property="asisInterfaceId"  column="AS_INTERFACE_ID"/>
                <result property="interfaceId" 		column="INTERFACE_ID"/>
                <result property="channelId" 		column="CHANNEL_ID"/>
            </association>

            <collection property="systemList" ofType="System">
                <id property="systemId" 		column="SYSTEM_ID"/>
                <id property="seq" 				column="SYS_SEQ"/>
                <result property="systemCd" 	column="SYSTEM_CD"/>
                <result property="systemNm" 	column="SYSTEM_NM"/>
                <result property="nodeType" 	column="SYS_NODE_TYPE"/>
                <result property="nodeTypeNm" 	column="SYS_NODE_TYPE_NM"/>
                <result property="service" 		column="SERVICE"/>
                <result property="serviceDesc" 	column="SERVICE_DESC"/>
                <result property="resourceCd" 	column="RESOURCE_TYPE"/>
                <result property="resourceNm" 	column="RESOURCE_NM"/>
            </collection>

            <collection property="businessList" ofType="Business">
                <id property="businessId" 		column="BZ_BUSINESS_ID"/>
                <id property="seq" 				column="BZ_SEQ"/>
                <result property="businessCd" 	column="BZ_BUSINESS_CD"/>
                <result property="businessNm" 	column="BZ_BUSINESS_NM"/>
                <result property="nodeType" 	column="BZ_NODE_TYPE"/>
                <result property="nodeTypeNm" 	column="BZ_NODE_NM"/>
            </collection>
            <!--
            <collection property="senderSystemInfoList" ofType="DisplaySystemInfo">
                <discriminator javaType="string" column="SYS_NODE_TYPE">
                    <case value="0" resultMap="displaySystemInfoResultMap"/>
                </discriminator>
            </collection>
            -->
            <collection property="receiverSystemInfoList" ofType="DisplaySystemInfo">
                <discriminator javaType="string" column="SYS_NODE_TYPE">
                    <case value="0" resultMap="displaySystemInfoResultMap"/>
                    <case value="1" resultMap="displaySystemInfoResultMap"/>
                    <case value="2" resultMap="displaySystemInfoResultMap"/>
                    <case value="3" resultMap="displaySystemInfoResultMap"/>
                </discriminator>
            </collection>

            <collection property="tagList" ofType="InterfaceTag">
                <id property="interfaceId" 			column="INTERFACE_ID"/>
                <id property="tag" 					column="TAG"/>
                <id property="seq" 					column="SEQ"/>
            </collection>

            <collection property="relUsers" ofType="RelUser" column="INTERFACE_ID" select="selectInterfaceUsers"/>
            <collection property="properties" ofType="InterfaceProperties" column="INTERFACE_ID" select="selectInterfaceProperties"/>

        </association>

        <collection property="attatchFileList" ofType="RequirementAttatchFile">
            <id property="fileId"				column="ATTATCH_ID"/>
            <result property="fileNm"			column="ATTATCH_FILE_NM"/>
            <result property="filePath"			column="ATTATCH_FILE_PATH"/>
            <result property="regId"			column="ATTATCH_USER_ID"/>
            <result property="regDate"			column="ATTATCH_USER_DATE"/>
        </collection>

        <collection property="commentList" ofType="RequirementComment">

            <id property="commentId"		 column="COMMENT_ID"/>
            <result property="comment"		 column="COMMENT_CONTENTS"/>
            <result property="regId"		 column="COMMENT_REG_ID"/>
            <result property="regDate"		 column="COMMENT_REG_DATE"/>
            <result property="modId"		 column="COMMENT_MOD_ID"/>
            <result property="modDate"		 column="COMMENT_MOD_DATE"/>

            <association property="regUser" javaType="User">
                <id 	property="userId" 		column="COMMENT_REG_ID" />
                <result property="userNm" 		column="COMMENT_REG_NM" />
                <result property="cellPhone" 	column="COMMENT_REG_CELL_PHONE" />
                <result property="phone" 		column="COMMENT_REG_PHONE" />
                <result property="email" 		column="COMMENT_REG_EMAIL" />
            </association>

        </collection>
    </resultMap>

    <resultMap id="getRequirementDetailResultV2" type="Requirement">
        <id property="requirementId" 		column="REQUIREMENT_ID"/>
        <result property="requirementNm" 	column="REQUIREMENT_NM"/>
        <result property="status" 			column="STATUS"/>
        <result property="statusNm" 		column="STATUS_NM"/>
        <result property="comments" 		column="RQ_COMMENTS"/>
        <result property="devExpYmd" 		column="DEV_EXP_YMD"/>
        <result property="devFinYmd" 		column="DEV_FIN_YMD"/>
        <result property="testExpYmd" 		column="TEST_EXP_YMD"/>
        <result property="testFinYmd" 		column="TEST_FIN_YMD"/>
        <result property="realExpYmd" 		column="REAL_EXP_YMD"/>
        <result property="realFinYmd" 		column="REAL_FIN_YMD"/>
        <result property="delYn" 			column="RQ_DEL_YN"/>
        <result property="regId" 			column="RQ_REG_ID"/>
        <result property="regDate" 			column="RQ_REG_DATE"/>
        <result property="modId" 			column="RQ_MOD_ID"/>
        <result property="modDate"			column="RQ_MOD_DATE"/>

        <association property="business" javaType="Business">
            <id property="businessId" 		column="BUSINESS_ID"/>
            <result property="businessNm" 	column="BUSINESS_NM"/>
            <result property="businessCd" 	column="BUSINESS_CD"/>
        </association>

        <association property="regUser" javaType="User">
            <id property="userId" 				column="REG_USER_ID"/>
            <result property="userNm" 			column="REG_USER_NM"/>
            <result property="cellPhone" 		column="REG_CELL_PHONE"/>
            <result property="phone"			column="REG_PHONE"/>
            <result property="email"			column="REG_EMAIL"/>
        </association>

        <association property="developer" javaType="User">
            <id property="userId" 				column="DEVELOPER_ID"/>
            <result property="userNm" 			column="DEVELOPER_NM"/>
            <result property="cellPhone" 		column="DEVELOPER_CELL_PHONE"/>
            <result property="phone"			column="DEVELOPER_PHONE"/>
            <result property="email"			column="DEVELOPER_EMAIL"/>
            <result property="companyNm"		column="DEVELOPER_COMPANY_NM"/>
            <result property="departmentNm"		column="DEVELOPER_DEPARTMENT_NM"/>
        </association>

        <association property="tester" javaType="User">
            <id property="userId" 				column="TESTER_ID"/>
            <result property="userNm" 			column="TESTER_NM"/>
            <result property="cellPhone" 		column="TESTER_CELL_PHONE"/>
            <result property="phone"			column="TESTER_PHONE"/>
            <result property="email"			column="TESTER_EMAIL"/>
            <result property="companyNm"		column="TESTER_COMPANY_NM"/>
            <result property="departmentNm"		column="TESTER_DEPARTMENT_NM"/>
        </association>

        <association property="mover" javaType="User">
            <id property="userId" 				column="MOVER_ID"/>
            <result property="userNm" 			column="MOVER_NM"/>
            <result property="cellPhone" 		column="MOVER_CELL_PHONE"/>
            <result property="phone"			column="MOVER_PHONE"/>
            <result property="email"			column="MOVER_EMAIL"/>
            <result property="companyNm"		column="MOVER_COMPANY_NM"/>
            <result property="departmentNm"		column="MOVER_DEPARTMENT_NM"/>
        </association>

        <association property="interfaceInfo" javaType="Interface">
            <id property="interfaceId" 			column="INTERFACE_ID"/>
            <result property="integrationId" 	column="INTEGRATION_ID"/>
            <result property="interfaceNm" 		column="INTERFACE_NM"/>
            <result property="importance"		column="IMPORTANCE"/>
            <result property="importanceNm"		column="IMPORTANCE_NM"/>
            <result property="channelChangeComments"	column="CHANNEL_CH_COMMENTS"/>
            <result property="channelChangeCd"			column="CHANNEL_CH_CD"/>
            <result property="channelChangeNm"			column="CHANNEL_CH_NM"/>
            <result property="maxDelayTime"		column="MAX_DELAY_TIME"/>
            <result property="maxDelayUnit"		column="MAX_DELAY_UNIT"/>
            <result property="maxDelayUnitNm"	column="MAX_DELAY_UNIT_NM"/>
            <result property="maxErrorTime"		column="MAX_ERROR_TIME"/>
            <result property="maxErrorUnit"		column="MAX_ERROR_UNIT"/>
            <result property="maxErrorUnitNm"	column="MAX_ERROR_UNIT_NM"/>
            <result property="dataPrDir"		column="DATA_PR_DIR"/>
            <result property="dataPrDirNm"		column="DATA_PR_DIR_NM"/>
            <result property="appPrMethod"		column="APP_PR_METHOD"/>
            <result property="appPrMethodNm" 	column="APP_PR_METHOD_NM"/>
            <result property="dataPrMethod"		column="DATA_PR_METHOD"/>
            <result property="dataPrMethodNm"	column="DATA_PR_METHOD_NM"/>
            <result property="dataFrequency"	column="DATA_FREQ"/>
            <result property="hasDataMap" 		column="HAS_DATA_MAP"/>
            <result property="hasDataMapNm" 		column="HAS_DATA_MAP_NM"/>
            <result property="dataFrequencyInput"	column="DATA_FREQ_INPUT"/>
            <result property="dataFrequencyNm"	column="DATA_FREQ_NM"/>
            <result property="sizePerTran"		column="SZ_PER_TRAN"/>
            <result property="cntPerFrequency"	column="CNT_PER_FREQ"/>
            <result property="cntPerDay"		column="CNT_PER_DAY"/>
            <result property="qttPerDay"		column="QTT_PER_DAY"/>
            <result property="startResType"		column="START_RES_TYPE"/>
            <result property="startResTypeNm"	column="START_RES_NM"/>
            <result property="endResType"		column="END_RES_TYPE"/>
            <result property="endResTypeNm"		column="END_RES_NM"/>
            <result property="startNodeCnt"		column="START_NODE_CNT"/>
            <result property="endNodeCnt"		column="END_NODE_CNT"/>
            <result property="dataSeqYn"		column="DATA_ORDER_YN"/>
            <result property="delYn"			column="IF_DEL_YN"/>
            <result property="comments"			column="IF_COMMENTS"/>
            <result property="regDate"			column="IF_REG_DATE"/>
            <result property="regId"			column="IF_REG_ID"/>
            <result property="modDate"			column="IF_MOD_DATE"/>
            <result property="modId"			column="IF_MOD_ID"/>

            <association property="channel" javaType="Channel">
                <id property="channelId" 			column="CHANNEL_ID"/>
                <result property="channelNm" 		column="CHANNEL_NM"/>
                <result property="channelCd" 		column="CHANNEL_CD"/>
            </association>

            <association property="refPattern" javaType="InterfacePattern">
                <id property="patternId" 			column="PATTERN_ID"/>
                <result property="patternNm"		column="PATTERN_NM"/>
                <result property="patternImg"		column="PATTERN_IMG"/>
                <result property="dataPrDir"		column="PTN_DATA_PR_DIR"/>
                <result property="dataPrDirNm"		column="PTN_DATA_PR_DIR_NM"/>
                <result property="appPrMethod"		column="PTN_APP_PR_METHOD"/>
                <result property="appPrMethodNm"	column="PTN_APP_PR_METHOD_NM"/>
                <result property="dataPrMethod"		column="PTN_DATA_PR_METHOD"/>
                <result property="dataPrMethodNm"	column="PTN_DATA_PR_METHOD_NM"/>
                <result property="sndRcvRel"		column="SND_RCV_REL"/>
                <result property="comments"			column="PTN_COMMENTS"/>
            </association>

            <association property="interfaceMapping" javaType="InterfaceMapping">
                <id 	property="asisInterfaceId"  column="AS_INTERFACE_ID"/>
                <id 	property="interfaceId" 		column="INTERFACE_ID"/>
                <result property="channelId" 		column="CHANNEL_ID"/>
            </association>

            <collection property="systemList" ofType="System">
                <id property="systemId" 		column="SYSTEM_ID"/>
                <id property="seq" 				column="SYS_SEQ"/>
                <result property="systemCd" 	column="SYSTEM_CD"/>
                <result property="systemNm" 	column="SYSTEM_NM"/>
                <result property="nodeType" 	column="SYS_NODE_TYPE"/>
                <result property="nodeTypeNm" 	column="SYS_NODE_TYPE_NM"/>
                <result property="service" 		column="SERVICE"/>
                <result property="serviceDesc" 	column="SERVICE_DESC"/>
                <result property="resourceCd" 	column="RESOURCE_TYPE"/>
                <result property="resourceNm" 	column="RESOURCE_NM"/>
            </collection>

            <collection property="businessList" ofType="Business">
                <id property="businessId" 		column="BZ_BUSINESS_ID"/>
                <id property="seq" 				column="BZ_SEQ"/>
                <result property="businessCd" 	column="BZ_BUSINESS_CD"/>
                <result property="businessNm" 	column="BZ_BUSINESS_NM"/>
                <result property="nodeType" 	column="BZ_NODE_TYPE"/>
                <result property="nodeTypeNm" 	column="BZ_NODE_NM"/>
            </collection>
            <!--
            <collection property="senderSystemInfoList" ofType="DisplaySystemInfo">
                <discriminator javaType="string" column="SYS_NODE_TYPE">
                    <case value="0" resultMap="displaySystemInfoResultMap"/>
                </discriminator>
            </collection>
            -->
            <collection property="receiverSystemInfoList" ofType="DisplaySystemInfo">
                <discriminator javaType="string" column="SYS_NODE_TYPE">
                    <case value="0" resultMap="displaySystemInfoResultMap"/>
                    <case value="1" resultMap="displaySystemInfoResultMap"/>
                    <case value="2" resultMap="displaySystemInfoResultMap"/>
                    <case value="3" resultMap="displaySystemInfoResultMap"/>
                </discriminator>
            </collection>


            <collection property="tagList" ofType="InterfaceTag">
                <!-- tag 값이 널일때도 interfaceId 가 존재하여 엘리먼트가 생성되므로 interfaceId 컬럼 제외함
                <id property="interfaceId" 			column="INTERFACE_ID"/>
                -->
                <id property="tag" 					column="TAG"/>
                <id property="seq" 					column="SEQ"/>
            </collection>

            <!--
            <collection property="relUsers" ofType="RelUser" column="INTERFACE_ID" select="selectInterfaceUsers"/>
            -->
            <collection property="relUsers" ofType="RelUser">
                <id property="user.userId" 			column="IF_USER_ID"/>
                <id property="seq"					column="IF_USER_SEQ"/>
                <result property="roleType"			column="IF_USER_ROLE"/>
                <result property="roleTypeNm"		column="IF_USER_ROLE_NM"/>
                <result property="systemId"			column="IF_USER_SYSTEM_ID"/>
                <result property="systemNm"			column="IF_USER_SYSTEM_NM"/>
                <result property="systemCd"			column="IF_USER_SYSTEM_CD"/>

                <association property="user" javaType="User">
                    <id property="userId" 			column="IF_USER_ID"/>
                    <result property="userNm" 		column="IF_USER_NM"/>
                    <result property="cellPhone" 	column="IF_USER_CELL_PHONE"/>
                    <result property="phone"		column="IF_USER_PHONE"/>
                    <result property="email"		column="IF_USER_EMAIL"/>
                </association>
            </collection>

            <!--
            <collection property="properties" ofType="InterfaceProperties" column="INTERFACE_ID" select="selectInterfaceProperties"/>
            -->
            <collection property="properties" ofType="InterfaceProperties">
                <!-- attrId 값이 널일때도 interfaceId ,channelId 가 존재하여 엘리먼트가 생성되므로 interfaceId,channelId 컬럼 제외함
                <id property="interfaceId" 			column="INTERFACE_ID"/>
                -->
                <id property="channelId" 			column="CHANNEL_ID"/>
                <id property="attrId" 				column="ATTRIBUTE_ID"/>
                <result property="attrCd" 			column="ATTRIBUTE_CD"/>
                <result property="attrNm" 			column="ATTRIBUTE_NM"/>
                <result property="attrValue" 		column="ATTRIBUTE_VALUE"/>
                <result property="type"				column="TYPE"/>

            </collection>

        </association>

        <collection property="attatchFileList" ofType="RequirementAttatchFile">
            <id property="fileId"				column="ATTATCH_ID"/>
            <result property="fileNm"			column="ATTATCH_FILE_NM"/>
            <result property="filePath"			column="ATTATCH_FILE_PATH"/>
            <result property="regId"			column="ATTATCH_USER_ID"/>
            <result property="regDate"			column="ATTATCH_USER_DATE"/>
        </collection>

        <collection property="commentList" ofType="RequirementComment">

            <id property="commentId"		 column="COMMENT_ID"/>
            <result property="comment"		 column="COMMENT_CONTENTS"/>
            <result property="regId"		 column="COMMENT_REG_ID"/>
            <result property="regDate"		 column="COMMENT_REG_DATE"/>
            <result property="modId"		 column="COMMENT_MOD_ID"/>
            <result property="modDate"		 column="COMMENT_MOD_DATE"/>

            <association property="regUser" javaType="User">
                <id 	property="userId" 		column="COMMENT_REG_ID" />
                <result property="userNm" 		column="COMMENT_REG_NM" />
                <result property="cellPhone" 	column="COMMENT_REG_CELL_PHONE" />
                <result property="phone" 		column="COMMENT_REG_PHONE" />
                <result property="email" 		column="COMMENT_REG_EMAIL" />
            </association>

        </collection>

    </resultMap>

	<!-- GS Excel 일괄 업로드  update 기능을 위해 requirementId 조회 -->
	<select  id="getRequirementIdForUpdate" parameterType="String" resultType="java.util.HashMap">
        SELECT
	        a.REQUIREMENT_ID AS requirementId
	        , a.REQUIREMENT_NM AS requirementNm
	        , b.INTERFACE_ID AS interfaceId
        FROM TAN0101 a
        INNER JOIN (
	        SELECT
		        INTERFACE_ID,
		        INTERFACE_NM,
		        INTEGRATION_ID
	        FROM TAN0201
	        WHERE INTEGRATION_ID = #{integrationId} and DEL_YN='N') b
        ON a.DEL_YN='N' AND a.INTERFACE_ID = b.INTERFACE_ID
    </select>

    <select  id="getRequirementsPageInfo" parameterType="map" resultType="PageInfo">
        SELECT
        	TOTAL					 AS "totalCount",
        	#{perCount}      		 AS "perCount",
        	trunc(TOTAL/#{perCount}) AS "pageCount",
        	mod(TOTAL,#{perCount})   AS "tailCount",
        	#{page}					 AS "page"
        FROM (SELECT  COUNT(*) AS TOTAL FROM TAN0101 A WHERE A.DEL_YN = 'N')
    </select>

    <resultMap id="displaySystemInfoResultMap" type="DisplaySystemInfo">
        <id property="systemId" 		column="SYSTEM_ID"/>
        <id property="seq" 				column="SYS_SEQ"/>
        <result property="systemCd" 	column="SYSTEM_CD"/>
        <result property="systemNm" 	column="SYSTEM_NM"/>
        <result property="nodeType" 	column="SYS_NODE_TYPE"/>
        <result property="nodeTypeNm" 	column="SYS_NODE_TYPE_NM"/>
        <result property="service" 		column="SERVICE"/>
        <result property="serviceDesc" 	column="SERVICE_DESC"/>
        <result property="resourceCd" 	column="RESOURCE_TYPE"/>
        <result property="resourceNm" 	column="RESOURCE_NM"/>
        <result property="businessId" 	column="BZ_BUSINESS_ID"/>
        <result property="businessCd" 	column="BZ_BUSINESS_CD"/>
        <result property="businessNm" 	column="BZ_BUSINESS_NM"/>
        <result property="orgId" 		column="ORG_ID"/>
        <result property="orgCd" 		column="ORG_CD"/>
        <result property="orgNm" 		column="ORG_NM"/>
    </resultMap>

    <select id="selectInterfaceProperties" resultMap="selectInterfacePropertiesMap">
        SELECT
        	A.CHANNEL_ID
        	, A.INTERFACE_ID
        	, B.ATTRIBUTE_ID
        	, B.ATTRIBUTE_CD
        	, B.ATTRIBUTE_NM
        	, A.ATTRIBUTE_VALUE
        	, '0' AS TYPE
        FROM TAN0205 A
        INNER JOIN TAN0204 B
        ON A.CHANNEL_ID = B.CHANNEL_ID
        AND A.ATTRIBUTE_ID = B.ATTRIBUTE_ID
        WHERE A.INTERFACE_ID = #{interfaceId}
        --ORDER BY B.ATTRIBUTE_ID

        UNION

        SELECT
        	'' AS CHANNEL_ID
        	, A.INTERFACE_ID
        	, B.ATTRIBUTE_ID
        	, B.ATTRIBUTE_CD
        	, B.ATTRIBUTE_NM
        	, A.ATTRIBUTE_VALUE
        	, '1' AS TYPE
        FROM TAN0203 A
        INNER JOIN TAN0202 B ON
        A.ATTRIBUTE_ID = B.ATTRIBUTE_ID
        WHERE A.INTERFACE_ID = #{interfaceId}
        --ORDER BY B.ATTRIBUTE_ID
    </select>

    <resultMap id="selectInterfacePropertiesMap" type="InterfaceProperties">
        <id property="channelId" 			column="CHANNEL_ID"/>
        <id property="attrId" 				column="ATTRIBUTE_ID"/>
        <result property="attrCd" 			column="ATTRIBUTE_CD"/>
        <result property="attrNm" 			column="ATTRIBUTE_NM"/>
        <result property="attrValue" 		column="ATTRIBUTE_VALUE"/>
    </resultMap>

    <select id="selectInterfaceUsers" resultMap="relUserResultMap">
        SELECT
        	si.USER_ID     AS IF_USER_ID
        	,si.SEQ         AS IF_USER_SEQ
        	,si.ROLE_TYPE   AS IF_USER_ROLE
        	,cdim09.NM      AS IF_USER_ROLE_NM
        	,sq.SYSTEM_ID   AS IF_USER_SYSTEM_ID
        	,sq.SYSTEM_NM   AS IF_USER_SYSTEM_NM
        	,sq.SYSTEM_CD   AS IF_USER_SYSTEM_CD
        	,sp.USER_NM     AS IF_USER_NM
        	,sp.CELL_PHONE  AS IF_USER_CELL_PHONE
        	,sp.PHONE       AS IF_USER_PHONE
        	,sp.EMAIL       AS IF_USER_EMAIL
        FROM TAN0219 si
        INNER JOIN TSU0101 sp ON si.USER_ID = sp.USER_ID
        AND si.INTERFACE_ID = #{interfaceId}
        AND si.DEL_YN = 'N'
        AND sp.DEL_YN = 'N'
        LEFT OUTER JOIN  TIM0101 sq ON si.SYSTEM_ID = sq.SYSTEM_ID
        AND sq.DEL_YN = 'N'
        LEFT OUTER JOIN TSU0301 cdim09 ON si.ROLE_TYPE = cdim09.CD
        AND cdim09.LEVEL1 = 'IM'
        AND cdim09.LEVEL2 = '09'
        AND cdim09.DEL_YN = 'N'
        ORDER BY si.SEQ
    </select>

    <resultMap id="relUserResultMap" type="RelUser">
        <id property="user.userId" 			column="IF_USER_ID"/>
        <id property="seq"					column="IF_USER_SEQ"/>
        <result property="roleType"			column="IF_USER_ROLE"/>
        <result property="roleTypeNm"		column="IF_USER_ROLE_NM"/>
        <result property="systemId"			column="IF_USER_SYSTEM_ID"/>
        <result property="systemNm"			column="IF_USER_SYSTEM_NM"/>
        <result property="systemCd"			column="IF_USER_SYSTEM_CD"/>

        <association property="user" javaType="User">
            <id property="userId" 			column="IF_USER_ID"/>
            <result property="userNm" 		column="IF_USER_NM"/>
            <result property="cellPhone" 	column="IF_USER_CELL_PHONE"/>
            <result property="phone"		column="IF_USER_PHONE"/>
            <result property="email"		column="IF_USER_EMAIL"/>
        </association>
    </resultMap>

    <insert id="insertRequirement" parameterType="Requirement">
        <selectKey keyProperty="requirementId" resultType="string" order="BEFORE" >
        	<choose>
        		<when test="_databaseId == 'postgres'">
	            SELECT 'RQ' || LPAD((COALESCE(MAX(SUBSTR(REQUIREMENT_ID,3)),'0')::numeric+1)::text,8,'0') FROM TAN0101
        		</when>
        		<otherwise>
	            SELECT 'RQ' || LPAD(TO_CHAR(TO_NUMBER(NVL(MAX(SUBSTR(REQUIREMENT_ID,3)),'0')) + 1),8,'0') FROM TAN0101
        		</otherwise>
        	</choose>
        </selectKey>

        INSERT INTO TAN0101 (
	        REQUIREMENT_ID
	        ,REQUIREMENT_NM
	        ,STATUS
	        ,BUSINESS_ID
	        ,INTERFACE_ID
	        ,DEV_EXP_YMD
	        ,DEV_FIN_YMD
	        ,TEST_EXP_YMD
	        ,TEST_FIN_YMD
	        ,REAL_EXP_YMD
	        ,REAL_FIN_YMD
	        ,COMMENTS
	        ,DEL_YN
	        ,REG_DATE
	        ,REG_USER
	        ,MOD_DATE
	        ,MOD_USER
        ) VALUES (
	        #{requirementId		,jdbcType=VARCHAR}
	        ,#{requirementNm		,jdbcType=VARCHAR}
	        ,#{status				,jdbcType=VARCHAR}
	        ,#{business.businessId 	,jdbcType=VARCHAR}
	        ,#{interfaceInfo.interfaceId 	,jdbcType=VARCHAR}
	        ,#{devExpYmd			,jdbcType=VARCHAR}
	        ,#{devFinYmd			,jdbcType=VARCHAR}
	        ,#{testExpYmd			,jdbcType=VARCHAR}
	        ,#{testFinYmd			,jdbcType=VARCHAR}
	        ,#{realExpYmd			,jdbcType=VARCHAR}
	        ,#{realFinYmd			,jdbcType=VARCHAR}
	        ,#{comments				,jdbcType=VARCHAR}
	        ,'N'
	        ,#{regDate				,jdbcType=VARCHAR}
	        ,#{regId				,jdbcType=VARCHAR}
	        ,#{regDate				,jdbcType=VARCHAR}
	        ,#{regId				,jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateRequirement" parameterType="Requirement">
        UPDATE TAN0101
        SET
        REQUIREMENT_NM	= #{requirementNm	, jdbcType=VARCHAR}
        ,STATUS         = #{status			, jdbcType=VARCHAR}
        ,BUSINESS_ID  	= #{business.businessId	, jdbcType=VARCHAR}
        ,INTERFACE_ID 	= #{interfaceInfo.interfaceId, jdbcType=VARCHAR}
        ,DEV_EXP_YMD  	= #{devExpYmd		, jdbcType=VARCHAR}
        ,DEV_FIN_YMD  	= #{devFinYmd		, jdbcType=VARCHAR}
        ,TEST_EXP_YMD 	= #{testExpYmd		, jdbcType=VARCHAR}
        ,TEST_FIN_YMD 	= #{testFinYmd		, jdbcType=VARCHAR}
        ,REAL_EXP_YMD 	= #{realExpYmd		, jdbcType=VARCHAR}
        ,REAL_FIN_YMD 	= #{realFinYmd		, jdbcType=VARCHAR}
        ,COMMENTS     	= #{comments		, jdbcType=VARCHAR}
        ,MOD_DATE     	= #{modDate			, jdbcType=VARCHAR}
        ,MOD_USER     	= #{modId			, jdbcType=VARCHAR}
        WHERE REQUIREMENT_ID = #{requirementId, jdbcType=VARCHAR}
    </update>

    <update id="updateRequirementStatus" parameterType="string">
        UPDATE TAN0101
        SET  STATUS = #{status, jdbcType=VARCHAR}
        ,MOD_DATE  = #{modDate, jdbcType=VARCHAR}
        ,MOD_USER  = #{modId  , jdbcType=VARCHAR}
        WHERE REQUIREMENT_ID = #{requirementId, jdbcType=VARCHAR}
    </update>

    <update id="updateRequirementDevelopmentStatus" parameterType="string">
        UPDATE TAN0101
        SET
        STATUS = #{status, jdbcType=VARCHAR}
        <if test="status != null and status eq 'G0'.toString()">
        ,DEV_FIN_YMD = #{finYmd, jdbcType=VARCHAR}
        </if>
        <if test="status != null and status eq 'H0'.toString()">
        ,TEST_FIN_YMD = #{finYmd, jdbcType=VARCHAR}
        </if>
        <if test="status != null and status eq 'I0'.toString()">
        ,REAL_FIN_YMD = #{finYmd, jdbcType=VARCHAR}
        </if>
        ,MOD_DATE  	  = #{modDate, jdbcType=VARCHAR}
        ,MOD_USER  	  = #{modId  , jdbcType=VARCHAR}
        WHERE REQUIREMENT_ID = #{requirementId , jdbcType=VARCHAR}
    </update>

    <update id="updateRequirementDevelopmentCancelStatus" parameterType="string">
        UPDATE TAN0101
        SET
        STATUS = #{status, jdbcType=VARCHAR}
        <if test="status != null and status eq 'G0'.toString()">
        ,TEST_FIN_YMD = ''
        </if>
        <if test="status != null and status eq 'F1'.toString()">
        ,DEV_FIN_YMD = ''
        </if>
        <if test="status != null and status eq 'F4'.toString()">
        ,REAL_FIN_YMD = ''
        </if>
        ,MOD_DATE  	  = #{modDate, jdbcType=VARCHAR}
        ,MOD_USER  	  = #{modId  , jdbcType=VARCHAR}
        WHERE REQUIREMENT_ID = #{requirementId, jdbcType=VARCHAR}
    </update>

    <select id="getRequirementApproval" resultMap="pep.per.mint.database.mapper.CoreMapper.requirementApprovalResultMap">
        <include refid="pep.per.mint.database.mapper.CoreMapper.requirementApproval"/>
    </select>

    <insert id="insertRequirementApproval" parameterType="RequirementApproval">
        <selectKey keyProperty="seq" resultType="int" order="BEFORE" >
		SELECT COALESCE(MAX(SEQ) + 1, 0) AS SEQ FROM TAN0105 WHERE REQUIREMENT_ID = #{requirementId, jdbcType=VARCHAR}
        </selectKey>

        INSERT INTO TAN0105 (
	        REQUIREMENT_ID
	        ,SEQ
	        ,REQ_USER_ID
	        ,REQ_DATE
	        ,REQ_TYPE
	        ,SUBJECT
	        ,REQ_COMMENTS
	        ,DEL_YN
        ) VALUES (
	        #{requirementId, jdbcType=VARCHAR}
	        ,#{seq 	 		, jdbcType=NUMERIC}
	        ,#{reqUserId 	, jdbcType=VARCHAR}
	        ,#{reqDate 	 	, jdbcType=NUMERIC}
	        ,#{reqType 	 	, jdbcType=NUMERIC}
	        ,#{subject 	 	, jdbcType=NUMERIC}
	        ,#{reqComments 	, jdbcType=NUMERIC}
	        ,'N'
        )
    </insert>

    <insert id="insertRequirementApprovalUser" parameterType="RequirementApprovalUser">
        <selectKey keyProperty="admUserSeq" resultType="int" order="BEFORE" >
		SELECT COALESCE(MAX(SEQ) + 1, 0) AS SEQ FROM TAN0106 WHERE REQUIREMENT_ID = #{requirementId, jdbcType=VARCHAR} AND SEQ = #{seq, jdbcType=NUMERIC}
        </selectKey>

        INSERT INTO TAN0106 (
	        REQUIREMENT_ID
	        ,SEQ
	        ,ADM_USER_SEQ
	        ,ADM_USER_ID
	        ,ROLE_TYPE
	        ,DEL_YN
        ) VALUES (
	        #{requirementId, jdbcType=VARCHAR}
	        ,#{seq 	 		, jdbcType=NUMERIC}
	        ,#{admUserSeq 	, jdbcType=NUMERIC}
	        ,#{admUserId 	, jdbcType=VARCHAR}
	        ,#{roleType 	, jdbcType=NUMERIC}
	        ,'N'
        )
    </insert>

    <insert id="insertFooTest">
        INSERT INTO FOO (FOO_VARCHAR, FOO_INT) VALUES(#{fooVarchar}, '1tyui')
    </insert>

    <update id="deleteRequirement">
        UPDATE TAN0101
        SET
        DEL_YN = 'Y'
        ,MOD_DATE = #{modDate, jdbcType=VARCHAR}
        ,MOD_USER = #{modId, jdbcType=VARCHAR}
        WHERE REQUIREMENT_ID = #{requirementId, jdbcType=VARCHAR}
    </update>

    <update id="restoreRequirement">
        UPDATE TAN0101
        SET
        DEL_YN   = 'N'
        , STATUS = 'A1'
        , MOD_DATE = #{modDate, jdbcType=VARCHAR}
        , MOD_USER = #{modId, jdbcType=VARCHAR}
        WHERE REQUIREMENT_ID = #{requirementId, jdbcType=VARCHAR}
    </update>

    <insert id="insertRequirementComment" parameterType="RequirementComment">
        <selectKey keyProperty="commentId" resultType="string" order="BEFORE" >
        	<choose>
        		<when test="_databaseId == 'postgres'">
		SELECT COALESCE(MAX(COALESCE(COMMENT_ID,'0')::numeric) + 1, 0) FROM TAN0102 WHERE REQUIREMENT_ID = #{requirementId, jdbcType=VARCHAR}
        		</when>
        		<otherwise>
	    SELECT NVL(MAX(TO_NUMBER(NVL(COMMENT_ID,'0'))) + 1, 0) FROM TAN0102 WHERE REQUIREMENT_ID = #{requirementId, jdbcType=VARCHAR}
        		</otherwise>
        	</choose>
        </selectKey>

        INSERT INTO TAN0102 (
	        REQUIREMENT_ID
	        ,COMMENT_ID
	        ,CONTENTS
	        ,DEL_YN
	        ,REG_DATE
	        ,REG_USER
	        ,MOD_DATE
	        ,MOD_USER
        ) VALUES (
	        #{requirementId, jdbcType=VARCHAR}
	        ,#{commentId	, jdbcType=VARCHAR}
	        ,#{comment		, jdbcType=VARCHAR}
	        ,'N'
	        ,#{regDate		, jdbcType=VARCHAR}
	        ,#{regId		, jdbcType=VARCHAR}
	        ,#{regDate		, jdbcType=VARCHAR}
	        ,#{regId		, jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateRequirementComment" parameterType="RequirementComment">
        UPDATE TAN0102
        SET
        CONTENTS = #{comment, jdbcType=VARCHAR}
        ,DEL_YN = #{delYn, jdbcType=VARCHAR}
        ,MOD_DATE = #{modDate, jdbcType=VARCHAR}
        ,MOD_USER = #{modId, jdbcType=VARCHAR}
        WHERE REQUIREMENT_ID = #{requirementId, jdbcType=VARCHAR}
        AND COMMENT_ID = #{commentId, jdbcType=VARCHAR}
    </update>

    <delete id="deleteAllRequirementComment">
        DELETE FROM TAN0102 WHERE REQUIREMENT_ID = #{requirementId, jdbcType=VARCHAR}
        <!--update TAN0102
           set
               DEL_YN   = 'Y'
              ,MOD_DATE = #{modDate	, jdbcType=VARCHAR}
              ,MOD_USER = #{modId	, jdbcType=VARCHAR}
        where REQUIREMENT_ID = #{requirementId	, jdbcType=VARCHAR} -->
    </delete>

    <insert id="insertRequirementAttatchFile" parameterType="RequirementAttatchFile">
        <selectKey keyProperty="fileId" resultType="string" order="BEFORE" >
        	<choose>
        		<when test="_databaseId == 'postgres'">
		SELECT COALESCE(MAX(COALESCE(FILE_ID,'0')::numeric) + 1, 0) FROM TAN0103 WHERE REQUIREMENT_ID = #{requirementId, jdbcType=VARCHAR}
        		</when>
        		<otherwise>
	    SELECT NVL(MAX(TO_NUMBER(NVL(FILE_ID,'0'))) + 1, 0) FROM TAN0103 WHERE REQUIREMENT_ID = #{requirementId, jdbcType=VARCHAR}
        		</otherwise>
        	</choose>
        </selectKey>

        INSERT INTO TAN0103 (
	        REQUIREMENT_ID
	        ,FILE_ID
	        ,FILE_NM
	        ,FILE_PATH
	        ,DEL_YN
	        ,REG_DATE
	        ,REG_USER
	        ,MOD_DATE
	        ,MOD_USER
        ) VALUES (
	        #{requirementId	, jdbcType=VARCHAR}
	        ,#{fileId		, jdbcType=VARCHAR}
	        ,#{fileNm		, jdbcType=VARCHAR}
	        ,#{filePath		, jdbcType=VARCHAR}
	        ,'N'
	        ,#{regDate		, jdbcType=VARCHAR}
	        ,#{regId		, jdbcType=VARCHAR}
	        ,#{regDate		, jdbcType=VARCHAR}
	        ,#{regId		, jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateRequirementAttatchFile"  parameterType="RequirementAttatchFile">
        UPDATE TAN0103
        SET
        FILE_NM 	= #{fileNm	, jdbcType=VARCHAR}
        ,FILE_PATH 	= #{filePath, jdbcType=VARCHAR}
        ,DEL_YN   	= #{delYn	, jdbcType=VARCHAR}
        ,MOD_DATE	= #{modDate	, jdbcType=VARCHAR}
        ,MOD_USER 	= #{modId	, jdbcType=VARCHAR}
        WHERE REQUIREMENT_ID = #{requirementId, jdbcType=VARCHAR}
        AND FILE_ID = #{fileId, jdbcType=VARCHAR}
    </update>

    <delete id="deleteAllRequirementAttatchFile">
        DELETE FROM TAN0103 WHERE REQUIREMENT_ID = #{requirementId, jdbcType=VARCHAR}
        <!--update TAN0103
           set
             DEL_YN   = 'Y'
            ,MOD_DATE = #{modDate	, jdbcType=VARCHAR}
            ,MOD_USER = #{modId		, jdbcType=VARCHAR}
        where REQUIREMENT_ID = #{requirementId, jdbcType=VARCHAR}	-->
    </delete>

    <!-- 삼성전기 불필요한 코드로 보임  BILL -->
    <select id="selectInterfaceId" resultType="string">
		SELECT #{solutionCd} || #{systemCd} || #{serviceType} || LPAD(TO_CHAR(TO_NUMBER(NVL(MAX(SUBSTR(a.INTEGRATION_ID,6)),'0')) + 1),4,'0')
        FROM TAN0201 a
        INNER JOIN TAN0213 b
        ON a.INTERFACE_ID = b.INTERFACE_ID
        AND b.NODE_TYPE = #{nodeType}
        AND b.SEQ = (SELECT MIN(SEQ) FROM TAN0213 WHERE INTERFACE_ID = a.INTERFACE_ID AND DEL_YN = 'N' AND NODE_TYPE = #{nodeType})
        AND b.SYSTEM_ID = #{systemId}
        AND b.RESOURCE_TYPE = #{resourceCd}
        INNER JOIN TIM0002 c
        ON a.CHANNEL_ID = c.CHANNEL_ID
        AND c.CHANNEL_ID = #{channelId}
    </select>
    <!--
    인터페이스 등록
    -->
    <insert id="insertInterface">

        <!-- 형통은 인터페이스 ID를 해당 룰에 의해 자동채번하지 않으므로 주석처리함.
        <selectKey keyProperty="interface.integrationId" resultType="string" order="BEFORE" >
            select
                #{interfaceIdInfo.solutionCd} || #{interfaceIdInfo.systemCd} || #{interfaceIdInfo.serviceType} ||
                lpad(to_char(to_number(nvl(max(substr(a.INTEGRATION_ID,6)),'0')) + 1),4,'0')
              from TAN0201 a
             inner join (select * from TAN0213 where NODE_TYPE = #{interfaceIdInfo.nodeType}) b on a.INTERFACE_ID = b.INTERFACE_ID
             inner join TIM0002 c on a.CHANNEL_ID = c.CHANNEL_ID
             where 1 = 1
               and c.CHANNEL_ID     = #{interfaceIdInfo.channelId}
               and b.SYSTEM_ID 	   = #{interfaceIdInfo.systemId}
               and b.RESOURCE_TYPE  = #{interfaceIdInfo.resourceCd}
        </selectKey> -->
        <selectKey keyProperty="interfaceId" resultType="string" order="BEFORE">
        	<choose>
        		<when test="_databaseId == 'postgres'">
		SELECT 'F@' || LPAD((COALESCE(MAX(SUBSTR(INTERFACE_ID,  3)),'0')::numeric+1)::text,8,'0') FROM TAN0201 WHERE INTERFACE_ID LIKE 'F@%' AND LENGTH(INTERFACE_ID) = 10
        		</when>
        		<otherwise>
	    SELECT 'F@' || LPAD(TO_CHAR(TO_NUMBER(NVL(MAX(SUBSTR(INTERFACE_ID,  3)),'0')) + 1),8,'0') FROM TAN0201 WHERE INTERFACE_ID LIKE 'F@%' AND LENGTH(INTERFACE_ID) = 10
        		</otherwise>
        	</choose>
        </selectKey>

        INSERT INTO TAN0201 (
	        INTERFACE_ID
	        , INTEGRATION_ID
	        , INTERFACE_NM
	        , STATUS
	        , CHANNEL_ID
	        , CHANNEL_CH_COMMENTS
	        , CHANNEL_CH_CD
	        , IMPORTANCE
	        , MAX_DELAY_TIME
	        , MAX_ERROR_TIME
	        , MAX_DELAY_UNIT
	        , MAX_ERROR_UNIT
	        , REF_PATTERN_ID
	        , DATA_PR_DIR
	        , APP_PR_METHOD
	        , DATA_PR_METHOD
	        , DATA_FREQ
	        , DATA_FREQ_INPUT
	        , SZ_PER_TRAN
	        , CNT_PER_FREQ
	        , CNT_PER_DAY
	        , QTT_PER_DAY
	        , START_RES_TYPE
	        , END_RES_TYPE
	        , START_NODE_CNT
	        , END_NODE_CNT
	        , DATA_ORDER_YN
	        , COMMENTS
	        , DEL_YN
	        , REG_DATE
	        , REG_USER
	        , MOD_DATE
	        , MOD_USER
	        , HAS_DATA_MAP
        ) VALUES (
	        #{interfaceId					,jdbcType=VARCHAR}
	        ,#{interface.integrationId		,jdbcType=VARCHAR}
	        ,#{interface.interfaceNm		,jdbcType=VARCHAR}
	        ,'0'
	        ,#{interface.channel.channelId 	,jdbcType=VARCHAR}
	        ,#{interface.channelChangeComments ,jdbcType=VARCHAR}
	        ,#{interface.channelChangeCd	,jdbcType=VARCHAR}
	        ,#{interface.importance			,jdbcType=VARCHAR}
	        <choose>
	       		<when test="_databaseId == 'postgres'">
	        ,#{interface.maxDelayTime		,jdbcType=NUMERIC}::numeric
	        ,#{interface.maxErrorTime		,jdbcType=NUMERIC}::numeric
	       		</when>
	       		<otherwise>
	        ,#{interface.maxDelayTime		,jdbcType=NUMERIC}
	        ,#{interface.maxErrorTime		,jdbcType=NUMERIC}
	       		</otherwise>
	       	</choose>
	        ,#{interface.maxDelayUnit		,jdbcType=VARCHAR}
	        ,#{interface.maxErrorUnit		,jdbcType=VARCHAR}
	        ,#{interface.refPattern.patternId,jdbcType=VARCHAR}
	        ,#{interface.dataPrDir			,jdbcType=VARCHAR}
	        ,#{interface.appPrMethod		,jdbcType=VARCHAR}
	        ,#{interface.dataPrMethod		,jdbcType=VARCHAR}
	        ,#{interface.dataFrequency		,jdbcType=VARCHAR}
	        ,#{interface.dataFrequencyInput	,jdbcType=VARCHAR}
	        ,#{interface.sizePerTran		,jdbcType=NUMERIC}
	        ,#{interface.cntPerFrequency  	,jdbcType=NUMERIC}
	        ,#{interface.cntPerDay			,jdbcType=NUMERIC}
	        ,#{interface.qttPerDay			,jdbcType=NUMERIC}
	        ,#{interface.startResType	    ,jdbcType=VARCHAR}
	        ,#{interface.endResType			,jdbcType=VARCHAR}
	        ,#{interface.startNodeCnt	    ,jdbcType=NUMERIC}
	        ,#{interface.endNodeCnt			,jdbcType=NUMERIC}
	        ,#{interface.dataSeqYn			,jdbcType=VARCHAR}
	        ,#{interface.comments		    ,jdbcType=VARCHAR}
	        ,'N'
	        ,#{interface.regDate		    ,jdbcType=VARCHAR}
	        ,#{interface.regId				,jdbcType=VARCHAR}
	        ,#{interface.regDate		    ,jdbcType=VARCHAR}
	        ,#{interface.regId				,jdbcType=VARCHAR}
	        ,#{interface.hasDataMap			,jdbcType=VARCHAR}
        )
    </insert>

    <select id="selectSystemGenerateInterfaceId" resultType="string">
        SELECT INTERFACE_ID FROM TAN0201 WHERE INTEGRATION_ID = #{interfaceId}
    </select>

    <update id="updateInterface" parameterType="Interface">
        UPDATE TAN0201
        SET
        INTERFACE_NM   = #{interfaceNm		,jdbcType=VARCHAR}
        , INTEGRATION_ID = #{integrationId 		,jdbcType=VARCHAR}
        , CHANNEL_ID     = #{channel.channelId	,jdbcType=VARCHAR}
        , CHANNEL_CH_COMMENTS = #{channelChangeComments ,jdbcType=VARCHAR}
        , CHANNEL_CH_CD  = #{channelChangeCd	,jdbcType=VARCHAR}
        , IMPORTANCE     = #{importance			,jdbcType=VARCHAR}
        <choose>
       		<when test="_databaseId == 'postgres'">
        , MAX_DELAY_TIME = #{maxDelayTime		,jdbcType=NUMERIC}::numeric
        , MAX_ERROR_TIME = #{maxErrorTime		,jdbcType=NUMERIC}::numeric
       		</when>
       		<otherwise>
        , MAX_DELAY_TIME = #{maxDelayTime		,jdbcType=NUMERIC}
        , MAX_ERROR_TIME = #{maxErrorTime		,jdbcType=NUMERIC}
       		</otherwise>
       	</choose>
        , MAX_DELAY_UNIT = #{maxDelayUnit		,jdbcType=VARCHAR}
        , MAX_ERROR_UNIT = #{maxErrorUnit		,jdbcType=VARCHAR}
        , REF_PATTERN_ID = #{refPattern.patternId	,jdbcType=VARCHAR}
        , DATA_PR_DIR    = #{dataPrDir			,jdbcType=VARCHAR}
        , APP_PR_METHOD  = #{appPrMethod		,jdbcType=VARCHAR}
        , DATA_PR_METHOD = #{dataPrMethod		,jdbcType=VARCHAR}
        , DATA_FREQ      = #{dataFrequency 		,jdbcType=VARCHAR}
        , DATA_FREQ_INPUT= #{dataFrequencyInput	,jdbcType=VARCHAR}
        , SZ_PER_TRAN    = #{sizePerTran		,jdbcType=NUMERIC}
        , CNT_PER_FREQ   = #{cntPerFrequency 	,jdbcType=NUMERIC}
        , CNT_PER_DAY    = #{cntPerDay			,jdbcType=NUMERIC}
        , QTT_PER_DAY    = #{qttPerDay			,jdbcType=NUMERIC}
        , START_RES_TYPE = #{startResType		,jdbcType=VARCHAR}
        , END_RES_TYPE   = #{endResType			,jdbcType=VARCHAR}
        , START_NODE_CNT = #{startNodeCnt		,jdbcType=NUMERIC}
        , END_NODE_CNT   = #{endNodeCnt			,jdbcType=NUMERIC}
        , DATA_ORDER_YN  = #{dataSeqYn			,jdbcType=VARCHAR}
        , COMMENTS       = #{comments			,jdbcType=VARCHAR}
        , MOD_DATE       = #{modDate			,jdbcType=VARCHAR}
        , MOD_USER       = #{modId				,jdbcType=VARCHAR}
        , HAS_DATA_MAP   = #{hasDataMap			,jdbcType=VARCHAR}
        WHERE INTERFACE_ID   = #{interfaceId		,jdbcType=VARCHAR}
    </update>

    <update id="deleteInterface">
        UPDATE TAN0201
        SET
        DEL_YN   = 'Y'
        ,MOD_DATE = #{modDate	, jdbcType=VARCHAR}
        ,MOD_USER = #{modId		, jdbcType=VARCHAR}
        WHERE INTERFACE_ID = #{interfaceId, jdbcType=VARCHAR}
    </update>

    <insert id="insertInterfaceSystemMap">
        <!-- <selectKey keyProperty="system.seq" resultType="int" order="BEFORE" >
            SELECT COALESCE(MAX(SEQ) + 1, 0) FROM TAN0213 WHERE INTERFACE_ID = #{interfaceId, jdbcType=VARCHAR}
        </selectKey> -->

        INSERT INTO TAN0213 (
	        SYSTEM_ID
	        , INTERFACE_ID
	        , SEQ
	        , NODE_TYPE
	        , SERVICE
	        , SERVICE_DESC
	        , RESOURCE_TYPE
	        , DEL_YN
	        , REG_DATE
	        , REG_USER
	        , MOD_DATE
	        , MOD_USER
	        ) VALUES (
	        #{system.systemId		, jdbcType=VARCHAR}
	        ,#{interfaceId			, jdbcType=VARCHAR}
	        ,#{system.seq			, jdbcType=NUMERIC}
	        ,#{system.nodeType		, jdbcType=VARCHAR}
	        ,#{system.service		, jdbcType=VARCHAR}
	        ,#{system.serviceDesc   , jdbcType=VARCHAR}
	        ,#{system.resourceCd	, jdbcType=VARCHAR}
	        ,'N'
	        ,#{system.regDate		, jdbcType=VARCHAR}
	        ,#{system.regId			, jdbcType=VARCHAR}
	        ,#{system.regDate		, jdbcType=VARCHAR}
	        ,#{system.regId			, jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateInterfaceSystemMap">
        UPDATE TAN0213
        SET
        SERVICE		= #{system.service		, jdbcType=VARCHAR}
        ,RESOURCE_TYPE= #{system.resourceCd	, jdbcType=VARCHAR}
        ,NODE_TYPE 	= #{system.nodeType		, jdbcType=VARCHAR}
        ,DEL_YN    	= #{system.delYn   		, jdbcType=VARCHAR}
        ,MOD_DATE  	= #{system.modDate 		, jdbcType=VARCHAR}
        ,MOD_USER  	= #{system.modId   		, jdbcType=VARCHAR}
        WHERE INTERFACE_ID = #{interfaceId}
        AND SEQ 		= #{system.seq}
        AND SYSTEM_ID	= #{system.systemId	, jdbcType=VARCHAR}
    </update>

    <delete id="deleteInterfaceSystemMap">
        UPDATE TAN0213
        SET
        DEL_YN    	= 'Y'
        ,MOD_DATE  	= #{system.modDate 		, jdbcType=VARCHAR}
        ,MOD_USER  	= #{system.modId   		, jdbcType=VARCHAR}
        WHERE INTERFACE_ID = #{interfaceId	, jdbcType=VARCHAR}
        AND SEQ 		= #{system.seq		, jdbcType=NUMERIC}
        AND SYSTEM_ID   = #{system.systemId	, jdbcType=VARCHAR}
    </delete>

    <insert id="insertInterfaceBusinessMap">
        <selectKey keyProperty="business.seq" resultType="int" order="BEFORE" >
            SELECT COALESCE(MAX(SEQ) + 1, 0) FROM TAN0218 WHERE INTERFACE_ID = #{interfaceId, jdbcType=VARCHAR}
        </selectKey>

        INSERT INTO TAN0218(
	        INTERFACE_ID
	        ,BUSINESS_ID
	        ,SEQ
	        ,NODE_TYPE
	        ,DEL_YN
	        ,REG_DATE
	        ,REG_USER
	        ,MOD_DATE
	        ,MOD_USER
        ) VALUES (
	        #{interfaceId			, jdbcType=VARCHAR}
	        ,#{business.businessId	, jdbcType=VARCHAR}
	        ,#{business.seq			, jdbcType=NUMERIC}
	        ,#{business.nodeType	, jdbcType=VARCHAR}
	        ,'N'
	        ,#{business.regDate		, jdbcType=VARCHAR}
	        ,#{business.regId		, jdbcType=VARCHAR}
	        ,#{business.regDate		, jdbcType=VARCHAR}
	        ,#{business.regId		, jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateInterfaceBusinessMap">
        UPDATE TAN0218
        SET
        NODE_TYPE   = #{business.nodeType	, jdbcType=VARCHAR}
        ,DEL_YN      = #{business.delYn	  	, jdbcType=VARCHAR}
        ,MOD_DATE    = #{business.modDate 	, jdbcType=VARCHAR}
        ,MOD_USER    = #{business.modId	  	, jdbcType=VARCHAR}
        WHERE INTERFACE_ID = #{interfaceId		, jdbcType=VARCHAR}
        AND SEQ 		= #{business.seq		, jdbcType=NUMERIC}
        AND BUSINESS_ID = #{business.businessId	, jdbcType=VARCHAR}
    </update>

    <delete id="deleteInterfaceBusinessMap">
        UPDATE TAN0218
        SET DEL_YN  = 'Y'
        ,MOD_DATE  	= #{system.modDate 		, jdbcType=VARCHAR}
        ,MOD_USER  	= #{system.modId   		, jdbcType=VARCHAR}
        WHERE INTERFACE_ID = #{interfaceId		, jdbcType=VARCHAR}
        AND SEQ 		= #{business.seq		, jdbcType=NUMERIC}
        AND BUSINESS_ID = #{business.businessId	, jdbcType=VARCHAR}
    </delete>

    <insert id="insertInterfaceTag">
        <selectKey keyProperty="interfaceTag.seq" resultType="int" order="BEFORE" >
		SELECT COALESCE(MAX(SEQ) + 1, 0) FROM TAN0221 WHERE INTERFACE_ID = #{interfaceId, jdbcType=VARCHAR}
        </selectKey>

        INSERT INTO TAN0221 (
	        INTERFACE_ID
	        ,TAG
	        ,SEQ
	        ,DEL_YN
	        ,REG_DATE
	        ,REG_USER
	        ,MOD_DATE
	        ,MOD_USER
        ) VALUES (
	        #{interfaceId			, jdbcType=VARCHAR}
	        ,#{interfaceTag.tag		, jdbcType=VARCHAR}
	        ,#{interfaceTag.seq		, jdbcType=NUMERIC}
	        ,'N'
	        ,#{interfaceTag.regDate	, jdbcType=VARCHAR}
	        ,#{interfaceTag.regId	, jdbcType=VARCHAR}
	        ,#{interfaceTag.regDate	, jdbcType=VARCHAR}
	        ,#{interfaceTag.regId	, jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateInterfaceTag">
        UPDATE TAN0221
        SET DEL_YN = #{interfaceTag.delYn	, jdbcType=VARCHAR}
        ,MOD_DATE  = #{interfaceTag.modDate , jdbcType=VARCHAR}
        ,MOD_USER  = #{interfaceTag.modId	, jdbcType=VARCHAR}
        WHERE INTERFACE_ID = #{interfaceId	, jdbcType=VARCHAR}
        AND SEQ  	= #{interfaceTag.seq  , jdbcType=NUMERIC}
        AND TAG 	= #{interfaceTag.tag  , jdbcType=VARCHAR}
    </update>

    <delete id="deleteInterfaceTag">
        UPDATE TAN0221
        SET DEL_YN = 'Y'
        ,MOD_DATE  = #{interfaceTag.modDate , jdbcType=VARCHAR}
        ,MOD_USER  = #{interfaceTag.modId	, jdbcType=VARCHAR}
        WHERE INTERFACE_ID = #{interfaceId	, jdbcType=VARCHAR}
        AND SEQ  	= #{interfaceTag.seq  , jdbcType=NUMERIC}
        AND TAG 	= #{interfaceTag.tag  , jdbcType=VARCHAR}
    </delete>

    <select id="selectInterfaceMapping" resultType="string" parameterType="InterfaceMapping">
        SELECT AS_INTERFACE_ID
        FROM TAN0210
        WHERE INTERFACE_ID 	= #{interfaceId 	, jdbcType=VARCHAR}
        AND AS_INTERFACE_ID = #{asisInterfaceId	, jdbcType=VARCHAR}
        AND CHANNEL_ID 		= #{channelId		, jdbcType=VARCHAR}
    </select>

    <insert id="insertInterfaceMapping">
        INSERT INTO TAN0210 (
	        INTERFACE_ID
	        ,AS_INTERFACE_ID
	        ,CHANNEL_ID
	        ,DEL_YN
	        ,REG_DATE
	        ,REG_USER
	        ,MOD_DATE
	        ,MOD_USER
        ) VALUES (
	        #{interfaceId			, jdbcType=VARCHAR}
	        ,#{asisInterfaceId		, jdbcType=VARCHAR}
	        ,#{channelId			, jdbcType=VARCHAR}
	        ,'N'
	        ,#{regDate				, jdbcType=VARCHAR}
	        ,#{regId				, jdbcType=VARCHAR}
	        ,#{regDate				, jdbcType=VARCHAR}
	        ,#{regId				, jdbcType=VARCHAR}
        )
    </insert>

    <delete id="deleteInterfaceMapping">
        UPDATE TAN0210
        SET DEL_YN 	= 'Y'
        ,MOD_DATE 	= #{modDate  	, jdbcType=VARCHAR}
        ,MOD_USER 	= #{modId		, jdbcType=VARCHAR}
        WHERE INTERFACE_ID 	= #{interfaceId	, jdbcType=VARCHAR}
    </delete>

    <delete id="removeInterfaceMapping">
        DELETE FROM TAN0210 WHERE INTERFACE_ID = #{interfaceId}
    </delete>

    <insert id="insertInterfaceRelUser">
        <selectKey keyProperty="relUser.seq" resultType="int" order="BEFORE" >
            SELECT COALESCE(MAX(SEQ) + 1, 0) FROM TAN0219 WHERE INTERFACE_ID = #{interfaceId, jdbcType=VARCHAR}
        </selectKey>

        INSERT INTO TAN0219 (
	        INTERFACE_ID
	        ,USER_ID
	        ,SEQ
	        ,ROLE_TYPE
	        ,SYSTEM_ID
	        ,DEL_YN
	        ,REG_DATE
	        ,REG_USER
	        ,MOD_DATE
	        ,MOD_USER
        ) VALUES (
	        #{interfaceId			, jdbcType=VARCHAR}
	        ,#{relUser.user.userId	, jdbcType=VARCHAR}
	        ,#{relUser.seq			, jdbcType=NUMERIC}
	        ,#{relUser.roleType		, jdbcType=VARCHAR}
	        ,#{relUser.systemId     , jdbcType=VARCHAR}
	        ,'N'
	        ,#{relUser.regDate		, jdbcType=VARCHAR}
	        ,#{relUser.regId		, jdbcType=VARCHAR}
	        ,#{relUser.regDate		, jdbcType=VARCHAR}
	        ,#{relUser.regId		, jdbcType=VARCHAR}
        )
    </insert>

    <!--
   public int updateInterfaceRelUser(@Param("interfaceId") String interfaceId, @Param("relUser")RelUser relUser) throws Exception;
    -->
    <update id="updateInterfaceRelUser">
        UPDATE TAN0219
        SET
        ROLE_TYPE = #{relUser.roleType, jdbcType=VARCHAR}
        ,SYSTEM_ID = #{relUser.systemId, jdbcType=VARCHAR}
        ,DEL_YN    = #{relUser.delYn, jdbcType=VARCHAR}
        ,MOD_DATE  = #{relUser.modDate, jdbcType=VARCHAR}
        ,MOD_USER  = #{relUser.modId, jdbcType=VARCHAR}
        WHERE INTERFACE_ID = #{interfaceId, jdbcType=VARCHAR}
        AND SEQ   	= #{relUser.seq, jdbcType=NUMERIC}
        AND USER_ID	= #{relUser.user.userId, jdbcType=VARCHAR}
    </update>

    <delete id="deleteInterfaceRelUser">
        UPDATE TAN0219
        SET DEL_YN = 'Y'
        ,MOD_DATE  = #{relUser.modDate, jdbcType=VARCHAR}
        ,MOD_USER  = #{relUser.modId, jdbcType=VARCHAR}
        WHERE INTERFACE_ID = #{interfaceId, jdbcType=VARCHAR}
        AND SEQ   	= #{relUser.seq, jdbcType=NUMERIC}
        AND USER_ID	= #{relUser.user.userId, jdbcType=VARCHAR}
    </delete>

    <select id="selectInterface" resultType="string">
        SELECT INTERFACE_ID FROM TAN0201 WHERE DEL_YN = 'N' AND INTERFACE_ID = #{interfaceId}
    </select>

    <delete id="deleteAllInterfaceSystemMap">
        DELETE FROM TAN0213 WHERE INTERFACE_ID = #{interfaceId, jdbcType=VARCHAR}
        <!--update TAN0213
          set DEL_YN    = 'Y'
             ,MOD_DATE  = #{modDate , jdbcType=VARCHAR}
             ,MOD_USER  = #{modId	 , jdbcType=VARCHAR}
        where INTERFACE_ID = #{interfaceId	 , jdbcType=VARCHAR}-->
    </delete>

    <delete id="deleteAllInterfaceBusinessMap">
        DELETE FROM TAN0218 WHERE INTERFACE_ID = #{interfaceId, jdbcType=VARCHAR}
        <!--update TAN0218
          set DEL_YN    = 'Y'
             ,MOD_DATE  = #{modDate , jdbcType=VARCHAR}
             ,MOD_USER  = #{modId	 , jdbcType=VARCHAR}
        where INTERFACE_ID = #{interfaceId	 , jdbcType=VARCHAR} -->
    </delete>

    <delete id="deleteAllInterfaceRelUsers">
        DELETE FROM TAN0219 WHERE INTERFACE_ID = #{interfaceId, jdbcType=VARCHAR}
        <!--update TAN0219
          set DEL_YN    = 'Y'
             ,MOD_DATE  = #{modDate , jdbcType=VARCHAR}
             ,MOD_USER  = #{modId	 , jdbcType=VARCHAR}
        where INTERFACE_ID = #{interfaceId	 , jdbcType=VARCHAR}-->
    </delete>

    <delete id="deleteAllInterfaceTags">
        DELETE FROM TAN0221 WHERE INTERFACE_ID = #{interfaceId, jdbcType=VARCHAR}
        <!--update TAN0221
          set DEL_YN    = 'Y'
             ,MOD_DATE  = #{modDate , jdbcType=VARCHAR}
             ,MOD_USER  = #{modId	 , jdbcType=VARCHAR}
        where INTERFACE_ID = #{interfaceId		  , jdbcType=VARCHAR}-->
    </delete>

    <select id="getRequirementApprovalTargetList" resultType="java.util.LinkedHashMap">
        SELECT
	        ----------------------
	        -- 요건
	        ----------------------
	        A.REQUIREMENT_NM       AS "requirementNm"
	        ,A.REQUIREMENT_ID      AS "requirementId"
	        ,A.STATUS              AS "status"
	        ,CDAN01.NM 			   AS "statusNm"
	        ,A.REG_DATE            AS "regDate"
	        ,A.MOD_DATE            AS "modDate"
	        ,A.REG_USER 		   AS "regUserId"
	        ,F.USER_NM 			   AS "regUserNm"
	        ,A.REQ_USER_ID         AS "reqUserId"
	        ,G.USER_NM             AS "reqUserNm"
	        ,A.ADM_USER_ID         AS "admUserId"
	        ,H.USER_NM             AS "admUserNm"
	        ----------------------
	        -- 업무(프로세스)
	        ----------------------
	        ,B.BUSINESS_ID         AS "businessId"
	        ,B.BUSINESS_NM         AS "businessNm"
	        ,B.BUSINESS_CD         AS "businessCd"
	        ----------------------
	        -- 연계채널
	        ----------------------
	        ,E.CHANNEL_ID          AS "channelId"
	        ,E.CHANNEL_NM          AS "channelNm"
	        ,E.CHANNEL_CD          AS "channelCd"
	        ----------------------
	        -- 인터페이스
	        ----------------------
	        ,D.INTERFACE_ID        AS "interfaceId"
	        ,D.INTEGRATION_ID      AS "integrationId"
	        ,D.INTERFACE_NM        AS "interfaceNm"
        FROM
        (
	        --------------------
	        -- 등록, 결재완료(이행)
	        --------------------
	        SELECT
		        A.REQUIREMENT_ID
		        ,A.REQUIREMENT_NM
		        ,A.STATUS
		        ,A.BUSINESS_ID
		        ,A.INTERFACE_ID
		        ,A.REG_DATE
		        ,COALESCE(A.MOD_DATE,A.REG_DATE) AS MOD_DATE
		        ,A.REG_USER
		        ,'' AS REQ_USER_ID
		        ,'' AS ADM_USER_ID
	        FROM TAN0101 A
	        WHERE A.DEL_YN = 'N'
	        AND A.STATUS IN ('A1', 'H0')
        ) A
        <choose>
            <when test="isInterfaceAdmin != null and isInterfaceAdmin eq 'Y'.toString()">
            </when>
            <otherwise>
		INNER JOIN
        -----------------------------------------------
        -- 데이터 엑세스 권한 별 인터페이스 조회
        -----------------------------------------------
        (
        	SELECT
                DISTINCT
                TSU0220.INTERFACE_ID
            FROM
            -----------------------------------------------
            -- 로그인 사용자 데이터 엑세스 권한 조회(공통)
            -----------------------------------------------
            (
                SELECT
	                DISTINCT
	                TSU0219.USER_ID   AS USER_ID,
	                TSU0221.C_ROLE_ID AS ROLE_ID,
	                TSU0221.DEPTH     AS DEPTH
                FROM
                (
	                SELECT
		                TSU0101.USER_ID,
		                TSU0219.ROLE_ID
	                FROM TSU0101 TSU0101
	                INNER JOIN TSU0219 TSU0219 ON
	                TSU0101.USER_ID = TSU0219.USER_ID
	                WHERE 1 = 1
	                AND TSU0101.DEL_YN = 'N'
	                AND TSU0101.USER_ID = #{userId}
				) TSU0219
				INNER JOIN TSU0221 TSU0221 ON
	            TSU0219.ROLE_ID = TSU0221.P_ROLE_ID
	            ORDER BY USER_ID, C_ROLE_ID
			) ACCESS_ROLE
            -----------------------------------------------
            -- 데이터 엑세스 권한 :: 인터페이스 맵핑 조인
            -----------------------------------------------
            INNER JOIN TSU0220 TSU0220 ON
            ACCESS_ROLE.ROLE_ID = TSU0220.ROLE_ID
			UNION
			-----------------------------------------------
            -- 로그인 사용자 본인이 등록한 인터페이스 목록 조회
            -----------------------------------------------
            SELECT
                INTERFACE_ID
            FROM TAN0201
			WHERE REG_USER = #{userId}
		) ACCESS_ROLE_INTF ON
        A.INTERFACE_ID = ACCESS_ROLE_INTF.INTERFACE_ID
            </otherwise>
        </choose>
        LEFT OUTER JOIN TIM0301 B ON A.BUSINESS_ID = B.BUSINESS_ID   -- 업무
        LEFT OUTER JOIN TAN0201 D ON A.INTERFACE_ID = D.INTERFACE_ID -- 인터페이스
        LEFT OUTER JOIN TIM0002 E ON E.CHANNEL_ID = D.CHANNEL_ID     -- 인터페이스채널
        LEFT OUTER JOIN TSU0101 F ON A.REG_USER = F.USER_ID          -- 등록자
        LEFT OUTER JOIN TSU0101 G ON A.REQ_USER_ID = G.USER_ID       -- 결재요청자
        LEFT OUTER JOIN TSU0101 H ON A.ADM_USER_ID = H.USER_ID       -- 결재승인자
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '01' AND DEL_YN = 'N') CDAN01 ON A.STATUS = CDAN01.CD -- 요건상태명
        ORDER BY A.MOD_DATE DESC, A.REG_DATE DESC, A.REQUIREMENT_NM, INTERFACE_NM, E.CHANNEL_NM, A.STATUS
    </select>

    <select id="getRequirementApprovalIngList" resultType="java.util.LinkedHashMap">
        SELECT
	        ----------------------
	        -- 요건
	        ----------------------
	        A.REQUIREMENT_NM       AS "requirementNm"
	        ,A.REQUIREMENT_ID      AS "requirementId"
	        ,A.STATUS              AS "status"
	        ,CDAN01.NM 			   AS "statusNm"
	        ,A.REG_DATE            AS "regDate"
	        ,A.MOD_DATE            AS "modDate"
	        ,A.REG_USER 		   AS "regUserId"
	        ,F.USER_NM 			   AS "regUserNm"
	        ,A.REQ_USER_ID         AS "reqUserId"
	        ,G.USER_NM             AS "reqUserNm"
	        ,A.ADM_USER_ID         AS "admUserId"
	        ,H.USER_NM             AS "admUserNm"
	        ----------------------
	        -- 업무(프로세스)
	        ----------------------
	        ,B.BUSINESS_ID         AS "businessId"
	        ,B.BUSINESS_NM         AS "businessNm"
	        ,B.BUSINESS_CD         AS "businessCd"
	        ----------------------
	        -- 연계채널
	        ----------------------
	        ,E.CHANNEL_ID          AS "channelId"
	        ,E.CHANNEL_NM          AS "channelNm"
	        ,E.CHANNEL_CD          AS "channelCd"
	        ----------------------
	        -- 인터페이스
	        ----------------------
	        ,D.INTERFACE_ID        AS "interfaceId"
	        ,D.INTEGRATION_ID      AS "integrationId"
	        ,D.INTERFACE_NM        AS "interfaceNm"
        FROM
        (
	        --------------------
	        -- 등록, 결재완료(이행)
	        --------------------
        	SELECT
		        A.REQUIREMENT_ID
		        ,A.REQUIREMENT_NM
		        ,A.STATUS
		        ,A.BUSINESS_ID
		        ,A.INTERFACE_ID
		        ,A.REG_DATE
		        ,COALESCE(A.MOD_DATE,A.REG_DATE) AS MOD_DATE
		        ,A.REG_USER
		        ,'' AS REQ_USER_ID
		        ,'' AS ADM_USER_ID
        	FROM TAN0101 A
        	WHERE A.DEL_YN = 'N'
        	AND A.STATUS IN ('B1','B2','B3','B4')
        ) A
        <choose>
            <when test="isInterfaceAdmin != null and isInterfaceAdmin eq 'Y'.toString()">
            </when>
            <otherwise>
		INNER JOIN
		-----------------------------------------------
        -- 데이터 엑세스 권한 별 인터페이스 조회
        -----------------------------------------------
        (
        	SELECT
                DISTINCT
                TSU0220.INTERFACE_ID
			FROM
            -----------------------------------------------
            -- 로그인 사용자 데이터 엑세스 권한 조회(공통)
            -----------------------------------------------
            (
                SELECT
	                DISTINCT
	                TSU0219.USER_ID   AS USER_ID,
	                TSU0221.C_ROLE_ID AS ROLE_ID,
	                TSU0221.DEPTH     AS DEPTH
                FROM
                (
                	SELECT
		                TSU0101.USER_ID,
		                TSU0219.ROLE_ID
                	FROM TSU0101 TSU0101
                	INNER JOIN TSU0219 TSU0219 ON
                	TSU0101.USER_ID = TSU0219.USER_ID
                	WHERE 1 = 1
                	AND TSU0101.DEL_YN = 'N'
                	AND TSU0101.USER_ID = #{userId}
                ) TSU0219
                INNER JOIN TSU0221 TSU0221 ON
                TSU0219.ROLE_ID = TSU0221.P_ROLE_ID
                ORDER BY USER_ID, C_ROLE_ID
			) ACCESS_ROLE
            -----------------------------------------------
            -- 데이터 엑세스 권한 :: 인터페이스 맵핑 조인
            -----------------------------------------------
            INNER JOIN TSU0220 TSU0220 ON
            ACCESS_ROLE.ROLE_ID = TSU0220.ROLE_ID
            UNION
            -----------------------------------------------
            -- 로그인 사용자 본인이 등록한 인터페이스 목록 조회
            -----------------------------------------------
            SELECT INTERFACE_ID
			FROM TAN0201
            WHERE REG_USER = #{userId}
		) ACCESS_ROLE_INTF
        ON A.INTERFACE_ID = ACCESS_ROLE_INTF.INTERFACE_ID
            </otherwise>
        </choose>
        LEFT OUTER JOIN TIM0301 B ON A.BUSINESS_ID = B.BUSINESS_ID   -- 업무
        LEFT OUTER JOIN TAN0201 D ON A.INTERFACE_ID = D.INTERFACE_ID -- 인터페이스
        LEFT OUTER JOIN TIM0002 E ON E.CHANNEL_ID = D.CHANNEL_ID     -- 인터페이스채널
        LEFT OUTER JOIN TSU0101 F ON A.REG_USER = F.USER_ID          -- 등록자
        LEFT OUTER JOIN TSU0101 G ON A.REQ_USER_ID = G.USER_ID       -- 결재요청자
        LEFT OUTER JOIN TSU0101 H ON A.ADM_USER_ID = H.USER_ID       -- 결재승인자
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '01' AND DEL_YN = 'N') CDAN01 ON A.STATUS = CDAN01.CD -- 요건상태명
        ORDER BY A.MOD_DATE DESC, A.REG_DATE DESC, A.REQUIREMENT_NM, INTERFACE_NM, E.CHANNEL_NM, A.STATUS
    </select>

    <select id="getRequirementApprovalRejectList" resultType="java.util.LinkedHashMap">
        SELECT
	        ----------------------
	        -- 요건
	        ----------------------
	        A.REQUIREMENT_NM       AS "requirementNm"
	        ,A.REQUIREMENT_ID      AS "requirementId"
	        ,A.STATUS              AS "status"
	        ,CDAN01.NM 			   AS "statusNm"
	        ,A.REG_DATE            AS "regDate"
	        ,A.MOD_DATE            AS "modDate"
	        ,A.REG_USER 		   AS "regUserId"
	        ,F.USER_NM 			   AS "regUserNm"
	        ,A.REQ_USER_ID         AS "reqUserId"
	        ,G.USER_NM             AS "reqUserNm"
	        ,A.ADM_USER_ID         AS "admUserId"
	        ,H.USER_NM             AS "admUserNm"
	        ----------------------
	        -- 업무(프로세스)
	        ----------------------
	        ,B.BUSINESS_ID         AS "businessId"
	        ,B.BUSINESS_NM         AS "businessNm"
	        ,B.BUSINESS_CD         AS "businessCd"
	        ----------------------
	        -- 연계채널
	        ----------------------
	        ,E.CHANNEL_ID          AS "channelId"
	        ,E.CHANNEL_NM          AS "channelNm"
	        ,E.CHANNEL_CD          AS "channelCd"
	        ----------------------
	        -- 인터페이스
	        ----------------------
	        ,D.INTERFACE_ID        AS "interfaceId"
	        ,D.INTEGRATION_ID      AS "integrationId"
	        ,D.INTERFACE_NM        AS "interfaceNm"
        FROM
        (
	        --------------------
	        -- 등록, 결재완료(이행)
	        --------------------
        	SELECT
		        A.REQUIREMENT_ID
		        ,A.REQUIREMENT_NM
		        ,A.STATUS
		        ,A.BUSINESS_ID
		        ,A.INTERFACE_ID
		        ,A.REG_DATE
		        ,COALESCE(A.MOD_DATE,A.REG_DATE) AS MOD_DATE
		        ,A.REG_USER
		        ,'' AS REQ_USER_ID
		        ,'' AS ADM_USER_ID
        	FROM TAN0101 A
        	WHERE A.DEL_YN = 'N'
        	AND A.STATUS IN ('E1', 'E2', 'E3', 'E4')
        ) A
        <choose>
            <when test="isInterfaceAdmin != null and isInterfaceAdmin eq 'Y'.toString()">
            </when>
            <otherwise>
		INNER JOIN
        -----------------------------------------------
        -- 데이터 엑세스 권한 별 인터페이스 조회
        -----------------------------------------------
        (
			SELECT
                DISTINCT
                TSU0220.INTERFACE_ID
            FROM
            -----------------------------------------------
            -- 로그인 사용자 데이터 엑세스 권한 조회(공통)
            -----------------------------------------------
            (
                SELECT
                	DISTINCT
                	TSU0219.USER_ID   AS USER_ID,
                	TSU0221.C_ROLE_ID AS ROLE_ID,
                	TSU0221.DEPTH     AS DEPTH
                FROM
                (
                	SELECT
                		TSU0101.USER_ID,
                		TSU0219.ROLE_ID
                	FROM TSU0101 TSU0101
                	INNER JOIN TSU0219 TSU0219 ON
                	TSU0101.USER_ID = TSU0219.USER_ID
                	WHERE 1 = 1
                	AND TSU0101.DEL_YN = 'N'
                	AND TSU0101.USER_ID = #{userId}
                ) TSU0219
                INNER JOIN TSU0221 TSU0221 ON
                TSU0219.ROLE_ID = TSU0221.P_ROLE_ID
                ORDER BY USER_ID, C_ROLE_ID
			) ACCESS_ROLE
            -----------------------------------------------
            -- 데이터 엑세스 권한 :: 인터페이스 맵핑 조인
            -----------------------------------------------
            INNER JOIN TSU0220 TSU0220 ON
            ACCESS_ROLE.ROLE_ID = TSU0220.ROLE_ID
            UNION
            -----------------------------------------------
            -- 로그인 사용자 본인이 등록한 인터페이스 목록 조회
            -----------------------------------------------
            SELECT
                INTERFACE_ID
            FROM TAN0201
            WHERE REG_USER = #{userId}
		) ACCESS_ROLE_INTF ON
        A.INTERFACE_ID = ACCESS_ROLE_INTF.INTERFACE_ID
            </otherwise>
        </choose>
        LEFT OUTER JOIN TIM0301 B ON A.BUSINESS_ID = B.BUSINESS_ID   -- 업무
        LEFT OUTER JOIN TAN0201 D ON A.INTERFACE_ID = D.INTERFACE_ID -- 인터페이스
        LEFT OUTER JOIN TIM0002 E ON E.CHANNEL_ID = D.CHANNEL_ID     -- 인터페이스채널
        LEFT OUTER JOIN TSU0101 F ON A.REG_USER = F.USER_ID          -- 등록자
        LEFT OUTER JOIN TSU0101 G ON A.REQ_USER_ID = G.USER_ID       -- 결재요청자
        LEFT OUTER JOIN TSU0101 H ON A.ADM_USER_ID = H.USER_ID       -- 결재승인자
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '01' AND DEL_YN = 'N') CDAN01 ON A.STATUS = CDAN01.CD -- 요건상태명
        ORDER BY A.MOD_DATE DESC, A.REG_DATE DESC, A.REQUIREMENT_NM, INTERFACE_NM, E.CHANNEL_NM, A.STATUS
    </select>

    <select id="getRequirementDevelopmentList" resultType="java.util.LinkedHashMap">
        SELECT
	        ----------------------
	        -- 요건
	        ----------------------
	        A.REQUIREMENT_NM       AS "requirementNm"
	        ,A.REQUIREMENT_ID      AS "requirementId"
	        ,A.STATUS              AS "status"
	        ,CDAN01.NM 			   AS "statusNm"
	        ,A.REG_DATE            AS "regDate"
	        ,A.MOD_DATE            AS "modDate"
	        ,A.REG_USER 		   AS "regUserId"
	        ,F.USER_NM 			   AS "regUserNm"
	        ,A.REQ_USER_ID         AS "reqUserId"
	        ,G.USER_NM             AS "reqUserNm"
	        ,A.ADM_USER_ID         AS "admUserId"
	        ,H.USER_NM             AS "admUserNm"
	        ----------------------
	        -- 업무(프로세스)
	        ----------------------
	        ,B.BUSINESS_ID         AS "businessId"
	        ,B.BUSINESS_NM         AS "businessNm"
	        ,B.BUSINESS_CD         AS "businessCd"
	        ----------------------
	        -- 연계채널
	        ----------------------
	        ,E.CHANNEL_ID          AS "channelId"
	        ,E.CHANNEL_NM          AS "channelNm"
	        ,E.CHANNEL_CD          AS "channelCd"
	        ----------------------
	        -- 인터페이스
	        ----------------------
	        ,D.INTERFACE_ID        AS "interfaceId"
	        ,D.INTEGRATION_ID      AS "integrationId"
	        ,D.INTERFACE_NM        AS "interfaceNm"
        FROM
        (
        	--------------------
        	-- 등록, 결재완료(이행)
        	--------------------
        	SELECT
		        A.REQUIREMENT_ID
		        ,A.REQUIREMENT_NM
		        ,A.STATUS
		        ,A.BUSINESS_ID
		        ,A.INTERFACE_ID
		        ,A.REG_DATE
		        ,COALESCE(A.MOD_DATE,A.REG_DATE) AS MOD_DATE
		        ,A.REG_USER
		        ,'' AS REQ_USER_ID
		        ,'' AS ADM_USER_ID
        	FROM TAN0101 A
        	WHERE A.DEL_YN = 'N'
        	AND A.STATUS IN ('F1', 'F2')
        ) A
        <choose>
            <when test="isInterfaceAdmin != null and isInterfaceAdmin eq 'Y'.toString()">
            </when>
            <otherwise>
		INNER JOIN
		-----------------------------------------------
        -- 데이터 엑세스 권한 별 인터페이스 조회
        -----------------------------------------------
        (
			SELECT
                DISTINCT
                TSU0220.INTERFACE_ID
            FROM
            -----------------------------------------------
            -- 로그인 사용자 데이터 엑세스 권한 조회(공통)
            -----------------------------------------------
            (
                SELECT
	                DISTINCT
	                TSU0219.USER_ID   AS USER_ID,
	                TSU0221.C_ROLE_ID AS ROLE_ID,
	                TSU0221.DEPTH     AS DEPTH
                FROM
                (
                	SELECT
                		TSU0101.USER_ID,
                		TSU0219.ROLE_ID
                	FROM TSU0101 TSU0101
                	INNER JOIN TSU0219 TSU0219 ON
                	TSU0101.USER_ID = TSU0219.USER_ID
                	WHERE 1 = 1
                	AND TSU0101.DEL_YN = 'N'
                	AND TSU0101.USER_ID = #{userId}
                ) TSU0219
                INNER JOIN TSU0221 TSU0221 ON
                TSU0219.ROLE_ID = TSU0221.P_ROLE_ID
                ORDER BY USER_ID, C_ROLE_ID
                ) ACCESS_ROLE
                -----------------------------------------------
                -- 데이터 엑세스 권한 :: 인터페이스 맵핑 조인
                -----------------------------------------------
                INNER JOIN TSU0220 TSU0220 ON
                ACCESS_ROLE.ROLE_ID = TSU0220.ROLE_ID
                UNION
                -----------------------------------------------
                -- 로그인 사용자 본인이 등록한 인터페이스 목록 조회
                -----------------------------------------------
                SELECT INTERFACE_ID
                FROM TAN0201
                WHERE REG_USER = #{userId}
                ) ACCESS_ROLE_INTF ON
                A.INTERFACE_ID = ACCESS_ROLE_INTF.INTERFACE_ID
            </otherwise>
        </choose>
        LEFT OUTER JOIN TIM0301 B ON A.BUSINESS_ID = B.BUSINESS_ID   -- 업무
        LEFT OUTER JOIN TAN0201 D ON A.INTERFACE_ID = D.INTERFACE_ID -- 인터페이스
        LEFT OUTER JOIN TIM0002 E ON E.CHANNEL_ID = D.CHANNEL_ID     -- 인터페이스채널
        LEFT OUTER JOIN TSU0101 F ON A.REG_USER = F.USER_ID          -- 등록자
        LEFT OUTER JOIN TSU0101 G ON A.REQ_USER_ID = G.USER_ID       -- 결재요청자
        LEFT OUTER JOIN TSU0101 H ON A.ADM_USER_ID = H.USER_ID       -- 결재승인자
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '01' AND DEL_YN = 'N') CDAN01 ON A.STATUS = CDAN01.CD -- 요건상태명
        ORDER BY A.MOD_DATE DESC, A.REG_DATE DESC, A.REQUIREMENT_NM, INTERFACE_NM, E.CHANNEL_NM, A.STATUS
    </select>

    <select id="getRequirementTestList" resultType="java.util.LinkedHashMap">
        SELECT
	        ----------------------
	        -- 요건
	        ----------------------
        	A.REQUIREMENT_NM       AS "requirementNm"
        	,A.REQUIREMENT_ID      AS "requirementId"
        	,A.STATUS              AS "status"
        	,CDAN01.NM 			   AS "statusNm"
        	,A.REG_DATE            AS "regDate"
        	,A.MOD_DATE            AS "modDate"
        	,A.REG_USER 		   AS "regUserId"
        	,F.USER_NM 			   AS "regUserNm"
        	,A.REQ_USER_ID         AS "reqUserId"
        	,G.USER_NM             AS "reqUserNm"
        	,A.ADM_USER_ID         AS "admUserId"
        	,H.USER_NM             AS "admUserNm"
        	----------------------
        	-- 업무(프로세스)
        	----------------------
        	,B.BUSINESS_ID         AS "businessId"
        	,B.BUSINESS_NM         AS "businessNm"
        	,B.BUSINESS_CD         AS "businessCd"
        	----------------------
        	-- 연계채널
        	----------------------
        	,E.CHANNEL_ID          AS "channelId"
        	,E.CHANNEL_NM          AS "channelNm"
        	,E.CHANNEL_CD          AS "channelCd"
        	----------------------
        	-- 인터페이스
        	----------------------
        	,D.INTERFACE_ID        AS "interfaceId"
        	,D.INTEGRATION_ID      AS "integrationId"
        	,D.INTERFACE_NM        AS "interfaceNm"
        FROM
        (
        	--------------------
        	-- 등록, 결재완료(이행)
        	--------------------
        	SELECT
        		A.REQUIREMENT_ID
        		,A.REQUIREMENT_NM
        		,A.STATUS
        		,A.BUSINESS_ID
        		,A.INTERFACE_ID
        		,A.REG_DATE
        		,COALESCE(A.MOD_DATE,A.REG_DATE) AS MOD_DATE
        		,A.REG_USER
        		,'' AS REQ_USER_ID
        		,'' AS ADM_USER_ID
        	FROM TAN0101 A
        	WHERE A.DEL_YN = 'N'
        	AND A.STATUS IN ('G0')
        ) A
        <choose>
            <when test="isInterfaceAdmin != null and isInterfaceAdmin eq 'Y'.toString()">
            </when>
            <otherwise>
		INNER JOIN
		-----------------------------------------------
        -- 데이터 엑세스 권한 별 인터페이스 조회
        -----------------------------------------------
        (
        	SELECT
                DISTINCT
                TSU0220.INTERFACE_ID
            FROM
            -----------------------------------------------
            -- 로그인 사용자 데이터 엑세스 권한 조회(공통)
            -----------------------------------------------
            (
                SELECT
	                DISTINCT
	                TSU0219.USER_ID   AS USER_ID,
	                TSU0221.C_ROLE_ID AS ROLE_ID,
	                TSU0221.DEPTH     AS DEPTH
                FROM
                (
                	SELECT
                		TSU0101.USER_ID,
                		TSU0219.ROLE_ID
                	FROM TSU0101 TSU0101
                	INNER JOIN TSU0219 TSU0219 ON
                	TSU0101.USER_ID = TSU0219.USER_ID
                	WHERE 1 = 1
                	AND TSU0101.DEL_YN = 'N'
                	AND TSU0101.USER_ID = #{userId}
                ) TSU0219
                INNER JOIN TSU0221 TSU0221 ON
                TSU0219.ROLE_ID = TSU0221.P_ROLE_ID
                ORDER BY USER_ID, C_ROLE_ID
                ) ACCESS_ROLE
                -----------------------------------------------
                -- 데이터 엑세스 권한 :: 인터페이스 맵핑 조인
                -----------------------------------------------
                INNER JOIN TSU0220 TSU0220 ON
                ACCESS_ROLE.ROLE_ID = TSU0220.ROLE_ID
                UNION
                -----------------------------------------------
                -- 로그인 사용자 본인이 등록한 인터페이스 목록 조회
                -----------------------------------------------
                SELECT INTERFACE_ID
                FROM TAN0201
                WHERE REG_USER = #{userId}
                ) ACCESS_ROLE_INTF ON
                A.INTERFACE_ID = ACCESS_ROLE_INTF.INTERFACE_ID
            </otherwise>
        </choose>
        LEFT OUTER JOIN TIM0301 B ON A.BUSINESS_ID = B.BUSINESS_ID   -- 업무
        LEFT OUTER JOIN TAN0201 D ON A.INTERFACE_ID = D.INTERFACE_ID -- 인터페이스
        LEFT OUTER JOIN TIM0002 E ON E.CHANNEL_ID = D.CHANNEL_ID     -- 인터페이스채널
        LEFT OUTER JOIN TSU0101 F ON A.REG_USER = F.USER_ID          -- 등록자
        LEFT OUTER JOIN TSU0101 G ON A.REQ_USER_ID = G.USER_ID       -- 결재요청자
        LEFT OUTER JOIN TSU0101 H ON A.ADM_USER_ID = H.USER_ID       -- 결재승인자
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '01' AND DEL_YN = 'N') CDAN01 ON A.STATUS = CDAN01.CD -- 요건상태명
        ORDER BY A.MOD_DATE DESC, A.REG_DATE DESC, A.REQUIREMENT_NM, INTERFACE_NM, E.CHANNEL_NM, A.STATUS
    </select>

    <select id="getRequirementRealList" resultType="java.util.LinkedHashMap">
        SELECT
        	----------------------
        	-- 요건
        	----------------------
        	A.REQUIREMENT_NM       AS "requirementNm"
        	,A.REQUIREMENT_ID      AS "requirementId"
        	,A.STATUS              AS "status"
        	,CDAN01.NM 			   AS "statusNm"
        	,A.REG_DATE            AS "regDate"
        	,A.MOD_DATE            AS "modDate"
        	,A.REG_USER 		   AS "regUserId"
        	,F.USER_NM 			   AS "regUserNm"
        	,A.REQ_USER_ID         AS "reqUserId"
        	,G.USER_NM             AS "reqUserNm"
        	,A.ADM_USER_ID         AS "admUserId"
        	,H.USER_NM             AS "admUserNm"
        	----------------------
        	-- 업무(프로세스)
        	----------------------
        	,B.BUSINESS_ID         AS "businessId"
        	,B.BUSINESS_NM         AS "businessNm"
        	,B.BUSINESS_CD         AS "businessCd"
        	----------------------
        	-- 연계채널
        	----------------------
        	,E.CHANNEL_ID          AS "channelId"
        	,E.CHANNEL_NM          AS "channelNm"
        	,E.CHANNEL_CD          AS "channelCd"
        	----------------------
        	-- 인터페이스
        	----------------------
        	,D.INTERFACE_ID        AS "interfaceId"
        	,D.INTEGRATION_ID      AS "integrationId"
        	,D.INTERFACE_NM        AS "interfaceNm"
        FROM
        (
        	--------------------
        	-- 등록, 결재완료(이행)
        	--------------------
        	SELECT
        		A.REQUIREMENT_ID
        		,A.REQUIREMENT_NM
        		,A.STATUS
        		,A.BUSINESS_ID
        		,A.INTERFACE_ID
        		,A.REG_DATE
        		,COALESCE(A.MOD_DATE,A.REG_DATE) AS MOD_DATE
        		,A.REG_USER
        		,'' AS REQ_USER_ID
        		,'' AS ADM_USER_ID
        	FROM TAN0101 A
        	WHERE A.DEL_YN = 'N'
        	AND A.STATUS IN ('F4')
        ) A
        <choose>
            <when test="isInterfaceAdmin != null and isInterfaceAdmin eq 'Y'.toString()">
            </when>
            <otherwise>
		INNER JOIN
		-----------------------------------------------
        -- 데이터 엑세스 권한 별 인터페이스 조회
        -----------------------------------------------
        (
        	SELECT
                DISTINCT
                TSU0220.INTERFACE_ID
			FROM
            -----------------------------------------------
            -- 로그인 사용자 데이터 엑세스 권한 조회(공통)
            -----------------------------------------------
            (
				SELECT
	                DISTINCT
	                TSU0219.USER_ID   AS USER_ID,
	                TSU0221.C_ROLE_ID AS ROLE_ID,
	                TSU0221.DEPTH     AS DEPTH
                FROM
                (
                	SELECT
		                TSU0101.USER_ID,
		                TSU0219.ROLE_ID
                	FROM TSU0101 TSU0101
                	INNER JOIN TSU0219 TSU0219 ON
                	TSU0101.USER_ID = TSU0219.USER_ID
                	WHERE 1 = 1
                	AND TSU0101.DEL_YN = 'N'
                	AND TSU0101.USER_ID = #{userId}
                ) TSU0219
                INNER JOIN TSU0221 TSU0221 ON
                TSU0219.ROLE_ID = TSU0221.P_ROLE_ID
                ORDER BY USER_ID, C_ROLE_ID
			) ACCESS_ROLE
            -----------------------------------------------
            -- 데이터 엑세스 권한 :: 인터페이스 맵핑 조인
            -----------------------------------------------
            INNER JOIN TSU0220 TSU0220 ON
            ACCESS_ROLE.ROLE_ID = TSU0220.ROLE_ID
            UNION
			-----------------------------------------------
            -- 로그인 사용자 본인이 등록한 인터페이스 목록 조회
            -----------------------------------------------
            SELECT
            	INTERFACE_ID
			FROM TAN0201
            WHERE REG_USER = #{userId}
		) ACCESS_ROLE_INTF ON
        A.INTERFACE_ID = ACCESS_ROLE_INTF.INTERFACE_ID
            </otherwise>
        </choose>
        LEFT OUTER JOIN TIM0301 B ON A.BUSINESS_ID = B.BUSINESS_ID   -- 업무
        LEFT OUTER JOIN TAN0201 D ON A.INTERFACE_ID = D.INTERFACE_ID -- 인터페이스
        LEFT OUTER JOIN TIM0002 E ON E.CHANNEL_ID = D.CHANNEL_ID     -- 인터페이스채널
        LEFT OUTER JOIN TSU0101 F ON A.REG_USER = F.USER_ID          -- 등록자
        LEFT OUTER JOIN TSU0101 G ON A.REQ_USER_ID = G.USER_ID       -- 결재요청자
        LEFT OUTER JOIN TSU0101 H ON A.ADM_USER_ID = H.USER_ID       -- 결재승인자
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '01' AND DEL_YN = 'N') CDAN01 ON A.STATUS = CDAN01.CD -- 요건상태명
        ORDER BY A.MOD_DATE DESC, A.REG_DATE DESC, A.REQUIREMENT_NM, INTERFACE_NM, E.CHANNEL_NM, A.STATUS
    </select>

    <select id="getRequirementChangeList" resultType="java.util.LinkedHashMap">
        <include refid="pep.per.mint.database.mapper.CoreMapper.requirementChangeList"/>
        ORDER BY a.REG_DATE DESC, a.MOD_DATE DESC, a.REQUIREMENT_NM, INTERFACE_NM, e.CHANNEL_NM, a.STATUS
    </select>

    <select id="getRequirementDTMList" resultType="java.util.LinkedHashMap">
        <include refid="pep.per.mint.database.mapper.CoreMapper.requirementDTMList"/>
        ORDER BY a.REG_DATE DESC, a.MOD_DATE DESC, a.REQUIREMENT_NM, INTERFACE_NM, e.CHANNEL_NM, a.STATUS
    </select>

    <select id="getCurrentRequirementCommentList" resultType="java.util.LinkedHashMap">
        SELECT
        	a.COMMENT_ID AS "commentId"
        	,a.CONTENTS  AS "comment"
        FROM TAN0102 a
        WHERE a.DEL_YN = 'N'
        AND a.REQUIREMENT_ID = #{requirementId}
        ORDER BY a.COMMENT_ID
    </select>

    <select id="getCurrentRequirementAttachFileList" resultType="java.util.LinkedHashMap">
        SELECT
        	a.FILE_ID 	 AS "fileId"
        	,a.FILE_NM   AS "fileNm"
        	,a.FILE_PATH AS "filePath"
        FROM TAN0103 a
        WHERE a.DEL_YN = 'N'
        AND a.REQUIREMENT_ID = #{requirementId}
        ORDER BY a.FILE_ID
    </select>

    <select id="getCurrentInterfaceSystemMapList" resultType="java.util.LinkedHashMap">
        SELECT
        	 a.SYSTEM_ID   AS "systemId"
        	,b.SYSTEM_CD   AS "systemNm"
        	,b.SYSTEM_NM   AS "systemNm"
        	,a.NODE_TYPE   AS "nodeType"
        	,(SELECT NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '08' AND CD = a.NODE_TYPE AND DEL_YN = 'N') AS "nodeTypeNm"
        	,RESOURCE_TYPE AS "resourceCd"
        	,(SELECT NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '04' AND CD = a.RESOURCE_TYPE AND DEL_YN = 'N') AS "resourceNm"
        	,a.SERVICE     AS "service"
        	,a.SEQ         AS "seq"
        FROM TAN0213 a
        INNER JOIN TIM0101 b ON a.SYSTEM_ID = b.SYSTEM_ID
        AND a.DEL_YN = 'N'
        AND a.INTERFACE_ID = #{interfaceId}
        ORDER BY a.SEQ
    </select>

    <select id="getCurrentInterfaceBusinessMapList" resultType="java.util.LinkedHashMap">
        SELECT
        	 a.BUSINESS_ID   AS "businessId"
        	,b.BUSINESS_CD   AS "businessCd"
        	,b.BUSINESS_NM   AS "businessNm"
        	,a.NODE_TYPE     AS "nodeType"
        	,(SELECT NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '08' AND CD = a.NODE_TYPE AND DEL_YN = 'N') AS "nodeTypeNm"
        	,a.SEQ           AS "seq"
        FROM TAN0218 a
        INNER JOIN TIM0301 b ON a.BUSINESS_ID = b.BUSINESS_ID
        AND a.DEL_YN = 'N'
        AND a.INTERFACE_ID = #{interfaceId}
        ORDER BY a.SEQ
    </select>

    <select id="getCurrentInterfaceRelUserList" resultType="java.util.LinkedHashMap">
        SELECT
	         a.USER_ID    AS "userId"
	        ,a.SEQ        AS "seq"
	        ,a.ROLE_TYPE  AS "roleType"
	        ,a.SYSTEM_ID  AS "systemId"
	        ,(SELECT SYSTEM_NM FROM TIM0101 WHERE SYSTEM_ID = a.SYSTEM_ID) AS "systemNm"
	        ,(SELECT SYSTEM_CD FROM TIM0101 WHERE SYSTEM_ID = a.SYSTEM_ID) AS "systemCd"
	        ,(SELECT NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '09' AND CD = a.ROLE_TYPE AND DEL_YN = 'N') AS "roleTypeNm"
	        ,b.USER_NM    AS "userNm"
	        ,b.EMAIL      AS "email"
	        ,b.CELL_PHONE AS "cellPhone"
	        ,b.PHONE      AS "phone"
        FROM TAN0219 a
        INNER JOIN TSU0101 b ON a.USER_ID = b.USER_ID
        AND a.DEL_YN = 'N'
        AND a.INTERFACE_ID = #{interfaceId}
        ORDER BY a.SEQ
    </select>

    <select id="getInterfaceRefCheck" resultType="java.util.LinkedHashMap">
        SELECT
	        A.INTERFACE_ID
	        , CASE WHEN A.REQUIREMENT_CNT = A.DEL_Y_CNT THEN 'N' ELSE 'Y' END AS REF_YN
        FROM
        (
        	SELECT
        		INTERFACE_ID
        		, COUNT(REQUIREMENT_ID) AS REQUIREMENT_CNT
        		, SUM(DEL_Y_CNT) AS DEL_Y_CNT
        		, SUM(DEL_N_CNT) AS DEL_N_CNT
        	FROM
        	(
        		SELECT
        			INTERFACE_ID
        			, REQUIREMENT_ID
        			, CASE WHEN DEL_YN = 'Y' THEN 1 ELSE 0 END AS DEL_Y_CNT
        			, CASE WHEN DEL_YN = 'N' THEN 1 ELSE 0 END AS DEL_N_CNT
        		FROM TAN0101 A
        		ORDER BY INTERFACE_ID
        	) TAN0101
        	WHERE 1 = 1
        	AND REQUIREMENT_ID = #{requirementId}
        	GROUP BY INTERFACE_ID
        	ORDER BY INTERFACE_ID ASC
		) A
        INNER JOIN TAN0201 B ON
        A.INTERFACE_ID = B.INTERFACE_ID
    </select>

    <insert id="insertRequirementTemp" parameterType="RequirementTemp">

        <selectKey keyProperty="seq" resultType="int" order="BEFORE" >
            SELECT COALESCE(MAX(SEQ) + 1, 0) AS SEQ FROM TAN0111 WHERE REQUIREMENT_ID = #{requirementId, jdbcType=VARCHAR}
        </selectKey>

        INSERT INTO TAN0111 (
	        REQUIREMENT_ID
	        ,SEQ
	        ,CONTENTS
	        ,APPLY_YN
	        ,DEL_YN
	        ,REG_DATE
	        ,REG_USER
        ) VALUES (
	        #{requirementId}
	        ,#{seq}
	        ,#{contents, jdbcType=CLOB, typeHandler=org.apache.ibatis.type.ClobTypeHandler, javaType=String}
	        ,'N'
	        ,'N'
	        ,#{regDate}
	        ,#{regId}
        )
    </insert>

    <update id="updateRequirementTemp" parameterType="RequirementTemp">
        UPDATE TAN0111
        SET APPLY_YN = #{applyYn}
        ,DEL_YN = #{delYn}
        ,MOD_DATE = #{modDate}
        ,MOD_USER = #{modId}
        WHERE REQUIREMENT_ID = #{requirementId}
        AND SEQ = (SELECT MAX(SEQ) FROM TAN0111 WHERE REQUIREMENT_ID = #{requirementId})
    </update>

    <select id="getRequirementTemp" resultType="RequirementTemp" parameterType="String">
        SELECT *
        FROM TAN0111
        WHERE REQUIREMENT_ID = #{requirementId}
        AND SEQ = (SELECT MAX(SEQ) FROM TAN0111 WHERE REQUIREMENT_ID = #{requirementId})
    </select>

    <delete id="deleteRequirementTemp" parameterType="String">
        DELETE FROM TAN0111 WHERE REQUIREMENT_ID = #{requirementId}
    </delete>

    <delete id="removeChannelPropertyMapping">
        DELETE FROM TAN0205 WHERE INTERFACE_ID = #{interfaceId}
    </delete>

    <insert id="insertChannelPropertyMapping">
        INSERT INTO TAN0205 (
        	CHANNEL_ID
        	,ATTRIBUTE_ID
        	,IDX
        	,INTERFACE_ID
        	,ATTRIBUTE_VALUE
        	,DEL_YN
        	,REG_DATE
        	,REG_USER
        	,MOD_DATE
        	,MOD_USER
        ) VALUES (
        	#{channelId	, jdbcType=VARCHAR}
        	,#{attrId	    , jdbcType=VARCHAR}
        	,#{idx			, jdbcType=NUMERIC}
        	,#{interfaceId	, jdbcType=VARCHAR}
        	,#{attrValue	, jdbcType=VARCHAR}
        	,'N'
        	,#{regDate		, jdbcType=VARCHAR}
        	,#{regId		, jdbcType=VARCHAR}
        	,#{modDate		, jdbcType=VARCHAR}
        	,#{modId		, jdbcType=VARCHAR}
        )
    </insert>

    <delete id="removeInterfaceAdditionalPropertyMapping">
        DELETE FROM TAN0203 WHERE INTERFACE_ID = #{interfaceId}
    </delete>

    <insert id="insertInterfaceAdditionalPropertyMapping">
        INSERT INTO TAN0203 (
        	ATTRIBUTE_ID
        	,IDX
        	,INTERFACE_ID
        	,ATTRIBUTE_VALUE
        	,DEL_YN
        	,REG_DATE
        	,REG_USER
        	,MOD_DATE
        	,MOD_USER
        ) VALUES (
        	#{attrId	    , jdbcType=VARCHAR}
        	,#{idx			, jdbcType=NUMERIC}
        	,#{interfaceId	, jdbcType=VARCHAR}
        	,#{attrValue	, jdbcType=VARCHAR}
        	,'N'
        	,#{regDate		, jdbcType=VARCHAR}
        	,#{regId		, jdbcType=VARCHAR}
        	,#{modDate		, jdbcType=VARCHAR}
        	,#{modId		, jdbcType=VARCHAR}
        )
    </insert>

    <delete id="removeDataAccessRoleMapping">
        DELETE FROM TSU0220 WHERE INTERFACE_ID = #{interfaceId}
    </delete>

    <insert id="insertDataAccessRoleMapping">
        INSERT INTO TSU0220 (
        	ROLE_ID
        	,INTERFACE_ID
        	,SEQ
        ) VALUES (
        	#{roleId	    , jdbcType=VARCHAR}
        	,#{interfaceId	, jdbcType=VARCHAR}
        	,#{seq			, jdbcType=NUMERIC}
        )
    </insert>

    <insert id="insertInterfacePrincipalMap">
        INSERT INTO TAN0214 (
        	INTERFACE_ID,
        	USER_ID,
        	TYPE,
        	SEQ,
        	MONITOR_YN
        ) VALUES (
        	#{interfaceObj.interfaceId, jdbcType=VARCHAR}
        	,#{userId, jdbcType=NUMERIC}
        	,#{principalType, jdbcType=VARCHAR}
        	,#{interfaceObj.seq, jdbcType=VARCHAR}
        	,'N'
        )
    </insert>

    <update id="updateInterfacePrincipalMap">
        UPDATE TAN0214
        SET
        MONITOR_YN = #{monitorYn, jdbcType=VARCHAR}
        WHERE INTERFACE_ID = #{interfaceId, jdbcType=VARCHAR}
        AND USER_ID = #{userId, jdbcType=VARCHAR}
        AND TYPE = #{principalType, jdbcType=VARCHAR}
    </update>

    <delete id="deleteInterfacePrincipalMap">
        DELETE FROM TAN0214
        WHERE INTERFACE_ID = #{interfaceId	, jdbcType=VARCHAR}
        AND USER_ID = #{userId			, jdbcType=VARCHAR}
        AND TYPE	= #{principalType	, jdbcType=VARCHAR}
    </delete>

    <select id="getRequirementPrincipalList" resultType="java.util.Map">
        SELECT
	        ----------------------
	        --requirement(Main)
	        ----------------------
	        a.REQUIREMENT_ID AS "REQUIREMENT_ID"
	        ,a.REQUIREMENT_NM AS "REQUIREMENT_NM"
	        ,a.STATUS AS "STATUS"
	        ----------------------
	        --interface(Association on Requirement)
	        ----------------------
	        ,a.INTERFACE_ID AS "INTERFACE_ID"
	        ,a.INTEGRATION_ID AS "INTEGRATION_ID"
	        ,a.INTERFACE_NM AS "INTERFACE_NM"
	        ,a.MONITOR_YN AS "MONITOR_YN"
	        ,a.REG_DATE AS "REG_DATE"
	        ,a.MOD_DATE AS "MOD_DATE"
        FROM (
        	SELECT
        		a.REQUIREMENT_ID
        		,a.REQUIREMENT_NM
        		,a.STATUS
        		,c.INTERFACE_ID
        		,c.INTEGRATION_ID
        		,c.INTERFACE_NM
        		,c.MONITOR_YN
        		,a.REG_DATE
        		,a.MOD_DATE
        	FROM TAN0101 a
        	INNER JOIN (
        		SELECT
        			d.INTERFACE_ID
        			,d.INTEGRATION_ID
        			,d.INTERFACE_NM
        			,e.MONITOR_YN
        		FROM TAN0201 d
        		INNER JOIN (
        			SELECT
        				INTERFACE_ID
        				,MONITOR_YN
        			FROM TAN0214
        			WHERE TYPE=#{principalType}
        			AND USER_ID=#{userId}
        		) e ON e.INTERFACE_ID= d.INTERFACE_ID
        	) c ON a.INTERFACE_ID = c.INTERFACE_ID
        ) a
        <choose>
			<when test="_databaseId == 'altibase'">
        ORDER BY a.MOD_DATE DESC, a.REG_DATE DESC, a.INTERFACE_NM
	        </when>
	        <otherwise>
        ORDER BY a.MOD_DATE DESC nulls last, a.REG_DATE DESC,  a.INTERFACE_NM
	        </otherwise>
        </choose>
    </select>

    <update id="initUpdateInterfacePrincipalMap">
        UPDATE TAN0214
        SET
        MONITOR_YN = 'N'
        WHERE USER_ID = #{userId, jdbcType=VARCHAR}
        AND TYPE = #{principalType, jdbcType=VARCHAR}
    </update>

    <select id="getNodePathOfRequirementList" resultMap="requirementResultMapForList">
        SELECT
        	----------------------
        	-- requirement(Main)
        	----------------------
        	a.REQUIREMENT_ID
        	,a.REQUIREMENT_NM
        	,a.STATUS
        	,b.NM AS STATUS_NM
        	----------------------
        	-- business(Association on Requirement)
        	----------------------
        	,a.BUSINESS_ID
        	,a.BUSINESS_NM
        	,a.BUSINESS_CD
        	----------------------
        	-- interface(Association on Requirement)
        	----------------------
        	,a.INTERFACE_ID
        	,a.INTEGRATION_ID
        	,a.INTERFACE_NM
        	,a.CHANNEL_ID
        	,a.CHANNEL_NM
        	----------------------
        	-- systemList(Collection on Requirement)
        	----------------------
        	,a.SYSTEM_ID
        	,a.SYSTEM_NM
        	,a.SYSTEM_CD
        	,a.SEQ as SYS_SEQ
        	,a.NODE_TYPE AS SYS_NODE_TYPE
        	,c.NM AS SYS_NODE_TYPE_NM
        	,a.SERVICE
        	,a.SERVICE_DESC
        	,a.RESOURCE_TYPE
        	,a.ORG_ID
        	,a.ORG_NM
        	,a.ORG_CD
        	,a.DATA_FREQ_INPUT
        	,d.NM AS RESOURCE_NM
        	,a.REG_DATE
        	,a.MOD_DATE
		FROM (
        	SELECT
        		a.REQUIREMENT_ID
        		,a.REQUIREMENT_NM
        		,a.STATUS
        		,b.BUSINESS_ID
		        ,b.BUSINESS_NM
		        ,b.BUSINESS_CD
		        ,c.INTERFACE_ID
		        ,c.INTEGRATION_ID
		        ,c.INTERFACE_NM
		        ,c.SYSTEM_ID
		        ,c.SYSTEM_NM
		        ,c.SYSTEM_CD
		        ,c.SEQ
		        ,c.NODE_TYPE
		        ,c.SERVICE
		        ,c.SERVICE_DESC
		        ,c.RESOURCE_TYPE
		        ,c.ORG_ID
		        ,c.ORG_NM
		        ,c.ORG_CD
		        ,c.DATA_FREQ_INPUT
		        ,e.CHANNEL_ID
		        ,e.CHANNEL_NM
		        ,a.REG_DATE
		        ,a.MOD_DATE
        	FROM TAN0101 a
        	INNER JOIN TIM0301 b ON a.BUSINESS_ID = b.BUSINESS_ID
        <choose>
            <when test="isInterfaceAdmin != null and isInterfaceAdmin eq 'Y'.toString()">
            </when>
            <otherwise>
			INNER JOIN
            -----------------------------------------------
            -- 데이터 엑세스 권한 별 인터페이스 조회
            -----------------------------------------------
            (
				SELECT
                	DISTINCT
                	TSU0220.INTERFACE_ID
                FROM
                -----------------------------------------------
                -- 로그인 사용자 데이터 엑세스 권한 조회(공통)
                -----------------------------------------------
                (
                	SELECT
                		DISTINCT
                		TSU0219.USER_ID   AS USER_ID,
                		TSU0221.C_ROLE_ID AS ROLE_ID,
                		TSU0221.DEPTH     AS DEPTH
                	FROM
                	(
                		SELECT
                			TSU0101.USER_ID,
                			TSU0219.ROLE_ID
                		FROM TSU0101 TSU0101
                		INNER JOIN TSU0219 TSU0219 ON
                		TSU0101.USER_ID = TSU0219.USER_ID
                		WHERE 1 = 1
                		AND TSU0101.DEL_YN = 'N'
                		AND TSU0101.USER_ID = #{userId}
                	) TSU0219
                	INNER JOIN TSU0221 TSU0221
                	ON TSU0219.ROLE_ID = TSU0221.P_ROLE_ID
                	ORDER BY USER_ID, C_ROLE_ID
                ) ACCESS_ROLE
                -----------------------------------------------
                -- 데이터 엑세스 권한 :: 인터페이스 맵핑 조인
                -----------------------------------------------
                INNER JOIN TSU0220 TSU0220 ON
                ACCESS_ROLE.ROLE_ID = TSU0220.ROLE_ID
                UNION
                -----------------------------------------------
                -- 로그인 사용자 본인이 등록한 인터페이스 목록 조회
                -----------------------------------------------
                SELECT INTERFACE_ID
                FROM TAN0201
                WHERE REG_USER = #{userId}
			) ACCESS_ROLE_INTF
			ON A.INTERFACE_ID = ACCESS_ROLE_INTF.INTERFACE_ID
            </otherwise>
        </choose>
        	LEFT OUTER JOIN (
        		SELECT
        			a.SYSTEM_ID
			        ,a.SYSTEM_NM
			        ,a.SYSTEM_CD
			        ,b.INTERFACE_ID
			        ,c.INTEGRATION_ID
			        ,c.INTERFACE_NM
			        ,c.DATA_FREQ_INPUT
			        ,b.SEQ
			        ,b.NODE_TYPE
			        ,b.SERVICE
			        ,b.SERVICE_DESC
			        ,b.RESOURCE_TYPE
			        ,h.ORG_ID
			        ,h.ORG_NM
			        ,h.ORG_CD
        		FROM TAN0213 b
        		INNER JOIN TIM0101 a ON a.SYSTEM_ID = b.SYSTEM_ID
        		INNER JOIN TAN0201 c ON c.INTERFACE_ID = b.INTERFACE_ID
        		INNER JOIN (
        			SELECT
				        a.ORG_ID
				        , a.ORG_NM
				        , a.ORG_CD
				        , b.SYSTEM_ID
        			FROM TIM0401 a
        			INNER JOIN TIM0403 b ON a.ORG_ID = b.ORG_ID
        		) h ON h.SYSTEM_ID = b.SYSTEM_ID
        		WHERE b.DEL_YN = 'N'
        	) c ON a.INTERFACE_ID = c.INTERFACE_ID
        	LEFT OUTER JOIN TAN0201 d ON d.INTERFACE_ID = a.INTERFACE_ID
        	INNER JOIN (
        		SELECT
        			CHANNEL_ID
        			,CHANNEL_NM
        		FROM TIM0002
        		WHERE DEL_YN = 'N'
        	) e ON d.CHANNEL_ID = e.CHANNEL_ID
        	WHERE a.DEL_YN = 'N'
        ) a
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'AN' AND LEVEL2 = '01') b ON a.STATUS = b.CD
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '08') c ON a.NODE_TYPE = c.CD
        LEFT OUTER JOIN (SELECT CD, NM FROM TSU0301 WHERE LEVEL1 = 'IM' AND LEVEL2 = '04') d ON a.RESOURCE_TYPE = d.CD
        WHERE 1 = 1
        AND a.INTEGRATION_ID IN (
        	SELECT GROUP_ID || '_' || INTF_ID
        	FROM NODEINFO
        	WHERE HOST_ID  IN (
        		SELECT AGENT_NM FROM TIM0209
        		WHERE DEL_YN = 'N'
        		AND SERVER_ID = #{serverId}
        	)
        )
        ORDER BY a.MOD_DATE DESC nulls last, a.REG_DATE DESC, a.CHANNEL_NM, a.BUSINESS_NM, a.REQUIREMENT_NM, a.INTERFACE_NM, a.STATUS
    </select>

    <select id="getRequirementIdList" resultType="String">
        SELECT REQUIREMENT_ID FROM TAN0101 WHERE DEL_YN = 'N' ORDER BY REQUIREMENT_ID
    </select>

    <!--인터페이스 삭제 ,
       릴레이션의 더 존재하면 삭제문 추가 필요함.
       delete from tan0327;
       delete from top0404;
       delete from tan0103;
       delete from tan0101;
       delete from tan0213;
       delete from tan0218;
       delete from tan0219;
       delete from tan0201;
    -->
    <delete id="deleteTAN0327">
        DELETE FROM TAN0327
    </delete>
    <delete id="deleteTOP0404">
        DELETE FROM TOP0404
    </delete>
    <delete id="deleteTAN0103">
        DELETE FROM TAN0103
    </delete>
    <delete id="deleteTAN0101">
        DELETE FROM TAN0101
    </delete>
    <delete id="deleteTAN0213">
        DELETE FROM TAN0213
    </delete>
    <delete id="deleteTAN0218">
        DELETE FROM TAN0218
    </delete>
    <delete id="deleteTAN0219">
        DELETE FROM TAN0219
    </delete>
    <delete id="deleteTAN0201">
        DELETE FROM TAN0201
    </delete>

    <delete id="deleteTAN0327ByIntegrationId">
        DELETE FROM TAN0327 WHERE REQUIREMENT_ID = (
        	SELECT a.REQUIREMENT_ID FROM TAN0101 a, TAN0201 b WHERE a.INTERFACE_ID = b.INTERFACE_ID AND b.INTEGRATION_ID = #{integrationId}
        )
    </delete>

    <delete id="deleteTOP0404ByIntegrationId">
        DELETE FROM TOP0404 WHERE REQUIREMENT_ID = (
        	SELECT a.REQUIREMENT_ID FROM TAN0101 a, TAN0201 b WHERE a.INTERFACE_ID = b.INTERFACE_ID AND b.INTEGRATION_ID = #{integrationId}
        )
    </delete>

    <delete id="deleteTAN0103ByIntegrationId">
        DELETE FROM TAN0103 WHERE REQUIREMENT_ID = (
        	SELECT a.REQUIREMENT_ID FROM TAN0101 a, TAN0201 b WHERE a.INTERFACE_ID = b.INTERFACE_ID AND b.INTEGRATION_ID = #{integrationId}
        )
    </delete>

    <delete id="deleteTAN0101ByIntegrationId">
        DELETE FROM TAN0101 WHERE INTERFACE_ID = (
        	SELECT b.INTERFACE_ID FROM TAN0201 b WHERE b.INTEGRATION_ID = #{integrationId}
        )
    </delete>

    <delete id="deleteTAN0213ByIntegrationId">
        DELETE FROM TAN0213 WHERE INTERFACE_ID = (
        	SELECT b.INTERFACE_ID FROM TAN0201 b WHERE b.INTEGRATION_ID = #{integrationId}
        )
    </delete>

    <delete id="deleteTAN0218ByIntegrationId">
        DELETE FROM TAN0218 WHERE INTERFACE_ID = (
        	SELECT b.INTERFACE_ID FROM TAN0201 b WHERE b.INTEGRATION_ID = #{integrationId}
        )
    </delete>

    <delete id="deleteTAN0219ByIntegrationId">
        DELETE FROM TAN0219 WHERE INTERFACE_ID = (
        	SELECT b.INTERFACE_ID FROM TAN0201 b WHERE b.INTEGRATION_ID = #{integrationId}
        )
    </delete>

    <delete id="deleteTAN0201ByIntegrationId">
        DELETE FROM TAN0201 WHERE INTEGRATION_ID = #{integrationId}
    </delete>


	<select id="getRequirementIdByInterfaceId" resultType="String">
		SELECT REQUIREMENT_ID FROM TAN0101 WHERE INTERFACE_ID  = #{interfaceId} AND DEL_YN = 'N' ORDER BY REG_DATE
	</select>



	<select id="getCurrentHistoryVersion" resultType="int">
		<choose>
			<when test="_databaseId == 'postgres'">
				SELECT COALESCE(MAX(VERSION::numeric),0) FROM TAN0327
				 WHERE REQUIREMENT_ID = (SELECT MAX(REQUIREMENT_ID) FROM TAN0101 WHERE  INTERFACE_ID = #{interfaceId, jdbcType=VARCHAR})
			</when>
			<otherwise>
				SELECT NVL(MAX(TO_NUMBER(VERSION)),0) FROM TAN0327
				 WHERE REQUIREMENT_ID = (SELECT MAX(REQUIREMENT_ID) FROM TAN0101 WHERE  INTERFACE_ID = #{interfaceId, jdbcType=VARCHAR})
			</otherwise>
		</choose>
	</select>


</mapper>