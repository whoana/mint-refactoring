<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
    <context:component-scan base-package="
            pep.per.mint.front.controller,
            pep.per.mint.front.aop,
            pep.per.mint.front.service,
            pep.per.mint.front.scheduler,
            pep.per.mint.front.router" />

    <context:component-scan base-package="
            pep.per.mint.batch
           ,pep.per.mint.batch.job.an
           ,pep.per.mint.batch.job.co
           ,pep.per.mint.batch.job.op
           ,pep.per.mint.batch.job.su" />

    <context:component-scan base-package="
            pep.per.mint.database.service.co
           ,pep.per.mint.database.service.an
           ,pep.per.mint.database.service.au
           ,pep.per.mint.database.service.en
           ,pep.per.mint.database.service.im
           ,pep.per.mint.database.service.op
           ,pep.per.mint.database.service.rt
           ,pep.per.mint.database.service.su
           ,pep.per.mint.database.service.ut
           ,pep.per.mint.database.service.tu
           ,pep.per.mint.database.service.vc
           ,pep.per.mint.database.service.inhouse
           ,pep.per.mint.database.batch.op
           ,pep.per.mint.database.batch.su" />

    <context:component-scan base-package="
            pep.per.mint.inhouse
           ,com.mocomsys.iip.inhouse.wrapper
           ,pep.per.mint.inhouse.ism" />

	<context:component-scan base-package="pep.per.mint.endpoint"/>
	 

    <aop:aspectj-autoproxy/>
    <context:annotation-config />
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <default-servlet-handler/>
    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven />

    <task:executor id="frontManagementExecutor" pool-size="50-100" queue-capacity="1000" rejection-policy="ABORT"/>
    <task:scheduler id="frontManagementScheduler" pool-size="10"/>
    <task:annotation-driven executor="frontManagementExecutor" scheduler="frontManagementScheduler"/>


    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/" />

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>

    <beans:bean id="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <beans:property name="basename" value="classpath:messages/messages" />
        <beans:property name="defaultEncoding" value="UTF-8" />
    </beans:bean>

    <beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <beans:property name="defaultLocale" value="ko_KR" />
        <beans:property name="cookieName" value="myAppLocaleCookie"></beans:property>
        <beans:property name="cookieMaxAge" value="3600"></beans:property>
    </beans:bean>

    <interceptors>
        <beans:bean
            class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <beans:property name="paramName" value="locale" />
        </beans:bean>
        <beans:bean class="pep.per.mint.front.filter.CommonInterceptor"></beans:bean>
    </interceptors>


    <beans:bean id="frontEnvironments" class="pep.per.mint.front.env.FrontEnvironments" init-method="init">

        <beans:property name="frontLoggingYn" value="N"/>
        <beans:property name="frontLogOptionMap">
            <beans:map>
                <beans:entry key="execution(RequirementController.createRequirement(..))">
                    <beans:bean class="pep.per.mint.common.data.basic.monitor.FrontLogOption">
                        <beans:property name="loggingYn" value="Y"/>
                        <beans:property name="saveRequestMsg" value="Y"/>
                        <beans:property name="saveResponseMsg" value="Y"/>
                    </beans:bean>
                </beans:entry>
                <beans:entry key="execution(RequirementController.updateRequirement(..))">
                    <beans:bean class="pep.per.mint.common.data.basic.monitor.FrontLogOption">
                        <beans:property name="loggingYn" value="Y"/>
                        <beans:property name="saveRequestMsg" value="Y"/>
                        <beans:property name="saveResponseMsg" value="Y"/>
                    </beans:bean>
                </beans:entry>
                <beans:entry key="execution(CommonController.login(..))">
                    <beans:bean class="pep.per.mint.common.data.basic.monitor.FrontLogOption">
                        <beans:property name="loggingYn" value="Y"/>
                        <beans:property name="saveRequestMsg" value="Y"/>
                        <beans:property name="saveResponseMsg" value="Y"/>
                    </beans:bean>
                </beans:entry>
            </beans:map>
        </beans:property>
        <beans:property name="systemEncoding" value="UTF-8"/>
        <beans:property name="interfaceDataAccessRoleList">
            <beans:list>
                <beans:bean class="pep.per.mint.common.data.basic.UserRole">
                    <beans:property name="roleId" value="UR00000001"/>
                    <beans:property name="roleNm" value="포털 시스템 어드민"/>
                    <beans:property name="isInterfaceAdmin" value="Y"/>
                </beans:bean>
                <beans:bean class="pep.per.mint.common.data.basic.UserRole">
                    <beans:property name="roleId" value="UR00000002"/>
                    <beans:property name="roleNm" value="결재 관리자"/>
                    <beans:property name="isInterfaceAdmin" value="Y"/>
                </beans:bean>
                <beans:bean class="pep.per.mint.common.data.basic.UserRole">
                    <beans:property name="roleId" value="UR00000003"/>
                    <beans:property name="roleNm" value="인터페이스 어드민"/>
                    <beans:property name="isInterfaceAdmin" value="Y"/>
                </beans:bean>
            </beans:list>
        </beans:property>
    </beans:bean>



    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <beans:property name="defaultEncoding" value="UTF8"/>
        <beans:property name="maxInMemorySize" value="1024000"/>
        <beans:property name="maxUploadSize" value="20480000"/>
        <beans:property name="uploadTempDir" value="./WEB-INF/uploadTemp"/>
    </beans:bean>

    <beans:bean id="fileUploadController" class="pep.per.mint.front.controller.ut.FileUploadController"/>

    <beans:bean id="rsakeyManager" class="pep.per.mint.front.security.RSAKeyManager"/>

    <beans:bean id="restTemplate" class="org.springframework.web.client.RestTemplate"/>

    <beans:bean id="eucKrRestTemplate" class="org.springframework.web.client.RestTemplate"/>

    <beans:bean id="dataSourceSpied" class="org.springframework.jndi.JndiObjectFactoryBean">
        <beans:property name="jndiName" value="jdbc/iip-db"/>
        <beans:property name="resourceRef" value="true"/>
	</beans:bean>
	<!--
 DB SQL 출력 수정  위에 있는  id 값을   dataSource  dataSourceSpied 로 변경
  -->
	<beans:bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<beans:constructor-arg ref="dataSourceSpied" />
		<beans:property name="logFormatter">
			<beans:bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<beans:property name="loggingType" 	value="MULTI_LINE" />
				<beans:property name="sqlPrefix" 	value="SQL:::  " />
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="ifmDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <beans:property name="jndiName" value="jdbc/iip-db"/>
        <beans:property name="resourceRef" value="true"/>
    </beans:bean>



    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>

    <beans:bean id="ifmTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <beans:property name="dataSource" ref="ifmDataSource" />
    </beans:bean>

    <!-- iip mapper interface scanner -->
    <beans:bean id="tagMapperScannerConfigurer"  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <beans:property name="basePackage" value="pep.per.mint.batch.mapper.an, pep.per.mint.batch.mapper.co, pep.per.mint.batch.mapper.op, pep.per.mint.batch.mapper.su, pep.per.mint.inhouse.sms.database" />
        <beans:property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </beans:bean>

    <!-- ifm mapper interface scanner -->
    <beans:bean id="ifmMapperScannerConfigurer"  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <beans:property name="basePackage" value="pep.per.mint.batch.mapper.ifm" />
        <beans:property name="sqlSessionFactoryBeanName" value="ifmSqlSessionFactory"/>
    </beans:bean>

    <!-- sqlSessionFactory bean -->
    <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="typeAliasesPackage" value="pep.per.mint.common.data.basic" />
        <beans:property name="databaseIdProvider" ref="databaseIdProvider"/>
    </beans:bean>

    <!-- sqlSessionFactory bean For IFM -->
    <beans:bean id="ifmSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="dataSource" ref="ifmDataSource" />
        <beans:property name="typeAliasesPackage" value="pep.per.mint.common.data.basic" />
    </beans:bean>


    <!--  Properties resource for oracle test datasource-->
	<util:properties id="datasourceProperties" location="classpath:/config/datasource.properties"/>
    <beans:bean id="gsspDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<beans:property name="driverClassName"	value="#{datasourceProperties['driverClassName']}" />
		<beans:property name="url" 				value="#{datasourceProperties['url']}" />
		<beans:property name="username" 		value="#{datasourceProperties['username']}" />
		<beans:property name="password" 		value="#{datasourceProperties['password']}" />
		<beans:property name="maxActive" 		value="4" />
		<beans:property name="maxIdle" 			value="2"/>
	    <beans:property name="maxWait" 			value="#{datasourceProperties['maxWait']}"/>
	    <beans:property name="validationQuery" 	value="#{datasourceProperties['validationQuery']}"/>
	    <beans:property name="testOnBorrow" 	value="#{datasourceProperties['testOnBorrow']}"/>
	    <beans:property name="testOnReturn" 	value="#{datasourceProperties['testOnReturn']}"/>
	    <beans:property name="testWhileIdle" 	value="#{datasourceProperties['testWhileIdle']}"/>
	    <beans:property name="timeBetweenEvictionRunsMillis" value="#{datasourceProperties['timeBetweenEvictionRunsMillis']}"/>
	</beans:bean>

<!--    <beans:bean id="gsspDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <beans:property name="jndiName" value="jdbc/gssp-db"/>
        <beans:property name="resourceRef" value="true"/>
    </beans:bean>-->

    <beans:bean id="gsspTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <beans:property name="dataSource" ref="gsspDataSource" />
    </beans:bean>

    <beans:bean id="gsspSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="dataSource" ref="gsspDataSource" />
        <beans:property name="typeAliasesPackage" value="pep.per.mint.common.data.basic" />
    </beans:bean>

    <beans:bean id="gsspMapperScannerConfigurer"  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <beans:property name="basePackage" value="pep.per.mint.batch.mapper.gssp" />
        <beans:property name="sqlSessionFactoryBeanName" value="gsspSqlSessionFactory"/>
    </beans:bean>

    <beans:bean id="batchManager" class="pep.per.mint.batch.BatchManager" init-method="loadJob" destroy-method="stopBachManager">
        <beans:property name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <beans:property name="ifmSqlSessionFactory" ref="ifmSqlSessionFactory"/>
        <beans:property name="gsspSqlSessionFactory" ref="gsspSqlSessionFactory"/>
    </beans:bean>

	<beans:bean id="vendorProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	    <beans:property name="properties">
	        <beans:props>
	        <!--
	       		DatabaseMetaData#getDatabaseProductName()에 의해 리턴된 문자열로 databaseId를 설정한다

	            <beans:prop key="SQL Server">sqlserver</beans:prop>
	            <beans:prop key="DB2">db2</beans:prop>
	            <beans:prop key="MySQL">mysql</beans:prop>
	        -->
	            <beans:prop key="Oracle">oracle</beans:prop>
	            <beans:prop key="Altibase">altibase</beans:prop>
	            <beans:prop key="Tibero">tibero</beans:prop>
	            <beans:prop key="PostgreSQL">postgres</beans:prop>
	        </beans:props>
	    </beans:property>
	</beans:bean>

	<beans:bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
	    <beans:property name="properties" ref="vendorProperties"/>
	</beans:bean>

    <!-- sqlSessionFactory bean -->
    <beans:bean id="iipSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="typeAliasesPackage" value="pep.per.mint.common.data.basic" />
        <beans:property name="databaseIdProvider" ref="databaseIdProvider"/>
    </beans:bean>


    <!-- mybatis mapper interface scanner -->
    <beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">

        <beans:property name="basePackage" value="
                 pep.per.mint.database.mapper.co
                ,pep.per.mint.database.mapper.an
                ,pep.per.mint.database.mapper.au
                ,pep.per.mint.database.mapper.en
                ,pep.per.mint.database.mapper.im
                ,pep.per.mint.database.mapper.op
                ,pep.per.mint.database.mapper.rt
                ,pep.per.mint.database.mapper.su
                ,pep.per.mint.database.mapper.ut
                ,pep.per.mint.database.mapper.tu
                ,pep.per.mint.database.mapper
                ,pep.per.mint.database.batch.op
                ,pep.per.mint.database.batch.su
                " />
        <beans:property name="sqlSessionFactoryBeanName" value="iipSqlSessionFactory"/>
    </beans:bean>



    <!-- cache manager -->
    <beans:bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <beans:property name="caches">
            <beans:set>
                <beans:bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="default"/>
                <beans:bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="authorityCategories"/>
                <beans:bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="authorityPolicies"/>
                <beans:bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="authorityRegistrationPolicies"/>
                <beans:bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="authorities"/>
            </beans:set>
        </beans:property>
    </beans:bean>
    <!-- Global Authority Register Batch -->
    <beans:bean id="authorityRegisterBatchService" class="pep.per.mint.database.service.au.AuthorityRegisterBatchService">
        <beans:property name="sqlSessionFactory"  ref="iipSqlSessionFactory"/>
    </beans:bean>


</beans:beans>
